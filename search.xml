<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>天马行空</title>
      <link href="/2022/08/27/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/0.%E5%A4%A9%E9%A9%AC%E8%A1%8C%E7%A9%BA/"/>
      <url>/2022/08/27/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/0.%E5%A4%A9%E9%A9%AC%E8%A1%8C%E7%A9%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="天马行空"><a href="#天马行空" class="headerlink" title="天马行空"></a>天马行空</h1><blockquote><p>本文收录所有零碎想法，也许不切实际，也许很魔幻…</p></blockquote><h2 id="一、万能MarkDown"><a href="#一、万能MarkDown" class="headerlink" title="一、万能MarkDown"></a>一、万能MarkDown</h2><p>⭐Typora + Jupyter</p><p><strong>简介：</strong></p><table><thead><tr><th>特点</th><th>实现</th></tr></thead><tbody><tr><td>1.实时渲染</td><td></td></tr><tr><td>2.自定义样式</td><td></td></tr><tr><td>3.代码样式支持</td><td></td></tr><tr><td>4.实时运行SQL</td><td></td></tr></tbody></table><h2 id="二、可视化解析代码"><a href="#二、可视化解析代码" class="headerlink" title="二、可视化解析代码"></a>二、可视化解析代码</h2><h3 id="2-1-可视化生成LINUX语句"><a href="#2-1-可视化生成LINUX语句" class="headerlink" title="2.1 可视化生成LINUX语句"></a>2.1 可视化生成LINUX语句</h3><p>1.简化学习linux命令的成本</p><p>2.命令翻译</p><p>3.快速生成命令</p><h3 id="2-2-可视化生成PLSQL语句"><a href="#2-2-可视化生成PLSQL语句" class="headerlink" title="2.2 可视化生成PLSQL语句"></a>2.2 可视化生成PLSQL语句</h3><p>实现可能：</p><p>1.参考拖拽编程block</p><p>2.程序员鱼皮json转sql</p><h2 id="三、共享API"><a href="#三、共享API" class="headerlink" title="三、共享API"></a>三、共享API</h2><p>共享API –&gt; 服务器负载提升 –&gt; 负载均衡</p><p><strong>理念：</strong></p><p>1.所有需要使用此api的用户，都有将此api共享的义务（即在用户服务器上对外共享此api）</p><p><strong>注意点：</strong></p><p>1.需要统一管理用户开放的api</p><p>2.避免用户使用恶意代码</p><h2 id="四、小白玩转互联网"><a href="#四、小白玩转互联网" class="headerlink" title="四、小白玩转互联网"></a>四、小白玩转互联网</h2><p>要求：需要从老年人的角度开发，针对老年用户开发</p><p>功能点：</p><p>一键下载&#x2F;删除软件</p><p>快速打开应用</p><p>简化操作步骤（如：网购，快递）</p><h2 id="五、Markdown导航页"><a href="#五、Markdown导航页" class="headerlink" title="五、Markdown导航页"></a>五、Markdown导航页</h2><p>示例：<a href="https://nav.sankki.com/">https://nav.sankki.com/</a></p><p>使用markdown语法快速生成导航页</p><h2 id="六、语音自动写代码"><a href="#六、语音自动写代码" class="headerlink" title="六、语音自动写代码"></a>六、语音自动写代码</h2><p>通过描述代码让机器帮助你完成代码的编写工作。</p><p>口述 –&gt; 代码</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>知识管理展示</title>
      <link href="/2022/08/27/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/1.%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B1%95%E7%A4%BA/"/>
      <url>/2022/08/27/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/1.%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B1%95%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="知识管理展示"><a href="#知识管理展示" class="headerlink" title="知识管理展示"></a>知识管理展示</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/08/27/hello-world/"/>
      <url>/2022/08/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>    <div id="aplayer-LRoxTBLp" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="000PeZCQ1i4XVs" data-server="tencent" data-type="artist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#3F51B5"></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>补充知识</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h1 id="on与where的区别"><a href="#on与where的区别" class="headerlink" title="on与where的区别"></a>on与where的区别</h1><p>1.在内连接即<code>inner join</code>中&#x3D;&#x3D;没有区别&#x3D;&#x3D;，</p><p>2.在使用<code>left jion</code>时，<code>on</code>和<code>where</code>条件的区别如下：<br>1、on条件是&#x3D;&#x3D;在生成临时表时使用的条件&#x3D;&#x3D;，它不管on中的条件是否为真，都会返回左边表中的记录。<br>2、where条件是&#x3D;&#x3D;在临时表生成好后，再对临时表进行过滤的条件&#x3D;&#x3D;。这时已经没有<code>left join</code>的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。</p><h1 id="ROWNUM"><a href="#ROWNUM" class="headerlink" title="ROWNUM"></a>ROWNUM</h1><p>1.只能从1开始</p><h1 id="删除表内重复数据"><a href="#删除表内重复数据" class="headerlink" title="删除表内重复数据"></a>删除表内重复数据</h1><h1 id="PLSQL中的字符串"><a href="#PLSQL中的字符串" class="headerlink" title="PLSQL中的字符串"></a>PLSQL中的字符串</h1><h3 id="1-在使用execute-immediate时"><a href="#1-在使用execute-immediate时" class="headerlink" title="1.在使用execute immediate时"></a>1.在使用execute immediate时</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v_sql := &#x27;select * from emp where ename=&#x27;||&#x27;&#x27;&#x27;&#x27;||v_ename||&#x27;&#x27;&#x27;&#x27;;</span><br></pre></td></tr></table></figure><blockquote><p>此时需要额外添加单引号，因为这是字符串类型（执行时需要有引号）。</p></blockquote><h3 id="2-在使用select语句时"><a href="#2-在使用select语句时" class="headerlink" title="2.在使用select语句时"></a>2.在使用select语句时</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * into v_temp from emp where ename=v_ename;</span><br></pre></td></tr></table></figure><blockquote><p>此时不需要加单引号，程序可以判断出变量为字符串类型。</p></blockquote><h1 id="PLSQL立刻执行-EXECUTE-IMMEDIATE-问题"><a href="#PLSQL立刻执行-EXECUTE-IMMEDIATE-问题" class="headerlink" title="PLSQL立刻执行(EXECUTE IMMEDIATE)问题"></a>PLSQL立刻执行(EXECUTE IMMEDIATE)问题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BEGIN </span><br><span class="line">EXECUTE IMMEDIATE &#x27;create table stt(a number)&#x27;; </span><br><span class="line">INSERT INTO stt VALUES(1); </span><br><span class="line">COMMIT; </span><br><span class="line">END; </span><br><span class="line">这条语句， 为什么会报错 表stt找不到呢？不是先执行建表语句了吗？</span><br></pre></td></tr></table></figure><blockquote><p>答：</p><p>ddl在pl-sql块里必须动态执行，</p><p>同时也影响依赖它的sql必须动态执行，</p><p>同时它还会自动提交之前的事务。  少用为妙。</p></blockquote><p>将代码改为如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXECUTE IMMEDIATE &#x27;create table stt(a number)&#x27;;</span><br><span class="line">EXECUTE IMMEDIATE &#x27;INSERT INTO stt VALUES(1)&#x27;;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><h1 id="amp-提示符"><a href="#amp-提示符" class="headerlink" title="&amp;提示符"></a>&amp;提示符</h1><p>&amp;弹窗输入 可以替换所有地方，本质和你直接写代码没有区别</p><p>&#x3D;&#x3D;相当于弹出输入框让你输入代码&#x3D;&#x3D;</p><h1 id="commit在块中-x2F-dml在块中"><a href="#commit在块中-x2F-dml在块中" class="headerlink" title="commit在块中&#x2F;dml在块中"></a>commit在块中&#x2F;dml在块中</h1><blockquote><p>在块中使用dml语句时，提交也放在块中</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> 拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 补充知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命名规范</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/</url>
      
        <content type="html"><![CDATA[<h1 id="一、表名和列表规范"><a href="#一、表名和列表规范" class="headerlink" title="一、表名和列表规范"></a>一、表名和列表规范</h1><ol><li><p>必须以字母开头</p></li><li><p>长度不能超过30字符</p></li><li><p>不能使用oracle的保留字</p></li><li><p>只能使用如下字符 A-Z，a-z，0-9，$，#等</p></li></ol><h1 id="二、数据类型"><a href="#二、数据类型" class="headerlink" title="二、数据类型"></a>二、数据类型</h1><p>1.char    </p><p>定长 最大2000个字符</p><p>例子:char(10) ‘小明’ 前四个字符存放’小明’，后面添加6个空格补全,虽然浪费空间，但是查询速度极快.</p><p>2.varchar2(20) 变长    </p><p>最大4000个字符.</p><p>例子:varchar2(20)    ‘小明’ oracle分配四个字符.这样可以节省空间.</p><p>3.clob(character large object)    </p><p>字符型大对象    最大4G</p><p>4.number(数字类型)    </p><p>范围-10的38次方到10的38次方    可以表示整数,也可以表示小数.</p><p>例子:number(5,2)    表示一个小时有5位有效数,2为小数    范围    -999.99<del>999.99<br>    number(5)    表示一个五位整数    范围-99999</del>99999</p><p>5.date(日期类型)    </p><p>包含年月日和时分秒.</p><p>6.timestamp(日期类型)    </p><p>这是oracle9i对date类型的扩展,精度较高,毫秒级.</p><p>7.blob(二进制类型)    </p><p>可以存放图片&#x2F;声音    最大4G（出于安全考虑可以存放至数据库,一般存放图片服务器下,存放路径以访问）</p>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> 拓展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命名规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>练习题</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h1><h2 id="触发器练习题"><a href="#触发器练习题" class="headerlink" title="触发器练习题"></a>触发器练习题</h2><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/%E7%BB%83%E4%B9%A0%E9%A2%98/image-20220827065009335.png" alt="image-20220827065009335"></p><p>1、写一个存储过程，添加一条学生信息，只允许有一个参数，需要判断添加的班级否存在，不存在抛出异常。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>2、写一存储过程，分配宿舍，传入一个学生ID和床位编号，返回“学生名入住宿舍名”，并变更宿舍信息（包括床位的状态等）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>3、写一个存储过程，根据学生编号将一个学生的所有信息从数据库中删除，学生信息包含班级，成绩，宿舍等信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>4、有一个学生班级记录表，字段如下：</p><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/%E7%BB%83%E4%B9%A0%E9%A2%98/image-20220827065154171.png" alt="image-20220827065154171"></p><p>当前学生报到或者转变班级时，向clazz_history表中添加一条记录(触发器实现) </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql练习题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDL语句</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/8.DDL/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/8.DDL/</url>
      
        <content type="html"><![CDATA[<h1 id="Oracle中的语句"><a href="#Oracle中的语句" class="headerlink" title="Oracle中的语句"></a>Oracle中的语句</h1><h2 id="一、-DQL-语句"><a href="#一、-DQL-语句" class="headerlink" title="一、 DQL 语句"></a>一、 DQL 语句</h2><p>DQL（Data Query Language）语句：数据查询语言，主要是对数据进行查询操作。<br>常用关键字有 SELECT、FROM、WHERE 等。</p><h2 id="二、-DDL-语句"><a href="#二、-DDL-语句" class="headerlink" title="二、 DDL 语句"></a>二、 DDL 语句</h2><p>DDL（Data Definition Language）语句： 数据定义语言，主要是进行定义&#x2F;改变表的结构、数据类型、表之间的链接等操作。<br>常用的语句关键字有 CREATE、DROP、ALTER 等。</p><h2 id="三、-DML-语句"><a href="#三、-DML-语句" class="headerlink" title="三、 DML 语句"></a>三、 DML 语句</h2><p>DML（Data Manipulation Language）语句: 数据操纵语言，主要是对数据进行增加、删除、修改操作。</p><p>常用的语句关键字有 INSERT、DELETE、 UPDATE等。</p><h2 id="四、-DCL-语句"><a href="#四、-DCL-语句" class="headerlink" title="四、 DCL 语句"></a>四、 DCL 语句</h2><p>DCL（Data Control Language）语句： 数据控制语言，主要是用来设置&#x2F;更改数据库用户权限。<br>常用关键字有 GRANT、REVOKE 等。</p><h1 id="DDL语句"><a href="#DDL语句" class="headerlink" title="DDL语句"></a>DDL语句</h1><h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><p>语法：CREATE TABLE 表名 (列名1 数据类型(精度),列名2 数据类型(精度),…)</p><blockquote><p>字段之间用逗号隔开</p><p>建表时，里面至少有一列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> C;<span class="comment">--报错</span></span><br></pre></td></tr></table></figure><blockquote><p>已经创建的表不能重复创建（在一个用户下）</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> A;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> A(SNAME <span class="type">CHAR</span>(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><blockquote><p>同一个用户下，表名不能重复；</p><p>同一个表中，列名不能重复</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> C(ENAME <span class="type">CHAR</span>(<span class="number">10</span>),ENAME NUMBER(<span class="number">10</span>));<span class="comment">--报错</span></span><br></pre></td></tr></table></figure><h3 id="1-复制表"><a href="#1-复制表" class="headerlink" title="1.复制表"></a>1.复制表</h3><p><strong>(不会复制约束)</strong></p><p>语法：<code>CREATE</code> <code>TABLE</code> 表名 <code>AS</code> <code>SELECT</code> 想要复制的字段 <code>FROM</code> 被复制的表名 （<code>WHERE</code> 条件）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMPA <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br></pre></td></tr></table></figure><h2 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h2><p>语法：<code>DROP</code> <code>TABLE</code> 表名;</p><blockquote><p>已经删除的表不能再被删除</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> EMPA ;</span><br></pre></td></tr></table></figure><blockquote><p>表只能一张一张的删</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> EMPA,EMPB;<span class="comment">--不能同时删除多张表</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> EMPA EMPB;<span class="comment">--不能同时删除多张表</span></span><br></pre></td></tr></table></figure><h3 id="1-删除表内容"><a href="#1-删除表内容" class="headerlink" title="1.删除表内容"></a>1.删除表内容</h3><p>语法：<code>TRUNCATE</code> <code>TABLE</code> 表名;</p><p>​     <code>DELETE</code> <code>FROM</code> 表名;</p><p>区别：<code>DELETE</code>–删除所有记录,表结构还在,<strong>写日志</strong>,<strong>可以恢复</strong>的,速度<strong>慢</strong>.</p><p>​ <code>TRUNCATE</code>–删除所有记录,表机构还在,<strong>不写日志</strong>,<strong>无法找回</strong>删除的记录,速度<strong>快</strong>.</p><blockquote><p>只能删除表内全部数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> EMPA;</span><br></pre></td></tr></table></figure><h2 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h2><h3 id="1-ADD增加字段"><a href="#1-ADD增加字段" class="headerlink" title="1.ADD增加字段"></a>1.ADD增加字段</h3><p>语法：<code>ALTER</code> <code>TABLE</code> 表名 <code>ADD</code>(字段1 数据类型,字段2 数据类型,…..)</p><blockquote><p>注意：</p><ol><li>如果表内有同名字段，则不能再增加。</li><li>列名（表名）可以为中文（不建议）。</li><li>如果只添加一个字段，可以省略括号（不建议）</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMPA;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMPA <span class="keyword">ADD</span>(姓名 <span class="type">CHAR</span>(<span class="number">10</span>));<span class="comment">--课后练习，创建表或者增加列的时候，名字能不能为中文，数字，特殊符号</span></span><br></pre></td></tr></table></figure><h3 id="2-MODIFY修改数据类型"><a href="#2-MODIFY修改数据类型" class="headerlink" title="2.MODIFY修改数据类型"></a>2.MODIFY修改数据类型</h3><p>语法：<code>ALTER</code> <code>TABLE</code> 表名 <code>MODIFY</code>(字段1 要被修改成的数据类型,字段2 要被修改成的数据类型,…..)</p><blockquote><p>1.列内有数据时，不可以修改成不同类别的数据类型，但是同类的可以修改；</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMPB MODIFY(ENAME <span class="type">CHAR</span>(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMPB MODIFY(ENAME NUMBER(<span class="number">10</span>));<span class="comment">--报错</span></span><br></pre></td></tr></table></figure><blockquote><p>2.列内没有数据时，可以修改成任意的数据类型，任意总长度</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMPA MODIFY(EMPNO <span class="type">DATE</span>);</span><br></pre></td></tr></table></figure><blockquote><p>3.列内有数据时，能够修改数据总长度（精度），能变得更长，不能变得更短（回不去了）,可变长数据类型除外（只要不比内部数据短就行）。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMPB MODIFY(ENAME <span class="type">CHAR</span>(<span class="number">11</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMPB MODIFY(ENAME <span class="type">VARCHAR</span>(<span class="number">7</span>));<span class="comment">--报错，要减小精度或标度，则要修改的列必须为空</span></span><br></pre></td></tr></table></figure><h3 id="3-删除列"><a href="#3-删除列" class="headerlink" title="3.删除列"></a>3.删除列</h3><p>语法：<code>ALTER</code> <code>TABLE</code> 表名 <code>DROP</code> <code>COLUMN</code> 列名;–COLUMN本意是列的意思</p><blockquote><p>注意：</p><ol><li>要删除的列必须存在</li><li>无法删除表内的最后一列，（例如：有8列 随机删除7列后，剩下一列不能删）</li></ol></blockquote><h4 id="删除一列"><a href="#删除一列" class="headerlink" title="删除一列"></a>删除一列</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> column_name;</span><br></pre></td></tr></table></figure><h4 id="删除多列"><a href="#删除多列" class="headerlink" title="删除多列"></a>删除多列</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">DROP</span> (column_1,column_2,...);</span><br></pre></td></tr></table></figure><h3 id="4-重命名"><a href="#4-重命名" class="headerlink" title="4.重命名"></a>4.重命名</h3><p><strong>表</strong>重命名:</p><p>语法：ALTER TABLE 旧表名 RENAME TO 新表名;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emapa rename <span class="keyword">to</span> depta</span><br></pre></td></tr></table></figure><p><strong>列</strong>重命名：</p><p>语法：ALTER TABLE 表名 RENAME COLUMN 旧列名 TO 新列名;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emapa rename <span class="keyword">column</span> a <span class="keyword">to</span> b</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">例如：<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMPA RENAME <span class="keyword">TO</span> DEPTA;</span><br><span class="line"></span><br><span class="line">语法：<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 RENAME <span class="keyword">COLUMN</span> 旧列名 <span class="keyword">TO</span> 新列名;</span><br><span class="line"></span><br><span class="line">例如：<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMPB RENAME <span class="keyword">COLUMN</span> DEPTNO <span class="keyword">TO</span> HANQIANG;</span><br><span class="line"><span class="keyword">SELECT</span> HANQIANG <span class="keyword">FROM</span> EMPB;</span><br><span class="line"></span><br><span class="line">问题：</span><br><span class="line"><span class="number">1.</span>新旧表名、列名可不可以一样？<span class="comment">--不可以</span></span><br><span class="line"><span class="number">2.</span>新表名、列名能不能是中文，特殊符号，数字？</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> DEPTA RENAME <span class="keyword">TO</span> 中文;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 中文 RENAME <span class="keyword">TO</span> 中文<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 中文<span class="number">1</span> RENAME <span class="keyword">TO</span> #;<span class="comment">--报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 中文<span class="number">1</span> RENAME <span class="keyword">TO</span> <span class="string">&#x27;#&#x27;</span>;<span class="comment">--报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 中文<span class="number">1</span> RENAME <span class="keyword">TO</span> &quot;#&quot;;<span class="comment">--可以是特殊符号</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> &quot;#&quot;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &quot;#&quot; RENAME <span class="keyword">TO</span> <span class="number">1</span>;<span class="comment">--报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &quot;#&quot; RENAME <span class="keyword">TO</span> <span class="string">&#x27;1&#x27;</span>;<span class="comment">--报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> &quot;#&quot; RENAME <span class="keyword">TO</span> &quot;1&quot;;<span class="comment">--可以是数字</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> &quot;1&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">--1.RENMAE后面有TO</span></span><br><span class="line"><span class="comment">--2.旧的在前，新的在后</span></span><br><span class="line"><span class="comment">--3.表名、列名可以是字母，中文，特殊符号、数字，但是不建议写后面两个，后面两个书写时需要加上双引号</span></span><br></pre></td></tr></table></figure><h3 id="5-修改表状态"><a href="#5-修改表状态" class="headerlink" title="5.修改表状态"></a>5.修改表状态</h3><p><strong>只读 READ ONLY</strong></p><p>可以对表名进行操作（修改）  不能对表内数据进行修改操作  </p><p>只读状态下可以删除表</p><p><strong>读写 READ WRITE</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法： <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 READ <span class="keyword">ONLY</span> <span class="operator">/</span> READ WRITE;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMPB RENAME <span class="keyword">TO</span> T;<span class="comment">--只读状态下能对表名进行修改操作</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMPB;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> T;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> T RENAME <span class="keyword">COLUMN</span> HANQIANG <span class="keyword">TO</span> A;<span class="comment">--只读状态下不能对表内数据进行修改操作</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> T READ WRITE;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> T;</span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> T;<span class="comment">--只读状态下可以删除表</span></span><br></pre></td></tr></table></figure><h3 id="隐式提交："><a href="#隐式提交：" class="headerlink" title="隐式提交："></a>隐式提交：</h3><blockquote><p>DML语言，比如update，delete，<a href="https://so.csdn.net/so/search?q=insert&spm=1001.2101.3001.7020">insert</a>等修改表中数据的需要commit;<br>DDL语言，比如create，drop等改变表结构的，就不需要写commit（因为内部隐藏了commit）;</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DDL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DML语句</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/9.DML/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/9.DML/</url>
      
        <content type="html"><![CDATA[<h1 id="Oracle中的语句"><a href="#Oracle中的语句" class="headerlink" title="Oracle中的语句"></a>Oracle中的语句</h1><p>一、 DQL 语句<br>DQL（Data Query Language）语句：数据查询语言，主要是对数据进行查询操作。<br>常用关键字有 SELECT、FROM、WHERE 等。</p><p>二、 DDL 语句<br>DDL（Data Definition Language）语句： 数据定义语言，主要是进行定义&#x2F;改变表的结构、数据类型、表之间的链接等操作。<br>常用的语句关键字有 CREATE、DROP、ALTER 等。</p><p>三、 DML 语句<br>DML（Data Manipulation Language）语句: 数据操纵语言，主要是对数据进行增加、删除、修改操作。<br>常用的语句关键字有 INSERT、DELETE、 UPDATE 等。</p><p>四、 DCL 语句<br>DCL（Data Control Language）语句： 数据控制语言，主要是用来设置&#x2F;更改数据库用户权限。<br>常用关键字有 GRANT、REVOKE 等。</p><h1 id="DML语句-数据操纵语言"><a href="#DML语句-数据操纵语言" class="headerlink" title="DML语句 数据操纵语言"></a>DML语句 数据操纵语言</h1><h2 id="一-INSERT-插入"><a href="#一-INSERT-插入" class="headerlink" title="一.INSERT 插入"></a>一.INSERT 插入</h2><h3 id="1-插入整行数据"><a href="#1-插入整行数据" class="headerlink" title="1.插入整行数据"></a>1.插入整行数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 <span class="keyword">VALUES</span>(值<span class="number">1</span>,值<span class="number">2</span>,值...);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> AAA;</span><br></pre></td></tr></table></figure><p>插入字符型数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(ZHUYUXUAN);<span class="comment">--报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(<span class="string">&#x27;ZHUYUXUAN&#x27;</span>);</span><br></pre></td></tr></table></figure><p>可以插入相同的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(<span class="string">&#x27;DUHAO&#x27;</span>,<span class="string">&#x27;HUANGYINGZHENG&#x27;</span>);<span class="comment">--报错，当插入的值超过列数时，值过多，列数得保持一致</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP <span class="keyword">VALUES</span>(<span class="string">&#x27;DUHAO&#x27;</span>,<span class="string">&#x27;HUANGYINGZHENG&#x27;</span>);<span class="comment">--报错，当插入的值少于列数时，没有足够的值，列数得保持一致</span></span><br></pre></td></tr></table></figure><p>插入数值型数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> AAA;</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> AAA;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> AAA MODIFY (ENAME NUMBER(<span class="number">20</span>));</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> AAA;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(<span class="string">&#x27;ABC&#x27;</span>);<span class="comment">--报错，已经修改成了数值型</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(<span class="string">&#x27;123&#x27;</span>);<span class="comment">--隐式转换</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(<span class="number">123</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(TO_DATE(<span class="string">&#x27;1996-12-30&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>));<span class="comment">--不可以</span></span><br></pre></td></tr></table></figure><p>插入日期型数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">VARCHAR2(<span class="number">20</span>)<span class="comment">--20指的是</span></span><br><span class="line"><span class="keyword">SELECT</span> LENGTHB(SYSDATE) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="keyword">SELECT</span> LENGTHB(TO_DATE(<span class="string">&#x27;1996-12-30 16:10:00&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD HH24:MI:SS&#x27;</span>)) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="comment">--日期型的字节长度为11位</span></span><br></pre></td></tr></table></figure><p>以下为拓展内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(<span class="string">&#x27;123&#x27;</span>);<span class="comment">--可以插入字符串</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(<span class="number">123</span>);<span class="comment">--数值型可以变成字符型，是什么类型的直接写成什么类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(SYSDATE<span class="operator">+</span><span class="number">1</span>);<span class="comment">--日期型可以变成字符型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> AAA MODIFY (ENAME VARCHAR2(<span class="number">20</span>));<span class="comment">--修改数据类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> AAA <span class="keyword">VALUES</span>(TO_DATE(<span class="string">&#x27;1996-12-30&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>));<span class="comment">--可以写函数</span></span><br></pre></td></tr></table></figure><h3 id="2-插入部分行数据"><a href="#2-插入部分行数据" class="headerlink" title="2.插入部分行数据"></a>2.插入部分行数据</h3><p><strong>（插入一行内部分数据）</strong></p><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名(字段<span class="number">1</span>,字段<span class="number">2</span>,...) <span class="keyword">VALUES</span>(值<span class="number">1</span>,值<span class="number">2</span>,...)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：<span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP_2(CNAME,ENGLISH) <span class="keyword">VALUES</span>(<span class="string">&#x27;可钦&#x27;</span>,<span class="number">90</span>);</span><br></pre></td></tr></table></figure><p>–没有插入值的地方以空值填充</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP_2(CNAME,ENGLISH) <span class="keyword">VALUES</span>(<span class="string">&#x27;&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP_2(CNAME,ENGLISH) <span class="keyword">VALUES</span>(<span class="keyword">NULL</span>,<span class="number">100</span>);</span><br></pre></td></tr></table></figure><p>–空值可以为两个单引号，中间不写内容，也可以为NULL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">COMMIT</span>;<span class="comment">--提交，在上一次提交之后做的操作都被提交掉</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>;<span class="comment">--回滚，在上一次提交之后做的操作都被回滚掉</span></span><br></pre></td></tr></table></figure><p>–DDL语句默认运行提交，会把在上一次提交之后做的操作都被提交掉</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">TABLE</span> EMP_2 <span class="keyword">ADD</span>(SEX <span class="type">CHAR</span>(<span class="number">10</span>));</span><br></pre></td></tr></table></figure><h3 id="3-从来源表插入数据"><a href="#3-从来源表插入数据" class="headerlink" title="3.从来源表插入数据"></a>3.从来源表插入数据</h3><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名（字段<span class="number">1</span>，字段<span class="number">2</span>） <span class="keyword">SELECT</span> 字段<span class="number">1</span>,字段<span class="number">2</span> <span class="keyword">FROM</span> 数据来源表 <span class="operator">&lt;</span><span class="keyword">WHERE</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>前面写插入到哪些列里面去，后面写插入哪些列的内容</p><ul><li>如果有多个满足条件的会全部插入，如果没有where会把内容全部插入</li><li>如果插入的数据长度大于被插入的列，会报错，需要修改被插入的列的数据类型</li></ul><h2 id="二-UPDATE-更新表"><a href="#二-UPDATE-更新表" class="headerlink" title="二.UPDATE 更新表"></a>二.UPDATE 更新表</h2><p><code>FOR UPDATE</code> 更新表语句</p><p>语法： </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名 <span class="keyword">SET</span> 字段<span class="number">1</span><span class="operator">=</span>新值<span class="number">1</span>,字段<span class="number">2</span><span class="operator">=</span>新值<span class="number">2</span>,...<span class="operator">&lt;</span><span class="keyword">WHERE</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> EMP_2 <span class="keyword">SET</span> CHINESE <span class="operator">=</span> <span class="number">100</span> <span class="keyword">WHERE</span> CNO <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">UPDATE</span> EMP_2 <span class="keyword">SET</span> CHINESE <span class="operator">=</span> <span class="number">100</span> <span class="keyword">WHERE</span> CNO <span class="operator">=</span> <span class="number">7499</span>;</span><br><span class="line"><span class="comment">--加了WHERE限制条件，符合条件的才会被修改</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> EMP_2 <span class="keyword">SET</span> CNO <span class="operator">=</span> <span class="number">100</span> <span class="keyword">WHERE</span> MATHS <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="comment">--修改的内容在SET后面 WHERE 前面</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> EMP_2 <span class="keyword">SET</span> CNO <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="comment">--不加WHERE限制条件，列内所有的都会被修改</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP_2;</span><br></pre></td></tr></table></figure><h2 id="三-DELETE-删除"><a href="#三-DELETE-删除" class="headerlink" title="三.DELETE 删除"></a>三.DELETE 删除</h2><p>–只能删除数据，不能删除表</p><p>语法：<code>DELETE FROM</code> 表名 <code>WHERE</code> 条件;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> EMP_2 <span class="keyword">WHERE</span> CNAME <span class="operator">=</span> <span class="string">&#x27;沉渊&#x27;</span> <span class="keyword">OR</span> CNO <span class="keyword">IN</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">--符合条件的都被会删掉</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> EMP_2;</span><br><span class="line"><span class="comment">--如果DELETE 没有WHERE条件，相当于没有COMMIT的TRUNCATE</span></span><br></pre></td></tr></table></figure><p>事务在处理过程中遇到错误时，点击确定或帮助，会跳过错误，继续执行，直到遇到下一个错误或者结束。</p><p>点击取消或者叉掉，直接结束运行，没有报错的部分会被执行。</p><h2 id="四-事务"><a href="#四-事务" class="headerlink" title="四.事务"></a>四.事务</h2><p><strong>使用一系列语句构成的逻辑工作单元</strong></p><p><code>COMMIT</code> –提交<br><code>ROLLBACK</code> –回滚<br><code>SAVEPOINT</code> 保存点名 –保存点</p><p>思考题：<code>COMMIT</code>和<code>SAVEPOINT</code>连用会怎么样呢？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP_2;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP_2 (CNO) <span class="keyword">VALUES</span> (<span class="number">5</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP_2 (CNO) <span class="keyword">VALUES</span> (<span class="number">6</span>);</span><br><span class="line"><span class="keyword">SAVEPOINT</span> A ;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP_2 (CNO) <span class="keyword">VALUES</span> (<span class="number">7</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP_2 (CNO) <span class="keyword">VALUES</span> (<span class="number">8</span>);</span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> <span class="keyword">SAVEPOINT</span> A;</span><br><span class="line"><span class="keyword">ROLLBACK</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--1.保存点后面必须写名字；</span></span><br><span class="line"><span class="comment">--2.ROLLBACK TO SAVEPOINT 保存点名，会回滚到保存点，保存点之前的操作会留下（不是提交），保存点到rollback之间的内容会被回滚掉，</span></span><br><span class="line"><span class="comment">--3.ROLLBACK会把保存点回滚掉</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP3;</span><br><span class="line">删除表内全部数据</span><br><span class="line">方法一：<span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> EMP3;</span><br><span class="line"></span><br><span class="line">方法二：<span class="keyword">DELETE</span> <span class="keyword">FROM</span> EMP3 ;</span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br><span class="line"></span><br><span class="line">删除列：</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> EMPNO;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">DROP</span> (JOB,HIREDATE,SAL,COMM,DEPTNO);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1234</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">2234</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">3234</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">44234</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1234</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">2234</span>);</span><br></pre></td></tr></table></figure><p>–事务在处理过程中遇到错误时，点击确定或帮助，会跳过错误，继续执行，直到遇到下一个错误或者结束<br>–点击取消或者叉掉，直接结束运行，没有报错的部分会被执行</p><h3 id="事务的四个属性："><a href="#事务的四个属性：" class="headerlink" title="事务的四个属性："></a>事务的四个属性：</h3><ul><li><p><input checked disabled type="checkbox"> <strong>原子性</strong></p><p>事务是一个整体的工作单元，要么全部提交，要么全部回滚；</p></li><li><p><input checked disabled type="checkbox"> <strong>一致性</strong></p><p>所有数据必须保持状态一致，以保持数据的完整性；</p><p>(事务执行成功时，所有数据会变为新状态，执行失败则所有数据变为事务开始前的状态)</p></li><li><p><input checked disabled type="checkbox"> <strong>隔离性</strong></p><p>当前事务进行数据修改时，只要还没提交，其他事务只能查看修改前的状态；<br>(以后可能很多人同时使用一个数据库，只要没提交，别人就看不到新状态(新数据))</p></li><li><p><input checked disabled type="checkbox"> <strong>持久性</strong></p><p>事务提交后，修改的内容会被永久保存。</p></li></ul><blockquote><p>显式提交 DML<br>隐式提交 DDL</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/7.%E9%9B%86%E5%90%88%E8%BF%90%E7%AE%97%EF%BC%8C%E8%A1%8C%E5%88%97%E8%BD%AC%E6%8D%A2/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/7.%E9%9B%86%E5%90%88%E8%BF%90%E7%AE%97%EF%BC%8C%E8%A1%8C%E5%88%97%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p>title: 集合运算<br>top_img:<br>categories: </p><ul><li>ETL工程师</li><li>SQL基础<br>tags:</li><li>集合运算</li></ul><h1 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h1><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/7.%E9%9B%86%E5%90%88%E8%BF%90%E7%AE%97%EF%BC%8C%E8%A1%8C%E5%88%97%E8%BD%AC%E6%8D%A2/2019091216284921.png" alt="2019091216284921"></p><h2 id="并集（UNION-x2F-UNION-ALL）"><a href="#并集（UNION-x2F-UNION-ALL）" class="headerlink" title="并集（UNION&#x2F;UNION ALL）"></a>并集（UNION&#x2F;UNION ALL）</h2><p>UNION 并集去重</p><p>UNION ALL 并集不去重</p><p>Union可以对两个或多个结果集进行连接，形成“并集”。<strong>子结果集所有的记录组合在一起形成新的结果集。</strong></p><p><strong>限定条件：</strong></p><p>要是用Union来连接结果集，有4个<strong>限定条件</strong>。</p><blockquote><ol><li>子结果集要具有相同的结构。</li><li>子结果集的列数必须相同。</li><li>子结果集对应的数据类型必须可以兼容。</li><li>每个子结果集不能包含order by子句。</li></ol></blockquote><p><strong>语法格式：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select_statement <span class="keyword">union</span> [<span class="keyword">all</span>] select_statement</span><br></pre></td></tr></table></figure><blockquote><p>all代表最终的结果集中将包含所有的行，而<strong>不能删除重复行</strong>。</p></blockquote><p><strong>例子：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp; <span class="comment">--去重</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> Name <span class="keyword">FROM</span> Person_1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> Name <span class="keyword">FROM</span> Person_2；</span><br></pre></td></tr></table></figure><p>语法：<br>SELECT 语句<br>UNION<br>SELECT 语句<br>UNION ALL<br>SELECT 语句<br>…</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> DEPT;</span><br></pre></td></tr></table></figure><h3 id="1-前后列数得保持一致"><a href="#1-前后列数得保持一致" class="headerlink" title="1.前后列数得保持一致"></a>1.前后列数得保持一致</h3><h3 id="2-一列内数据类型得保持一致"><a href="#2-一列内数据类型得保持一致" class="headerlink" title="2.一列内数据类型得保持一致"></a>2.一列内数据类型得保持一致</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> DNAME <span class="keyword">FROM</span> DEPT;</span><br></pre></td></tr></table></figure><h3 id="3-结果按照第一列升序排序"><a href="#3-结果按照第一列升序排序" class="headerlink" title="3.结果按照第一列升序排序"></a>3.结果按照第一列升序排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP<span class="comment">--10,20,30</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> DEPT;<span class="comment">--10,20,30,40</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,DEPTNO <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> DNAME,DEPTNO <span class="keyword">FROM</span> DEPT;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME ,DEPTNO A <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> DNAME 部门名称,DEPTNO B <span class="keyword">FROM</span> DEPT;</span><br></pre></td></tr></table></figure><h3 id="4-最后结果的列名是按照第一个SELECT语句中的名称确定的"><a href="#4-最后结果的列名是按照第一个SELECT语句中的名称确定的" class="headerlink" title="4.最后结果的列名是按照第一个SELECT语句中的名称确定的"></a>4.最后结果的列名是按照第一个SELECT语句中的名称确定的</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME ,DEPTNO A <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> DNAME 部门名称,LOC B <span class="keyword">FROM</span> DEPT;<span class="comment">--报错，上下数据类型不一致</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span>：</span><br><span class="line">查询姓名为SMITH或者SCOTT的所有员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;SMITH&#x27;</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;SCOTT&#x27;</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp  <span class="keyword">where</span> ename <span class="operator">=</span><span class="string">&#x27;SMITH&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename<span class="operator">=</span><span class="string">&#x27;SCOTT&#x27;</span>;<span class="comment">--可以</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> ：</span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> SAL,DEPTNO; </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> SAL,DEPTNO; <span class="comment">--去重</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> ：</span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">ORDER</span> <span class="keyword">BY</span> DEPTNO</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">ORDER</span> <span class="keyword">BY</span> DEPTNO; <span class="comment">--报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">ORDER</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">ORDER</span> <span class="keyword">BY</span> DEPTNO</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp ;<span class="comment">--报错</span></span><br></pre></td></tr></table></figure><h3 id="5-ORDER-BY-只能放在最后一个语句里面"><a href="#5-ORDER-BY-只能放在最后一个语句里面" class="headerlink" title="5.ORDER BY 只能放在最后一个语句里面"></a>5.ORDER BY 只能放在最后一个语句里面</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNAME <span class="keyword">FROM</span> STUDENT</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> SNAME <span class="keyword">FROM</span> STUDENTS <span class="keyword">ORDER</span> <span class="keyword">BY</span> SNAME <span class="keyword">DESC</span>;<span class="comment">--没有按照中文字的拼音排序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> DEPTNO  <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> EMPNO <span class="keyword">from</span> emp   <span class="keyword">order</span> <span class="keyword">by</span> DEPTNO <span class="keyword">DESC</span>; <span class="comment">--报错</span></span><br><span class="line"><span class="comment">--在集合运算中，排序最好把前面的语句转变成FROM子查询</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP A <span class="keyword">JOIN</span> DEPT B <span class="keyword">ON</span> A.DEPTNO <span class="operator">=</span> B.DEPTNO C<span class="comment">--表连接后无法直接加别名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span>  <span class="built_in">max</span>(sal) A  <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span>  <span class="built_in">min</span>(sal)  <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span><span class="number">20</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno  <span class="keyword">order</span> <span class="keyword">by</span> A <span class="keyword">desc</span> ;<span class="comment">--报错，在第一个SELECT语句中起别名即可</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">MIN</span>(SAL);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span>  <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">MAX</span>(SAL);</span><br></pre></td></tr></table></figure><blockquote><p><strong>总结:</strong></p><ol><li>结果会去重</li><li>列数得保持一致，同一列内数据类型得保持一致</li><li>列名以第一个SELECT语句为准</li><li>结果默认以第一列升序排列</li><li>ORDER BY 只能写在最后一个SELECT 语句中</li></ol></blockquote><h3 id="UNION-ALL-并集不去重"><a href="#UNION-ALL-并集不去重" class="headerlink" title="UNION ALL 并集不去重"></a>UNION ALL 并集不去重</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="comment">--UNION ALL 没有按照第一列升序排列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO,EMPNO <span class="keyword">FROM</span> EMP;<span class="comment">--报错，列数不一致</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME <span class="keyword">FROM</span> EMP;<span class="comment">--报错，数据类型不一致</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO  <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO B <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="comment">--列名还是以第一个SELECT语句为准</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> DEPTNO</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> DEPTNO;</span><br><span class="line"><span class="comment">--ORDER BY 只能放在最后一个SELECT 语句中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">2</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span>  <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">3</span> <span class="keyword">FROM</span> EMP;<span class="comment">-- 1  ，   2  ，  14个3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span>,<span class="number">2</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">2</span>,<span class="number">3</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span>  </span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">2</span>,<span class="number">3</span> <span class="keyword">FROM</span> EMP;<span class="comment">--1   2  , 2    3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span>,<span class="number">2</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="number">2</span>,<span class="number">3</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">UNION</span>  <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">2</span>,<span class="number">3</span> <span class="keyword">FROM</span> EMP);<span class="comment">--1  2  ， 2   3</span></span><br><span class="line"><span class="comment">--有括号的先运行括号</span></span><br></pre></td></tr></table></figure><h2 id="交集（INTERSECT）"><a href="#交集（INTERSECT）" class="headerlink" title="交集（INTERSECT）"></a>交集（INTERSECT）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">700</span> <span class="keyword">and</span> <span class="number">1300</span> </span><br><span class="line"><span class="keyword">intersect</span></span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1201</span> <span class="keyword">and</span> <span class="number">1400</span>; </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> DEPT;</span><br><span class="line"><span class="comment">--会去重</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> SAL <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span> SAL <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="comment">--结果会默认以第一列升序排列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">2</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">3</span> <span class="keyword">FROM</span> EMP;<span class="comment">-- 找不到任何东西</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span>,<span class="number">2</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">2</span>,<span class="number">3</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">2</span>,<span class="number">3</span> <span class="keyword">FROM</span> EMP;<span class="comment">-- 找不到任何东西</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">1</span>,<span class="number">2</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line">(<span class="keyword">SELECT</span> <span class="number">2</span>,<span class="number">3</span> <span class="keyword">FROM</span> EMP</span><br><span class="line"><span class="keyword">INTERSECT</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">2</span>,<span class="number">3</span> <span class="keyword">FROM</span> EMP);<span class="comment">-- 找不到任何东西</span></span><br></pre></td></tr></table></figure><blockquote><p>&#x3D;&#x3D;总结&#x3D;&#x3D;：<br>作用是输出重复的部分，必须得所有的东西都一致才能输出</p></blockquote><h2 id="差集（MINUS）"><a href="#差集（MINUS）" class="headerlink" title="差集（MINUS）"></a>差集（MINUS）</h2><p>　minus可以对两个或多个结果集进行连接，形成“差集”。<strong>返回左边结果集合中已经有的记录，而右边结果集中没有的记录。</strong></p><p>&#x3D;&#x3D;作用&#x3D;&#x3D;：输出第一个查询语句中独有的内容</p><p>　　　限定条件：</p><p>　　　　1、子结果集要具有相同的结构。</p><p>　　　　2、子结果集的列数必须相同。</p><p>　　　　3、子结果集对应的数据类型必须可以兼容。</p><p>　　　　4、每个子结果集不能包含order by 子句。</p><p>　　　　语法形式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select_statement minus select_statement　</span><br></pre></td></tr></table></figure><p>　　　　自动删除重复行。</p><p>　　　　示例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="keyword">SELECT</span> Name <span class="keyword">FROM</span> Person_1</span><br><span class="line">　　minus</span><br><span class="line">　　<span class="keyword">SELECT</span> Name <span class="keyword">FROM</span> Person_2</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong></p><p>　　1.ORDER BY是对整个运算后的结果排序，并不是对单个数据集。</p><p>　　2.ORDER BY后面排序的字段名称是第一个数据集的字段名或者别名。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP<span class="comment">--10 20 30</span></span><br><span class="line">MINUS</span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> DEPT;<span class="comment">-- 10 20 30 40 --找不到任何东西</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> DEPT<span class="comment">--10 20 30 40</span></span><br><span class="line">MINUS</span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP;<span class="comment">--10 20 30--输出40</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP</span><br><span class="line">MINUS</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP ;<span class="comment">--找不到任何东西</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> EMPNO <span class="keyword">FROM</span> EMP</span><br><span class="line">MINUS</span><br><span class="line"><span class="keyword">SELECT</span> ENAME <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> DEPTNO <span class="operator">=</span> <span class="number">20</span> <span class="keyword">AND</span> ENAME <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>;<span class="comment">--输出10和30号部门的人</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>当union all和order by 如下一起使用时，会报sql未正确结束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> age</span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> person <span class="keyword">order</span> <span class="keyword">by</span> age</span><br></pre></td></tr></table></figure><p>通用的解决方法有三种：</p><p>1、将结果集&#x3D;&#x3D;作为一张临时表&#x3D;&#x3D;然后查询排序</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> name,age <span class="keyword">from</span> student </span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> person <span class="keyword">order</span> <span class="keyword">by</span> age) <span class="keyword">order</span> <span class="keyword">by</span> age</span><br></pre></td></tr></table></figure><p>2、单独<code>对表进行排序后</code>进行并集操作</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> name,age <span class="keyword">from</span> student <span class="keyword">order</span> <span class="keyword">by</span> age)</span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> name,age <span class="keyword">from</span> person <span class="keyword">order</span> <span class="keyword">by</span> age)</span><br></pre></td></tr></table></figure><p>3、order by + 字段在结果集中的序号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> student </span><br><span class="line"></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> name,age <span class="keyword">from</span> person </span><br><span class="line"></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="将多个列合并成为一个新的维度"><a href="#将多个列合并成为一个新的维度" class="headerlink" title="将多个列合并成为一个新的维度"></a><a href="https://blog.csdn.net/weixin_43363860/article/details/114940917">将多个列合并成为一个新的维度</a></h3><p>单查多列+并集运算</p><h3 id="PIVOT"><a href="#PIVOT" class="headerlink" title="PIVOT"></a>PIVOT</h3><p><strong>将维度数据&#x3D;&#x3D;拆解&#x3D;&#x3D;成多个列</strong><br>—对应 SUM (CASE WHEN …)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">   <span class="keyword">FROM</span> TB PIVOT(<span class="built_in">SUM</span>(TB.COL1)</span><br><span class="line">      <span class="keyword">FOR</span> TB.COL2</span><br><span class="line">          <span class="keyword">IN</span> (VAL1 <span class="keyword">AS</span> NEW_COL1,</span><br><span class="line">              VAL2 <span class="keyword">AS</span> NWE_COL2,</span><br><span class="line">              VAL3 <span class="keyword">AS</span> NEW_COL3)</span><br><span class="line">             );</span><br></pre></td></tr></table></figure><blockquote><p>TIPS:</p><ul><li><p>PIVOT函数一定要有聚合函数 TB.COL1:被聚合分析的字段 TB.COL2：被拆解的字段</p></li><li><p>VAL1,VAL2,VAL3:TB.COL2字段中的某值 NEW_COL1,NEW_COL2,NEW_COL3: 字段拆解后形成的新字段</p></li><li><p>AS NEW_COL: 这个部分可不写，不写就以VAL作为字段名展示</p></li></ul></blockquote><h3 id="UNPIVOT"><a href="#UNPIVOT" class="headerlink" title="UNPIVOT"></a>UNPIVOT</h3><p>将多个列&#x3D;&#x3D;合并&#x3D;&#x3D;成一个维度<br>—对应UNION ALL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">   <span class="keyword">FROM</span> TB UNPIVOT (NEW_COL1 <span class="keyword">FOR</span> NEW_COL2</span><br><span class="line">          <span class="keyword">IN</span> (</span><br><span class="line">                TB.COL1 <span class="keyword">AS</span> VAL1,</span><br><span class="line">                TB.COL2 <span class="keyword">AS</span> VAL2,</span><br><span class="line">                TB.COL3 <span class="keyword">AS</span> VAL3)</span><br><span class="line">          );</span><br></pre></td></tr></table></figure><blockquote><p>TIPS:</p><ul><li>UNPIVOT函数不需要聚合函数 NEW_COL1：用来收纳交叉数据的字段，字段名自取 NEW_COL2：新和成的维度字段，名字自取</li><li>TB.COL1,TB.COL2,TB.COL3: 被并入的字段 VAL1,VAL2,VAL3: 并入的字段以怎样的数据内容录入新维度字段</li><li>AS VAL :这个部分可不写 ，不写则以TB.COL的名字作为字段名</li></ul></blockquote><p>&#x3D;&#x3D;大总结&#x3D;&#x3D;：</p><ul><li>所有的集合运算可以反复交叉使用<br>UNION、INTERSECT、MINUS都会去重，UNION ALL不去重<br>UNION、INTERSECT、MINUS都会默认以第一列升序排列，UNION ALL不会<br>有括号的先运行括号里的内容<br>列名以第一个SELECT语句为准<br>ORDER BY 只能放在最后一个语句里面<br>列数必须保持一致，一列内数据类型必须保持一致</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>伪列</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/5.%E4%BC%AA%E5%88%97/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/5.%E4%BC%AA%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h1 id="伪列"><a href="#伪列" class="headerlink" title="伪列"></a>伪列</h1><p>排序,100 100 100 100 100    99       99      98<br>          1      1     1     1      1   6&#x2F;2     6&#x2F;2        8&#x2F;3<br>          1     2     3     4      5     6         7          8</p><p>伪列有两个东西：ROWID     ROWNUM</p><p>什么是伪列：–隐藏起来的列</p><p>ROWID：身份识别码，在数据库中为数据生成的独一无二的身份识别码；<br>ROWNUM：生成一列从1开始的升序的序号，并不会收到其他因素的干扰。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> EMP.<span class="operator">*</span>,ROWID,ROWNUM <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ROWID <span class="operator">=</span> <span class="string">&#x27;AAAR3sAAEAAAACXAAA&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ROWNUM <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ROWNUM <span class="operator">=</span><span class="number">2</span>;<span class="comment">--找不到东西</span></span><br></pre></td></tr></table></figure><p>–伪列必须从1开始</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ROWNUM <span class="operator">&gt;=</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ROWNUM <span class="keyword">BETWEEN</span> <span class="number">2</span> <span class="keyword">AND</span> <span class="number">4</span>;<span class="comment">--找不到东西</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ROWNUM <span class="operator">&lt;</span> <span class="number">9</span>;</span><br><span class="line"><span class="keyword">SELECT</span> ROWNUM <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> ROWNUM <span class="keyword">DESC</span>;</span><br><span class="line"><span class="keyword">SELECT</span> EMP.<span class="operator">*</span>,ROWNUM <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL;</span><br></pre></td></tr></table></figure><p>–把他想象成一摞积木，最下面算第一个，不符合把第一个拿掉，第二个变成第一个，第一个还是不符合拿掉，第三个变为第一个，不符合拿掉，以此类推</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> A.<span class="operator">*</span>,ROWNUM 排序 <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) A) <span class="keyword">WHERE</span> 排序 <span class="keyword">BETWEEN</span> <span class="number">1</span> <span class="keyword">AND</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>–思考什么东西运行在WHERE之前？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查询工资最低的五名员工信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> A.<span class="operator">*</span>,ROWNUM R <span class="keyword">FROM</span>(<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) A) <span class="keyword">WHERE</span> R <span class="operator">&lt;</span><span class="number">6</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">WHERE</span> ROWNUM<span class="operator">&lt;</span><span class="number">6</span>;</span><br></pre></td></tr></table></figure><p>–ROWNUM不是固定序列，而是一个总是从1开始的可变序列<br>–要么用小于，要么大于等于1，不从1开始就起别名</p>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 伪列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL优化</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/6.SQL%E4%BC%98%E5%8C%96/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/6.SQL%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL优化"><a href="#SQL优化" class="headerlink" title="SQL优化"></a>SQL优化</h1><ul><li><p>避免在索引列上使用计算和函数</p></li><li><p>避免在索引列中发生隐式转换</p></li><li><p>避免使用OR</p></li><li><p>避免使用</p></li><li><p>避免使用LIKE</p></li><li><p>表连接代替子查询</p></li><li><p>EXISTS代替IN</p></li><li><p>用&lt;和&gt;代替&lt;&gt;</p></li><li><p>能放在WHERE后面的就不要放在HAVING后面</p></li></ul><blockquote><p>索引失效</p><p>1.索引本身失效</p><p>2.隐式转换导致索引失效</p><p>3.查询的数据量为一个表的大部分数据</p><p>4.对小表查询</p><p>5.B-TREE索引 IS NULL 不走索引  IS NOT NULL 走索引</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL函数学习</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/3.SQL%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/3.SQL%E5%87%BD%E6%95%B0%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL函数学习"><a href="#SQL函数学习" class="headerlink" title="SQL函数学习"></a>SQL函数学习</h1><p>[TOC]</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><blockquote><ol><li><p>函数都有返回值–有几个数据返回几个值（分组函数除外）</p></li><li><p>函数都带括号</p></li><li><p>函数类型：</p><blockquote><p>数值型函数<br>字符型函数<br>日期型函数<br>分组函数(聚合函数)       一组数据返回一个值</p></blockquote></li></ol></blockquote><h2 id="数值型函数"><a href="#数值型函数" class="headerlink" title="数值型函数"></a>数值型函数</h2><h3 id="1-取绝对值-abs-数值"><a href="#1-取绝对值-abs-数值" class="headerlink" title="1.取绝对值  abs(数值)"></a>1.取绝对值  abs(数值)</h3><blockquote><p><strong>不论正数负数，返还的值都是正数，0返还0，空值返还空值</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">abs</span>(<span class="number">123</span>) <span class="keyword">from</span> dual;<span class="comment">--返回123</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">abs</span>(<span class="number">-123</span>) <span class="keyword">from</span> dual;<span class="comment">--返回123</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">abs</span>(<span class="number">0</span>) <span class="keyword">from</span> dual;<span class="comment">--返回0</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">abs</span>(comm) <span class="keyword">from</span> emp;<span class="comment">--返回空值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">abs</span>(<span class="number">1.23</span>) <span class="keyword">from</span> dual;<span class="comment">--返回1.23</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">abs</span>(<span class="number">-1.23</span>) <span class="keyword">from</span> dual;<span class="comment">--返回1.23</span></span><br></pre></td></tr></table></figure><h3 id="2-判断正负值-sign-数值"><a href="#2-判断正负值-sign-数值" class="headerlink" title="2.判断正负值  sign(数值)"></a>2.判断正负值  sign(数值)</h3><blockquote><p><strong>正数返回1，负数返回-1，0返还0，空值返还空值</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sign(<span class="number">123</span>) <span class="keyword">from</span> dual;<span class="comment">--返回1</span></span><br><span class="line"><span class="keyword">select</span> sign(<span class="number">-123</span>) <span class="keyword">from</span> dual;<span class="comment">--返回-1</span></span><br><span class="line"><span class="keyword">select</span> sign(<span class="number">0</span>) <span class="keyword">from</span> dual;<span class="comment">--返回0</span></span><br><span class="line"><span class="keyword">select</span> sign(comm) <span class="keyword">from</span> emp;<span class="comment">--返回空值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sign(<span class="number">1.23</span>) <span class="keyword">from</span> dual;<span class="comment">--返回1</span></span><br><span class="line"><span class="keyword">select</span> sign(<span class="number">-1.23</span>) <span class="keyword">from</span> dual;<span class="comment">--返回-1</span></span><br></pre></td></tr></table></figure><h3 id="3-取整-ceil-数值-——向上取整-floor-数值-——向下取整"><a href="#3-取整-ceil-数值-——向上取整-floor-数值-——向下取整" class="headerlink" title="3.取整 ceil(数值)——向上取整   floor(数值)——向下取整"></a>3.取整 ceil(数值)——向上取整   floor(数值)——向下取整</h3><blockquote><p><strong>向上取整：只要小数点后面有值，不论大小都进一</strong><br><strong>向下取整：舍弃小数点后的内容</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">ceil</span>(<span class="number">123.156</span>) <span class="keyword">from</span> dual;<span class="comment">--返回124</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ceil</span>(<span class="number">123.956</span>) <span class="keyword">from</span> dual;<span class="comment">--返回124</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(<span class="number">123.156</span>) <span class="keyword">from</span> dual;<span class="comment">--返回123</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(<span class="number">123.956</span>) <span class="keyword">from</span> dual;<span class="comment">--返回123</span></span><br></pre></td></tr></table></figure><h3 id="4-求余数-取余-mod-x-y-–x被除数-y除数"><a href="#4-求余数-取余-mod-x-y-–x被除数-y除数" class="headerlink" title="4.求余数(取余)  mod(x,y) –x被除数  y除数"></a>4.求余数(取余)  mod(x,y) –x被除数  y除数</h3><blockquote><p><strong>x &#x2F; y &#x3D; 商……余数–要的就是这个余数</strong><br><strong>–余数种类跟除数大小一致</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">10</span>,<span class="number">3</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">9</span>,<span class="number">3</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">0</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--0</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">1</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--1</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">2</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--2</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">3</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--3</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">4</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--0</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">5</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--1</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">6</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--2</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">7</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--3</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="number">8</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--0</span></span><br><span class="line"><span class="comment">-- 除数为4，余数种类为0，1，2，3</span></span><br></pre></td></tr></table></figure><h3 id="5-四舍五入-round-数值-精度-–精度为精确程度"><a href="#5-四舍五入-round-数值-精度-–精度为精确程度" class="headerlink" title="5.四舍五入  round(数值,精度) –精度为精确程度"></a>5.四舍五入  round(数值,精度) –精度为精确程度</h3><blockquote><p><strong>按照精度对数值进行四舍五入</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> round(<span class="number">123.156</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> round(<span class="number">123.956</span>) <span class="keyword">from</span> dual;<span class="comment">--精度不写时，精确到个位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> round(<span class="number">123.456</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> round(<span class="number">123.456</span>,<span class="number">1</span>) <span class="keyword">from</span> dual;<span class="comment">--精度为正数时，精确到小数点后几位</span></span><br><span class="line"><span class="keyword">select</span> round(<span class="number">123.456</span>,<span class="number">-2</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> round(<span class="number">123.456</span>,<span class="number">-1</span>) <span class="keyword">from</span> dual;<span class="comment">--精度为负数时，精确到小数点前几位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> round(<span class="number">123.456</span>,<span class="number">10</span>) <span class="keyword">from</span> dual;<span class="comment">--没有到达指定精度时，不会补充0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> round(<span class="number">123.456</span>,<span class="number">2.2</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> round(<span class="number">123.456</span>,<span class="number">2.9</span>) <span class="keyword">from</span> dual;<span class="comment">--精度写小数不会报错，但精度的小数位不会被识别</span></span><br></pre></td></tr></table></figure><h3 id="6-截断函数-trunc-数值-精度"><a href="#6-截断函数-trunc-数值-精度" class="headerlink" title="6.截断函数  trunc(数值,精度)"></a>6.截断函数  trunc(数值,精度)</h3><blockquote><p><strong>按照精度对数值进行截断操作（舍弃精度后的值）</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.156</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.956</span>) <span class="keyword">from</span> dual;<span class="comment">--精度不写时，精确到个位</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.156</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.156</span>,<span class="number">1</span>) <span class="keyword">from</span> dual;<span class="comment">--精度为正数时，精确到小数点后几位</span></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.956</span>,<span class="number">-2</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.156</span>,<span class="number">-1</span>) <span class="keyword">from</span> dual;<span class="comment">--精度为负数时，精确到小数点前几位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.456</span>,<span class="number">10</span>) <span class="keyword">from</span> dual;<span class="comment">--没有到达指定精度时，不会补充0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.456</span>,<span class="number">2.2</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> trunc(<span class="number">123.456</span>,<span class="number">2.9</span>) <span class="keyword">from</span> dual;<span class="comment">--精度写小数不会报错，但精度的小数位不会被识别</span></span><br></pre></td></tr></table></figure><h3 id="7-round-x2F-trunc-对日期的操作"><a href="#7-round-x2F-trunc-对日期的操作" class="headerlink" title="7.round &#x2F; trunc 对日期的操作"></a>7.round &#x2F; trunc 对日期的操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sysdate <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> sysdate,round(sysdate),trunc(sysdate) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> sysdate,round(sysdate,<span class="string">&#x27;dd&#x27;</span>),trunc(sysdate,<span class="string">&#x27;dd&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--日期精度默认值位 &#x27;dd&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-05-12 11:59:59&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd hh24:mi:ss&#x27;</span>),<span class="string">&#x27;dd&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-05-12 12:00:00&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd hh24:mi:ss&#x27;</span>),<span class="string">&#x27;dd&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--精确到天，界限是12点整</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sysdate,round(sysdate,<span class="string">&#x27;day&#x27;</span>),trunc(sysdate,<span class="string">&#x27;day&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--day的单位为周</span></span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-05-11&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;day&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-05-12&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;day&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--在oracle中的日历，星期日为每周的第一天，星期六为每周的最后一天  </span></span><br><span class="line"><span class="comment">--精确到周，界限为星期四</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-05-15&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;mm&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-05-16&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;mm&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--精确到月，界限是16号（2月的界限也是16号）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-05-15&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;q&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-05-16&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;q&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--精确到季，界限是中间月份的16号（2月的界限也是16号）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-06-30&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;yyyy&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> sysdate,round(to_date(<span class="string">&#x27;2022-07-01&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;yyyy&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--精确到年，界限是7月1日</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查询员工的姓名与薪资，以员工XX的薪资是XX的形式输出</span><br><span class="line">要求：岗位不为职员 且 姓名不少于三个字母(姓名第二位是L)，或 薪资不少于<span class="number">1250</span> 且 佣金不为空值。</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;员工&#x27;</span><span class="operator">||</span>ename<span class="operator">||</span><span class="string">&#x27;的薪资是：&#x27;</span><span class="operator">||</span>sal <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">where</span> job <span class="operator">!=</span> <span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">and</span> ename <span class="keyword">like</span> <span class="string">&#x27;_L_%&#x27;</span> <span class="keyword">or</span> sal <span class="operator">&gt;=</span> <span class="number">1250</span> <span class="keyword">and</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a>转换函数</h2><h3 id="一-oracle中的数据类型"><a href="#一-oracle中的数据类型" class="headerlink" title="一. oracle中的数据类型"></a>一. oracle中的数据类型</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">字符型(字符串) </span><br><span class="line">varchar2(字节长度) <span class="comment">--oracle中最常见</span></span><br><span class="line"><span class="type">varchar</span>(字节长度)  <span class="comment">--前两种是变长（长度不确定）</span></span><br><span class="line"><span class="type">char</span>(字节长度)     <span class="comment">--定长（长度为固定值）--用空间换取效率</span></span><br><span class="line"></span><br><span class="line">数值型</span><br><span class="line">number</span><br><span class="line">number(数值长度)</span><br><span class="line">number(数值长度,小数点后几位)<span class="comment">---例：记成绩：number（3，1）</span></span><br><span class="line"></span><br><span class="line">日期型</span><br><span class="line"><span class="type">date</span></span><br></pre></td></tr></table></figure><h3 id="二-to-char"><a href="#二-to-char" class="headerlink" title="二. to_char()"></a>二. to_char()</h3><p><strong>函数–转成字符型</strong></p><h4 id="1-数值转字符"><a href="#1-数值转字符" class="headerlink" title="1.数值转字符"></a>1.数值转字符</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">to_char(数值)<span class="comment">--无指定格式转换</span></span><br><span class="line"><span class="keyword">select</span> to_char(empno) <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">to_char(数值,格式)<span class="comment">--指定格式转换--必定生成一个空格</span></span><br><span class="line"><span class="number">9</span><span class="comment">--指转换为任意数值，数值位数不够时用空格填充</span></span><br><span class="line"><span class="number">0</span><span class="comment">--指转换为任意数值，数值位数不够时强制显示0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dual<span class="comment">--临时表--0行0列的空表</span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123456</span>,<span class="string">&#x27;99999999&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123456</span>,<span class="string">&#x27;00000000&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123456</span>,<span class="string">&#x27;09090909&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123456</span>,<span class="string">&#x27;90909090&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line">位数不够时<span class="comment">--数值不予显示，变为格式个数+1个#</span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123456</span>,<span class="string">&#x27;9999&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123456</span>,<span class="string">&#x27;0000&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line">带小数点时，格式也得带有小数点<span class="comment">--小数点后面格式多，自动用0补充</span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123.456</span>,<span class="string">&#x27;9999.9999&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123.456</span>,<span class="string">&#x27;0000.0000&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">格式小数点后位数不够时<span class="comment">--自动四舍五入</span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123.456</span>,<span class="string">&#x27;9999.99&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123.456</span>,<span class="string">&#x27;0000.00&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-------千分位及货币符号</span></span><br><span class="line">L<span class="comment">--人民币￥--不区分大小写</span></span><br><span class="line">$<span class="comment">--美元</span></span><br><span class="line">,<span class="comment">--千位符--英文逗号</span></span><br><span class="line"><span class="number">9</span>一般用户货币</span><br><span class="line"><span class="number">0</span>一般用于编号</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">8</span>,<span class="string">&#x27;00&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--学号之类的编号用0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">12345.67</span>,<span class="string">&#x27;L99,999.99&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--￥12,345.67</span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">12345.67</span>,<span class="string">&#x27;99,999.99L&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--12,345.67￥</span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">12345.67</span>,<span class="string">&#x27;99,99L9.99&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--报错，人民币符号只能放在最前面或最后面</span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">12345.67</span>,<span class="string">&#x27;￥99,999.99&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--报错，人民币符号是字母L</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">12345.67</span>,<span class="string">&#x27;$99,999.99&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">12345.67</span>,<span class="string">&#x27;99,999.99$&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">12345.67</span>,<span class="string">&#x27;99,99$9.99&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--美元符只有放在最前面一种方式，书写位置在任何地方都可以</span></span><br></pre></td></tr></table></figure><h4 id="2-日期转字符"><a href="#2-日期转字符" class="headerlink" title="2.日期转字符"></a>2.日期转字符</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">sysdate <span class="comment">--系统时间，精确到秒</span></span><br><span class="line">systimestamp <span class="comment">--时间戳，精确到毫秒--自带时区</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sysdate <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> systimestamp <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sysdate <span class="operator">-</span> hiredate <span class="keyword">from</span> emp;<span class="comment">--时间相减单位是--天</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">格式：yyyy<span class="operator">-</span>mm<span class="operator">-</span>dd hh24:mi:ss.ff6<span class="comment">--ff3 </span></span><br><span class="line">       年  月 日 <span class="number">24</span>时 分 秒 毫秒 三位毫秒</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(systimestamp,<span class="string">&#x27;yyyy-mm-dd hh24:mi:ss.ff6&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;yyyy-mm-dd hh24:mi:ss&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;yyyymmdd&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;yyyy&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--2022</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;yyy&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--022</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;yy&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--22</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;y&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--2--年份的最后一位</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;yyyyy&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--2022+年份的最后一位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;mm&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--05</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;m&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--报错，月份只能有两位</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;dd&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--06</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;ddd&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--188 一年中的第几t</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;d&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--日不是两位的话会输出奇怪的数值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;hh24&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;hh12&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--hh12 分上午下午</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;mi&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;mimi&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;ss&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;ssss&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--成对输出，不成对报错</span></span><br><span class="line"></span><br><span class="line">毫秒位数最少<span class="number">1</span>位最多九位</span><br><span class="line"><span class="keyword">select</span> to_char(systimestamp,<span class="string">&#x27;ff3&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--精确到3位</span></span><br><span class="line"><span class="keyword">select</span> to_char(systimestamp,<span class="string">&#x27;ff6&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--精确到3位</span></span><br><span class="line"><span class="keyword">select</span> to_char(systimestamp,<span class="string">&#x27;ff9&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--精确到3位，毫秒最多9位</span></span><br><span class="line"></span><br><span class="line">q<span class="comment">--季度</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;q&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--输出在今年的第几个季度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">month</span><span class="comment">--月--可以省略为mon</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;month&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--中文月份</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;mon&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--中文月份</span></span><br><span class="line"></span><br><span class="line">w<span class="comment">----本月第几周</span></span><br><span class="line">ww<span class="comment">---本年第几周</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--本月第几周</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;ww&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--本年第几周</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;wwwww&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--优先识别两个W，不够两个时W，才输出一个W</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">day</span><span class="comment">--天--可以省略为dy</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;day&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--本周第几天</span></span><br><span class="line"><span class="keyword">select</span> to_char(sysdate,<span class="string">&#x27;dy&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--本周第几天</span></span><br></pre></td></tr></table></figure><h4 id="3-10进制转16进制–X"><a href="#3-10进制转16进制–X" class="headerlink" title="3.10进制转16进制–X"></a>3.10进制转16进制–X</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> to_char(<span class="number">123456</span>,<span class="string">&#x27;xxxxx&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line">位数不够时<span class="comment">--数值不予显示，变为格式个数+1个#</span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="number">123456</span>,<span class="string">&#x27;xxxx&#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h3 id="三-to-number"><a href="#三-to-number" class="headerlink" title="三. to_number"></a>三. to_number</h3><p><strong>–转为数值型</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>字符型转数值型<span class="comment">--特点居右对其，开头不带0</span></span><br><span class="line"><span class="keyword">select</span> to_number(<span class="string">&#x27;123456&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_number(<span class="string">&#x27;0123456&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>去掉千分位与货币符号</span><br><span class="line"><span class="keyword">select</span> to_number(<span class="string">&#x27;123,456.78&#x27;</span>,<span class="string">&#x27;999999.99&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--格式不写千分位去掉千位符</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_number(<span class="string">&#x27;$123,456.78&#x27;</span>,<span class="string">&#x27;$999999.99&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--格式写上货币符号，去除货币符号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_number(<span class="string">&#x27;￥123,456.78&#x27;</span>,<span class="string">&#x27;L999999.99&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--格式写上货币符号，去除货币符号</span></span><br><span class="line"><span class="keyword">select</span> to_number(<span class="string">&#x27;￥123,456.78&#x27;</span>,<span class="string">&#x27;999999.99L&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--报错，人民币货币符号位置需统一</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.16</span>进制转换为<span class="number">10</span>进制<span class="comment">--x</span></span><br><span class="line"><span class="keyword">select</span> to_number(<span class="string">&#x27;1e240&#x27;</span>,<span class="string">&#x27;xxxxxx&#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h3 id="四-to-date-–转为日期型"><a href="#四-to-date-–转为日期型" class="headerlink" title="四. to_date –转为日期型"></a>四. to_date –转为日期型</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> to_date(<span class="string">&#x27;2022-05-06&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_date(<span class="string">&#x27;2022-5-6&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--单为月分或日可以写一位，但不推荐</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_date(<span class="string">&#x27;2022/5/6&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_date(<span class="string">&#x27;20220506&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> to_date(<span class="string">&#x27;20220506&#x27;</span>,<span class="string">&#x27;yyyy/mm/dd&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> to_date(<span class="string">&#x27;20220506&#x27;</span>,<span class="string">&#x27;yyyymmdd&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--前后带不带连接符号不影响转换</span></span><br></pre></td></tr></table></figure><h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><h3 id="1-字符串跟-ascii-之间的转换"><a href="#1-字符串跟-ascii-之间的转换" class="headerlink" title="1.字符串跟 ascii 之间的转换"></a>1.字符串跟 ascii 之间的转换</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chr()  <span class="comment">--数值转ASCII</span></span><br><span class="line">ascii() <span class="comment">--ASCII转数值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> chr(<span class="number">97</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> ascii(<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h3 id="2-连接符函数-concat-值1-值2-–连接符函数一次只能连接两个值"><a href="#2-连接符函数-concat-值1-值2-–连接符函数一次只能连接两个值" class="headerlink" title="2.连接符函数 concat(值1,值2)  –连接符函数一次只能连接两个值"></a>2.连接符函数 concat(值1,值2)  –连接符函数一次只能连接两个值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename<span class="operator">||</span><span class="string">&#x27;的薪资为：&#x27;</span><span class="operator">||</span>sal <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> concat(concat(ename,<span class="string">&#x27;的薪资为：&#x27;</span>),sal) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="3-大小写转换函数"><a href="#3-大小写转换函数" class="headerlink" title="3.大小写转换函数"></a>3.大小写转换函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">upper</span>()<span class="comment">--小写转大写</span></span><br><span class="line"><span class="built_in">lower</span>()<span class="comment">--大写转小写</span></span><br><span class="line">initcap()<span class="comment">--首字母大写</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;qiankun&#x27;</span>,<span class="built_in">upper</span>(<span class="string">&#x27;qiankun&#x27;</span>),<span class="built_in">lower</span>(<span class="string">&#x27;qiankun&#x27;</span>),initcap(<span class="string">&#x27;qiankun&#x27;</span>),initcap(<span class="string">&#x27;QIANKUN&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> initcap(<span class="string">&#x27;a b c d e f g&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> initcap(<span class="string">&#x27;qian kun&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--空格隔开后会重新计算首字母</span></span><br></pre></td></tr></table></figure><ol start="4"><li><h3 id="替换函数-replace-字符串-要被替换的字符，替换成什么"><a href="#替换函数-replace-字符串-要被替换的字符，替换成什么" class="headerlink" title="替换函数 replace(字符串,要被替换的字符，替换成什么)"></a>替换函数 replace(字符串,要被替换的字符，替换成什么)</h3></li></ol><blockquote><p>  –替换函数可以进行位数不对等的替换<br>  –替换函数可以把符合条件的内容全部替换<br>  –第三个参数不写可以用作删除</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABCDEF&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;Z&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABCDEF&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;z&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABCDEFCCC&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;Z&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--字符串中没有小写c，所以没法替换</span></span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABCDEFCCC&#x27;</span>,<span class="string">&#x27;AC&#x27;</span>,<span class="string">&#x27;ZX&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--字符串中没有连续的AC，所以没法替换</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABCDEF&#x27;</span>,<span class="string">&#x27;AB&#x27;</span>,<span class="string">&#x27;Z&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--可以多换少</span></span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABCDEF&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;ZX&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--可以少换多</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABCDEFAAA&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;ZX&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--符合条件的内容会全部替换</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABCDEFAAA&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABCDEFAAA&#x27;</span>,<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--会删除符合条件的内容</span></span><br><span class="line"></span><br><span class="line">思考题：</span><br><span class="line">把emp表中ename列首字母的A的替换为‘K’</span><br><span class="line"><span class="keyword">select</span> replace(ename,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;k&#x27;</span>) <span class="keyword">from</span> emp;<span class="comment">--错误，所有a都会被替换</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(replace(initcap(ename),<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;K&#x27;</span>)) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="5-去除函数"><a href="#5-去除函数" class="headerlink" title="5.去除函数"></a>5.去除函数</h3><blockquote><p>运行原理：先去除第一个字符，第一个字符不满足时去除第二个字符，依次循环，直到全部字符不满足条件为止。<br>–满足条件的部分全部去除<br>–要被去除的字符如果省略，默认去除空格</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">trim</span>(要被去除的内容 <span class="keyword">from</span> 字符串)<span class="comment">--去除两边的字符</span></span><br><span class="line">ltrim(字符串,要被去除的内容)<span class="comment">--去除左边的字符</span></span><br><span class="line">rtrim(字符串,要被去除的内容)<span class="comment">--去除右边的字符</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">trim</span>(<span class="string">&#x27;A&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;ABCDEFAAA&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--大哥只能去一个字符</span></span><br><span class="line"><span class="keyword">select</span> ltrim(<span class="string">&#x27;ABCDEFAAA&#x27;</span>,<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> rtrim(<span class="string">&#x27;ABCDEFAAA&#x27;</span>,<span class="string">&#x27;A&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ltrim(<span class="string">&#x27;ABCDEFABAA&#x27;</span>,<span class="string">&#x27;AB&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--小弟可以去多个字符</span></span><br><span class="line"><span class="keyword">select</span> ltrim(<span class="string">&#x27;ABACAAACBCDEFAAA&#x27;</span>,<span class="string">&#x27;ABC&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--去除多个字符时，满足任意一个字符都会去除</span></span><br><span class="line"><span class="keyword">select</span> ltrim(<span class="string">&#x27;ABCACDAAACBCDEFAAA&#x27;</span>,<span class="string">&#x27;ABC&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--遇到不满足的字符时，停止去除，即使后面再有满足条件的字符也不会继续去除</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">trim</span>(<span class="string">&#x27;   ABC   DEF   &#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--去除两边的空格</span></span><br><span class="line"><span class="keyword">select</span> ltrim(<span class="string">&#x27;   ABC   DEF   &#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--去除左边的空格</span></span><br><span class="line"><span class="keyword">select</span> rtrim(<span class="string">&#x27;   ABC   DEF   &#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--去除右边的空格</span></span><br><span class="line"></span><br><span class="line">思考题</span><br><span class="line">如何去除中间的空格？</span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;ABC   DEF&#x27;</span>,<span class="string">&#x27; &#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h3 id="6-截取函数-substr-字符串-开始位置-截取长度"><a href="#6-截取函数-substr-字符串-开始位置-截取长度" class="headerlink" title="6.截取函数 substr(字符串,开始位置,截取长度)"></a>6.截取函数 substr(字符串,开始位置,截取长度)</h3><blockquote><p>–固定从左往右截取，长度不足时输出全部<br>–截取长度不能小于1，不能为负数（不会报错，输出空值）</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEFGHRJK&#x27;</span>,<span class="number">1</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEFGHRJK&#x27;</span>,<span class="number">4</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEFGHRJK&#x27;</span>,<span class="number">0</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--开始位置的0被视作1</span></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEFGHRJK&#x27;</span>,<span class="number">4</span>,<span class="number">0</span>) <span class="keyword">from</span> dual;<span class="comment">--截取长度不能小于1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEFGHRJK&#x27;</span>,<span class="number">4</span>,<span class="number">20</span>) <span class="keyword">from</span> dual;<span class="comment">--截取长度过长时，输出全部，不会补充空格</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEFGHRJK&#x27;</span>,<span class="number">-4</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--开始位置为负数时，从右往左数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEFGHRJK&#x27;</span>,<span class="number">-4</span>,<span class="number">-4</span>) <span class="keyword">from</span> dual;<span class="comment">--截取长度不能为负数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEFGHRJK&#x27;</span>,<span class="number">-2</span>,<span class="number">4</span>) <span class="keyword">from</span> dual;<span class="comment">--输出‘JK’</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;ABCDEFGHRJK&#x27;</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;<span class="comment">--如果少些一个参数，默认省略截取长度，从开始位置截取到最后</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> substr(ename,<span class="number">2</span>,<span class="number">3</span>) <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">思考题：</span><br><span class="line"><span class="number">1.</span>用截取函数查找名字中最后两位是<span class="string">&#x27;TT&#x27;</span>的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%TT&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>用截取函数，把名字中首字母为<span class="string">&#x27;A&#x27;</span>的替换为<span class="string">&#x27;K&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="7-填充函数-pad-–填充时，一个汉字算作两个长度"><a href="#7-填充函数-pad-–填充时，一个汉字算作两个长度" class="headerlink" title="7.填充函数  pad  –填充时，一个汉字算作两个长度"></a>7.填充函数  pad  –填充时，一个汉字算作两个长度</h3><blockquote><p>lpad(字符串,填充后的总长度,填充内容)<br>rpad(字符串,填充后的总长度,填充内容)</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;Q&#x27;</span>),rpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;Q&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;*&#x27;</span>),rpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;%&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--可以填充特殊符号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABCDEFG&#x27;</span>,<span class="number">5</span>,<span class="string">&#x27;Q&#x27;</span>),rpad(<span class="string">&#x27;ABCDEFG&#x27;</span>,<span class="number">5</span>,<span class="string">&#x27;Q&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--长度小于字符串本身时，从左至右输出指定长度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;乾坤&#x27;</span>),rpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;邵乾坤&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--填充内容循环填充，直到达到指定长度</span></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">9</span>,<span class="string">&#x27;乾坤&#x27;</span>),rpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">9</span>,<span class="string">&#x27;邵乾坤&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--填充汉字占多个字节，如果只差一个字节时，会先填入一个空格，在填入内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">10</span>),rpad(<span class="string">&#x27;ABCD&#x27;</span>,<span class="number">10</span>) <span class="keyword">from</span> dual;<span class="comment">--不写填充内容时，默认填充空格</span></span><br></pre></td></tr></table></figure><h3 id="8-测量长度"><a href="#8-测量长度" class="headerlink" title="8.测量长度"></a>8.测量长度</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">length(字符串)<span class="comment">--测量字符串长度</span></span><br><span class="line">lengthb(字符串)<span class="comment">--测量字节长度</span></span><br><span class="line">字符集—— utf<span class="number">-8</span> 国际通用</span><br><span class="line"><span class="comment">--一个数字或字母占一个字节</span></span><br><span class="line"><span class="comment">--汉字根据字符集的不同，一个汉字占2个或3个字节</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> length(<span class="string">&#x27;shaoqiankun&#x27;</span>),lengthb(<span class="string">&#x27;shaoqiankun&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> length(<span class="string">&#x27;123456&#x27;</span>),lengthb(<span class="string">&#x27;123456&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> length(<span class="string">&#x27;邵乾坤&#x27;</span>),lengthb(<span class="string">&#x27;邵乾坤&#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h3 id="9-查找位置-instr-字符串-要查找的字符-从第几个字符开始查找-在字符串中出现的次数"><a href="#9-查找位置-instr-字符串-要查找的字符-从第几个字符开始查找-在字符串中出现的次数" class="headerlink" title="9.查找位置 instr(字符串,要查找的字符,从第几个字符开始查找,在字符串中出现的次数)"></a>9.查找位置 instr(字符串,要查找的字符,从第几个字符开始查找,在字符串中出现的次数)</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">4</span>,<span class="number">1</span>) <span class="keyword">from</span> dual;<span class="comment">--4</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">4</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;<span class="comment">--9</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">5</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;<span class="comment">--10--从第五个数开始查找，跳过了字符串中第一个D</span></span><br><span class="line"><span class="comment">--开始位置如果正好是要查找的字符，也算出现一次。</span></span><br><span class="line"><span class="comment">--不论从第几个字符开始查找，输出的结果都是从第一字符开始数</span></span><br><span class="line"><span class="comment">--查找位置之前的字符不会算次数。</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="number">5</span>,<span class="number">1</span>) <span class="keyword">from</span> dual;<span class="comment">--如果按照要求找不到要查找的字符，输出0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;<span class="comment">--少写一个参数时，默认出现次数为1次</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;D&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--少写两个参数时，默认从第1个字符开始查找，出现次数为1次</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">-2</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;<span class="comment">--从右往左找，找到位置后从左往右计算位置</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">-2</span>,<span class="number">-2</span>) <span class="keyword">from</span> dual;<span class="comment">--报错，出现次数只能 &gt;= 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;DFG&#x27;</span>,<span class="number">4</span>,<span class="number">1</span>) <span class="keyword">from</span> dual;<span class="comment">--如果要查找的字符为多为时，按照首字母位置输出</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;DFG&#x27;</span>,<span class="number">4</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDFGAADD&#x27;</span>,<span class="string">&#x27;DEFG&#x27;</span>,<span class="number">4</span>,<span class="number">1</span>) <span class="keyword">from</span> dual;<span class="comment">--如果要查找的字符为多位，且不存在时，输出0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDF+- %GAADD&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">4</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;<span class="comment">--特殊符号算一位</span></span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;ABCDF乾坤GAADD&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">4</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;<span class="comment">--汉字算一位</span></span><br><span class="line"></span><br><span class="line">思考题</span><br><span class="line"><span class="number">1.</span>email：zhangsan<span class="variable">@qq</span>.com  我们不知道@前面有几位，输出@前面的内容<span class="comment">--多想几种方法</span></span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(<span class="string">&#x27;zhangsan@qq.com&#x27;</span>,<span class="string">&#x27;@qq.com&#x27;</span>) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="keyword">SELECT</span> RTRIM(<span class="string">&#x27;zhangsan@qq.com&#x27;</span>,<span class="string">&#x27;@qq.com&#x27;</span>) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="keyword">SELECT</span> SUBSTR(<span class="string">&#x27;zhangsan@qq.com&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,LENGTH(<span class="string">&#x27;zhangsan@qq.com&#x27;</span>)<span class="number">-7</span>) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>email：zhangsan<span class="variable">@qq</span>.com  我们不知道@前后有什么，输出@前面的内容</span><br></pre></td></tr></table></figure><h2 id="日期型函数"><a href="#日期型函数" class="headerlink" title="日期型函数"></a>日期型函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sysdate</span><br><span class="line">systimestamp</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sysdate <span class="operator">-</span> hiredate <span class="keyword">from</span> emp;<span class="comment">--对日期进行加减，返还值是天数（数值）</span></span><br></pre></td></tr></table></figure><h3 id="1-months-between-日期1-日期2-求两个日期相差几个月"><a href="#1-months-between-日期1-日期2-求两个日期相差几个月" class="headerlink" title="1.months_between(日期1,日期2)  求两个日期相差几个月"></a>1.months_between(日期1,日期2)  求两个日期相差几个月</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> months_between(sysdate,hiredate) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> months_between(hiredate,sysdate) <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> months_between(to_date(<span class="string">&#x27;2022-5-28&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),to_date(<span class="string">&#x27;2022-2-28&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)) 月份差 <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--月份不一致，天一致可以得到整数</span></span><br><span class="line"><span class="keyword">select</span> months_between(to_date(<span class="string">&#x27;2022-5-31&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),to_date(<span class="string">&#x27;2022-2-28&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)) 月份差 <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--月底减月底可以得到整数</span></span><br><span class="line"><span class="keyword">select</span> months_between(to_date(<span class="string">&#x27;2022-5-29&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),to_date(<span class="string">&#x27;2022-2-28&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)) 月份差 <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--计算小数的方法： 多出来的天数/31</span></span><br></pre></td></tr></table></figure><h3 id="2-last-day-本月的最后一天"><a href="#2-last-day-本月的最后一天" class="headerlink" title="2.last_day() 本月的最后一天"></a>2.last_day() 本月的最后一天</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> last_day(sysdate) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> last_day(to_date(<span class="string">&#x27;2022-5-11&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line">思考题</span><br><span class="line">求五月的第一天</span><br><span class="line"><span class="keyword">select</span> last_day(to_date(<span class="string">&#x27;2022-4-11&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>))<span class="operator">+</span><span class="number">1</span> <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h3 id="3-add-months-日期-n-–在日期的基础上增加-N个月"><a href="#3-add-months-日期-n-–在日期的基础上增加-N个月" class="headerlink" title="3.add_months(日期,n)  –在日期的基础上增加 N个月"></a>3.add_months(日期,n)  –在日期的基础上增加 N个月</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> add_months(sysdate,<span class="number">3</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> add_months(sysdate,<span class="number">-3</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> add_months(sysdate,<span class="number">3.1415926</span>) <span class="keyword">from</span> dual;<span class="comment">--小数位无意义</span></span><br></pre></td></tr></table></figure><h3 id="4-next-day-日期-’星期日-六’-下一个周几–不是下一个周的周几"><a href="#4-next-day-日期-’星期日-六’-下一个周几–不是下一个周的周几" class="headerlink" title="4.next_day(日期,’星期日~六’)   下一个周几–不是下一个周的周几"></a>4.next_day(日期,’星期日~六’)   下一个周几–不是下一个周的周几</h3><blockquote><p>–在计算机中，周日为每周的第一天</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> next_day(to_date(<span class="string">&#x27;2022-5-11&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;星期三&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--5月18</span></span><br><span class="line"><span class="keyword">select</span> next_day(to_date(<span class="string">&#x27;2022-5-11&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;星期一&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--5月16</span></span><br><span class="line"><span class="keyword">select</span> next_day(to_date(<span class="string">&#x27;2022-5-11&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;星期四&#x27;</span>) <span class="keyword">from</span> dual;<span class="comment">--5月12</span></span><br><span class="line"></span><br><span class="line">思考题</span><br><span class="line">给你任意一个日期，输出那个周的周四</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> next_day(trunc(to_date(<span class="string">&#x27;2022-5-14&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;day&#x27;</span>),<span class="string">&#x27;星期四&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line">给你任意一个日期，输出那个周的周日</span><br><span class="line"><span class="keyword">select</span> trunc(to_date(<span class="string">&#x27;2022-5-14&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>),<span class="string">&#x27;day&#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h2 id="case-when"><a href="#case-when" class="headerlink" title="case when"></a>case when</h2><blockquote><p><strong>注意点：</strong></p><ol><li>一个case when 语句-始于case ，终于 end，整个语句相当于一个字段</li><li>相当于给表加入了一个没有的列</li><li>输出值格式要保持一致</li><li>输出值可以进行加减，连接符之类的操作</li><li>case when 语句 的输出值数据类型必须保持一致</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="keyword">when</span> 条件 <span class="keyword">then</span> 输出值</span><br><span class="line">     <span class="keyword">when</span> 条件 <span class="keyword">then</span> 输出值</span><br><span class="line">     <span class="keyword">else</span> 输出值<span class="comment">--不是必须存在的</span></span><br><span class="line">     <span class="keyword">end</span></span><br><span class="line">     </span><br><span class="line"><span class="keyword">case</span> <span class="keyword">when</span> 条件 <span class="keyword">then</span> 输出值 <span class="keyword">when</span> 条件 <span class="keyword">then</span> 输出值 <span class="keyword">else</span> 输出值 <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;乾坤&#x27;</span>,deptno <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> ename,<span class="keyword">case</span> <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;十号部门&#x27;</span></span><br><span class="line">                  <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">20</span> <span class="keyword">then</span> <span class="string">&#x27;二十号部门&#x27;</span></span><br><span class="line">                  <span class="keyword">else</span> <span class="string">&#x27;三十号部门&#x27;</span></span><br><span class="line">                  <span class="keyword">end</span> 部门编号,deptno <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,<span class="keyword">case</span> <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;十号部门&#x27;</span> <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">20</span> <span class="keyword">then</span> <span class="string">&#x27;二十号部门&#x27;</span> </span><br><span class="line"><span class="keyword">else</span> <span class="string">&#x27;三十号部门&#x27;</span> <span class="keyword">end</span> 部门编号,deptno <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> sal <span class="operator">&gt;</span> <span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;土豪&#x27;</span> </span><br><span class="line">            <span class="keyword">when</span> sal <span class="keyword">between</span> <span class="number">2000</span> <span class="keyword">and</span> <span class="number">3000</span> <span class="keyword">then</span> <span class="string">&#x27;有钱人&#x27;</span></span><br><span class="line">            <span class="keyword">when</span> sal <span class="keyword">between</span> <span class="number">1000</span> <span class="keyword">and</span> <span class="number">1999</span> <span class="keyword">then</span> <span class="string">&#x27;没钱人&#x27;</span></span><br><span class="line">            <span class="keyword">when</span> sal <span class="operator">&lt;</span> <span class="number">1000</span> <span class="keyword">then</span> <span class="string">&#x27;土鳖&#x27;</span></span><br><span class="line">            <span class="keyword">end</span> 阶级歧视,ename <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">思考题</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>查询员工姓名，薪资，奖金</span><br><span class="line">要求：有奖金的显示奖金，无佣金的显示‘无奖金’</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,COMM,<span class="keyword">CASE</span> <span class="keyword">WHEN</span> COMM <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">THEN</span> COMM</span><br><span class="line">                        <span class="keyword">WHEN</span> COMM <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">THEN</span> <span class="string">&#x27;无佣金&#x27;</span></span><br><span class="line">                        <span class="keyword">END</span> 奖金 <span class="keyword">FROM</span> EMP;<span class="comment">--报错，结数据类型不一致</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,COMM,<span class="keyword">CASE</span> <span class="keyword">WHEN</span> COMM <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">THEN</span> TO_CHAR(COMM)</span><br><span class="line">                        <span class="keyword">WHEN</span> COMM <span class="keyword">IS</span> <span class="keyword">NULL</span> <span class="keyword">THEN</span> <span class="string">&#x27;无佣金&#x27;</span></span><br><span class="line">                        <span class="keyword">END</span> 奖金 <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>查询员工姓名，薪资，调整后的薪资（起别名为年终奖）</span><br><span class="line">要求：职位为办事员，薪资<span class="operator">+</span><span class="number">300</span> ，职位为经理，薪资<span class="operator">+</span><span class="number">500</span> ， 职位为 总经理，薪资<span class="operator">+</span><span class="number">10</span><span class="operator">%</span> ，其他的薪资<span class="operator">+</span><span class="number">400</span></span><br><span class="line"><span class="keyword">select</span> ename,sal,<span class="keyword">case</span> <span class="keyword">when</span> job<span class="operator">=</span><span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">THEN</span> SAL<span class="operator">+</span><span class="number">300</span> </span><br><span class="line">                   <span class="keyword">WHEN</span> JOB<span class="operator">=</span><span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">THEN</span> SAL<span class="operator">+</span><span class="number">500</span></span><br><span class="line">                   <span class="keyword">WHEN</span> JOB<span class="operator">=</span><span class="string">&#x27;PRESIDENT&#x27;</span> <span class="keyword">THEN</span> SAL<span class="operator">*</span><span class="number">1.1</span></span><br><span class="line">                   <span class="keyword">ELSE</span> SAL<span class="operator">+</span><span class="number">400</span>  </span><br><span class="line">                   <span class="keyword">end</span> 年终奖 <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>查询员工  薪资</span><br><span class="line"><span class="comment">--输出结果为一列</span></span><br><span class="line"><span class="comment">--&#x27;xx号部门&#x27;为中文</span></span><br><span class="line">要求：薪资列输出格式为：ENAME在<span class="string">&#x27;xx号部门&#x27;</span>，薪资为:SAL</span><br></pre></td></tr></table></figure><h2 id="聚组函数"><a href="#聚组函数" class="headerlink" title="聚组函数"></a>聚组函数</h2><blockquote><p>特点：</p><ol><li>不能与其他字段连用（除非有分组语句）</li><li>count(1) 和 count(*)效果相同</li><li>空值不参与统计</li><li>每个分组返还一个值</li></ol></blockquote><blockquote><p><strong>注意点：</strong></p><p><strong>聚组函数不能放在where后面</strong></p></blockquote><h3 id="MAX-最大值"><a href="#MAX-最大值" class="headerlink" title="MAX()最大值"></a>MAX()最大值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp; </span><br></pre></td></tr></table></figure><h3 id="MIN-最小值"><a href="#MIN-最小值" class="headerlink" title="MIN()最小值"></a>MIN()最小值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(sal) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="SUM-求和"><a href="#SUM-求和" class="headerlink" title="SUM()求和"></a>SUM()求和</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="AVG-平均值"><a href="#AVG-平均值" class="headerlink" title="AVG()平均值"></a>AVG()平均值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="COUNT-字段-计数"><a href="#COUNT-字段-计数" class="headerlink" title="COUNT(字段)计数"></a>COUNT(字段)计数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="comment">--仅仅计算该字段的个数，不计算空值</span></span><br></pre></td></tr></table></figure><h3 id="COUNT-或1-计数"><a href="#COUNT-或1-计数" class="headerlink" title="COUNT(*或1)计数"></a>COUNT(*或1)计数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql函数学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进阶查询</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/4.%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/4.%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="进阶查询"><a href="#进阶查询" class="headerlink" title="进阶查询"></a>进阶查询</h1><h2 id="排序-order-by"><a href="#排序-order-by" class="headerlink" title="排序  order by"></a>排序  order by</h2><blockquote><p><strong>基本语法：</strong><br>select 字段 from 表 where 条件 order by 字段 asc&#x2F;desc;<br>asc 代表：升序排列–默认值，可以省略<br>desc 代表：降序排列</p></blockquote><blockquote><p>书写顺序    执行顺序<br>select        from<br>from          where<br>where         select<br>order by      order by  –order by 的书写顺序跟执行顺序都在最后</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">asc</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">FOR</span> <span class="keyword">UPDATE</span> </span><br></pre></td></tr></table></figure><p><strong>思考题</strong></p><p>1.除了数值型，order by 还能排什么类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">三种类型都可以</span><br><span class="line"><span class="comment">--以升序为例，数值型从小到大，日期型从过去到未来，字符型首字母A&lt;Z&lt;a&lt;z,如果首字母相同依此比较</span></span><br><span class="line"><span class="comment">--数值跟字符都有时   数值 &lt; 大写字母 &lt; 小写字母</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> hiredate;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> ename;</span><br><span class="line"><span class="comment">--测试一下汉字排序</span></span><br></pre></td></tr></table></figure><p>2.排序能同时排多个字段嘛？会按照什么规则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> job,sal;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> job,sal <span class="keyword">desc</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> job <span class="keyword">desc</span>,sal <span class="keyword">desc</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> empno,sal;<span class="comment">--因为empno列没有重复数据，所以sal排序不起作用</span></span><br><span class="line">能，按照先写先排，后写后排的排序规则<span class="comment">--先写的列内有重复的内容，后写的排序才能发挥作用</span></span><br></pre></td></tr></table></figure><p>3.空值在排序时会怎么排</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> comm;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> comm <span class="keyword">desc</span>;<span class="comment">--空值在排序时大于最大值</span></span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><p>1.order by 后面除了跟正常的字段名外，还可以跟别名<br>–因为 order by 执行顺序在 select 之后，所以order by 可以认识别名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> job 职位 <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> 职位;</span><br></pre></td></tr></table></figure><p>2.可以用数字指代字段–数字几就是第几个字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select ename,job,sal,deptno from emp order by 1;</span><br><span class="line">select ename,job,sal,deptno from emp order by 2;</span><br><span class="line">select ename,job,sal,deptno from emp order by 2,3 desc;</span><br></pre></td></tr></table></figure><p>3.order by 后面可以跟运算、函数、case when，而且在 order by 后面的内容只参与排序，不显示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> nvl(comm,<span class="number">1000</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">10</span> <span class="keyword">then</span> <span class="number">2</span></span><br><span class="line">                             <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">20</span> <span class="keyword">then</span> <span class="number">1</span></span><br><span class="line">                             <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">30</span> <span class="keyword">then</span> <span class="number">3</span></span><br><span class="line">                             <span class="keyword">end</span> <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><p><strong>4.空值排序</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nulls <span class="keyword">first</span><span class="comment">--把空值放在最前面</span></span><br><span class="line">nulls <span class="keyword">last</span><span class="comment">--把空值放在最后面</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> comm <span class="keyword">desc</span> nulls <span class="keyword">last</span>;</span><br></pre></td></tr></table></figure><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><blockquote><p>分组 group by<br>分组条件 having</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(score) <span class="keyword">from</span> class_35;</span><br></pre></td></tr></table></figure><blockquote><p><strong>基本语法：</strong></p><ul><li><input checked disabled type="checkbox"> <font color="Brown">select 字段 from 表 where 条件 group by 字段 order by 字段;</font></li><li><input checked disabled type="checkbox"> <font color="Brown">select有的字段group by里必须有(分组函数除外)</font></li><li><input checked disabled type="checkbox"> <font color="Brown">group by 中的字段不能起别名</font></li></ul><p><strong>书写顺序    执行顺序</strong><br>select        from<br>from          where<br>where         group by –group by 看不到 select中的别名与顺序<br>group by      having<br>having        select<br>order by      order by  –order by 的书写顺序跟执行顺序都在最后</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;<span class="comment">--自带去重功能</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">avg</span>(sal),<span class="built_in">sum</span>(sal),<span class="built_in">count</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> deptno,sal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;<span class="comment">--报错，组有三个，薪资有14个，条数对不上</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> deptno,job <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno,job;<span class="comment">--group by中有两个或以上字段时，分组条件变为两列值都一致时分为一组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno,job;<span class="comment">--group by中有的字段，select可以没有</span></span><br></pre></td></tr></table></figure><h3 id="思考题："><a href="#思考题：" class="headerlink" title="思考题："></a>思考题：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查询各部门最高薪资和最低薪资的差值，输出部门编号跟差值</span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal) <span class="operator">-</span> <span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>查询薪资在<span class="number">1000</span><span class="operator">~</span><span class="number">3000</span>之间，按照有佣金和无佣金分组，输出薪资合计和平均薪资。</span><br><span class="line"><span class="comment">--难点：select执行顺序在分组之后，所以分组无法直接使用select里的case when</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;有佣金&#x27;</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;无佣金&#x27;</span> <span class="keyword">end</span> 佣金,<span class="built_in">sum</span>(sal),<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1000</span> <span class="keyword">and</span> <span class="number">3000</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;有佣金&#x27;</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;无佣金&#x27;</span> <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal),<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1000</span> <span class="keyword">and</span> <span class="number">3000</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;有佣金&#x27;</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;无佣金&#x27;</span> <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>查询<span class="number">1982</span>年以前入职的员工，按照<span class="string">&#x27;CLERK&#x27;</span> 跟 <span class="string">&#x27;不是CLERK&#x27;</span> 分组，查询岗位类型，平均薪资，最高薪资，按照最高薪资降序排序</span><br><span class="line"><span class="comment">--分组后面跟排序</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;办事员&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不是办事员&#x27;</span> <span class="keyword">end</span> 岗位类型,<span class="built_in">avg</span>(sal),<span class="built_in">max</span>(sal) <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">where</span> hiredate <span class="operator">&lt;</span> to_date(<span class="string">&#x27;1982-01-01&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;办事员&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不是办事员&#x27;</span> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">3</span> <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>查询职位为经理，最低薪资大于<span class="number">2000</span>的员工的 部门编号，总薪资 并按照部门编号进行分组，最后按照总薪资降序排序</span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">sum</span>(sal)</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">where</span> job <span class="operator">=</span> <span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">and</span> <span class="built_in">min</span>(sal) <span class="operator">&gt;</span> <span class="number">2000</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span> <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>having–专门针对分组函数的比较</strong><br><strong>–只能跟在group by后面</strong><br><strong>–having 中有的字段，group by 中必须有</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select deptno, sum(sal)</span><br><span class="line">  from emp</span><br><span class="line"> where job = &#x27;MANAGER&#x27;</span><br><span class="line"> group by deptno</span><br><span class="line">having min(sal) &gt; 2000</span><br><span class="line"> order by 2 desc;</span><br><span class="line"></span><br><span class="line">select deptno,sum(sal) from emp where job = &#x27;MANAGER&#x27; group by deptno having min(sal) &gt; 2000 order by 2 desc;</span><br></pre></td></tr></table></figure><blockquote><p><strong>where 与 having 的区别</strong></p><ol><li>where 可以单独使用，having 必须跟在 group by 后面</li><li>都是做条件筛查，where 是针对 from 后的表， having 是针对 分组 后的数据。</li><li>where 中的条件可以放在 having 中使用，但是会影响执行效率</li></ol></blockquote><hr><h2 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a>分组函数</h2><blockquote><p><strong>聚组函数(聚合函数，分组函数)</strong><br>–（在分组前）不能跟其他字段连用<br>–空值不参与统计<br>–每个分组整合后返还一个值<br>注意点：聚组函数不能放在where后面使用</p></blockquote><p><strong>MAX() –最大值</strong><br><strong>MIN() –最小值</strong><br><strong>SUM() –求和</strong><br><strong>AVG() –平均值</strong><br><strong>COUNT(1) –计数</strong><br><strong>COUNT(*) –计数</strong><br><strong>COUNT(字段) –单列计数</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">MAX</span>(sal),<span class="built_in">MIN</span>(sal) ,<span class="built_in">SUM</span>(sal) ,<span class="built_in">AVG</span>(sal) ,<span class="built_in">COUNT</span>(sal) ,<span class="built_in">COUNT</span>(comm) <span class="keyword">from</span> emp; </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="built_in">AVG</span>(sal);<span class="comment">--聚组函数不能放在where后面使用</span></span><br></pre></td></tr></table></figure><hr><h2 id="嵌套查询"><a href="#嵌套查询" class="headerlink" title="嵌套查询"></a>嵌套查询</h2><blockquote><p>含义：<br>在一个select语句中嵌套另一个select语句的方法被称为嵌套查询，<br>其中外层查询被称为 父查询&#x2F;主查询 ，内层查询被称为 子查询&#x2F;从查询，<br>子查询可以嵌套多层，子查询的结果会成为父查询的条件。</p><p>嵌套查询分为相关查询跟非相关查询两种<br>非相关的特点：子查询部分是一个完整的查询语句，可以独立运行<br>相关的特点：带有关键词 exists ，子查询部分不能独立运行，只能判断真(true)假(false)</p></blockquote><blockquote><p>特点：<br>1.子查询必定被括号包裹，跟父查询之间用逻辑运算符或exists连接(&gt; &lt; &#x3D; !&#x3D; in any all exists)<br>2.子查询可以有多层<br>3.子查询可以添加在以下几个位置<br>select 子查询–把子查询结果作为字段使用<br>from 子查询–把子查询结果作为表使用<br>where 子查询–把子查询结果作为条件使用<br>having 子查询–把子查询结果作为条件使用<br>select 字段&#x2F;子查询 from 表&#x2F;子查询 where 条件&#x2F;子查询 group by 字段 having 条件&#x2F;子查询 order by 字段;</p></blockquote><h3 id="一-where-子查询"><a href="#一-where-子查询" class="headerlink" title="一. where 子查询"></a>一. where 子查询</h3><p><strong>单行单列</strong><br><strong>单行多列</strong><br><strong>多行单列</strong><br><strong>多行多列</strong></p><p><strong>多行时用in替代等号，多列时用括号括住所有列</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查询SMITH所在部门的所有员工信息</span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(<span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>);<span class="comment">--子查询与父查询条件要一一对应</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>查询scott手下有哪些员工</span><br><span class="line"><span class="keyword">select</span> empno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SCOTT&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> mgr <span class="keyword">in</span>(<span class="keyword">select</span> empno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SCOTT&#x27;</span>);<span class="comment">--子查询与父查询字段名可以不同</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>查询公司工资最高的那个人的全部信息</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> (<span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp));<span class="comment">--嵌套查询可以有多层</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line"></span><br><span class="line"><span class="number">4</span><span class="number">-1.</span>查询与<span class="string">&#x27;smith&#x27;</span>和<span class="string">&#x27;scott&#x27;</span>同部门的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;KING&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">4</span><span class="number">-2.</span>查询与<span class="string">&#x27;YIFAN&#x27;</span>和<span class="string">&#x27;scott&#x27;</span>同部门且同薪资的员工信息  （要的结果为：<span class="number">10</span>   <span class="number">800</span>  或者  <span class="number">20</span>   <span class="number">3000</span>）</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;YIFAN&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>)) </span><br><span class="line"><span class="keyword">and</span> sal <span class="keyword">in</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;YIFAN&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));<span class="comment">--错误，得出的结果多出预期</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (deptno,sal) <span class="keyword">in</span>(<span class="keyword">select</span> deptno,sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;YIFAN&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">--父查询列多时报错为：没有足够的值；</span></span><br><span class="line"><span class="comment">--子查询列多时报错为：值过多；</span></span><br><span class="line"><span class="comment">--子查询值为多个时，应该用in连接，用等号会报错，报错为：单行子查询返回多个行。</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意点：</strong><br>1.子查询返还多行多列的值时，父查询的列数要一致，多行要用in，数据类型要一致，列名可以不一致。<br>2.多行时用in替代等号，多列时用括号括住所有列</p></blockquote><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查询与<span class="string">&#x27;smith&#x27;</span>和<span class="string">&#x27;scott&#x27;</span>同岗位 或 同薪资的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> JOB <span class="keyword">in</span>(<span class="keyword">select</span> JOB <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>)) </span><br><span class="line"><span class="keyword">and</span> sal <span class="keyword">in</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> JOB <span class="keyword">in</span>(<span class="keyword">select</span> JOB <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>)) </span><br><span class="line"><span class="keyword">or</span> sal <span class="keyword">in</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>查询与<span class="string">&#x27;smith&#x27;</span>和<span class="string">&#x27;scott&#x27;</span>同岗位 且 同薪资的员工信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> (JOB,SAL) <span class="keyword">IN</span> (<span class="keyword">SELECT</span> JOB,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ENAME <span class="keyword">IN</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="二-having-子查询"><a href="#二-having-子查询" class="headerlink" title="二. having 子查询"></a>二. having 子查询</h3><p><strong>–主要解决分组函数比较问题，或分组后附加条件</strong></p><p>注意：聚合函数的嵌套不能写在having后   –可以写在select后</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输出薪资大于员工平均薪资 的所有信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line"></span><br><span class="line">输出部门平均薪资大于员工平均薪资 的部门编号与平均薪资</span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal) <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp);</span><br></pre></td></tr></table></figure><h3 id="三-from-子查询"><a href="#三-from-子查询" class="headerlink" title="三. from 子查询"></a>三. from 子查询</h3><p><strong>–把子查询结果作为表来使用(把一张表内的部分内容当作一张表使用)，常见于解决表连接问题</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="string">&#x27;稍嫌钱&#x27;</span>,<span class="string">&#x27;邵乾坤&#x27;</span>,<span class="string">&#x27;蒋廷禹&#x27;</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">求史密斯所在部门工资最高的员工信息</span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>))</span><br><span class="line"><span class="keyword">where</span> sal <span class="keyword">in</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="四-select-子查询"><a href="#四-select-子查询" class="headerlink" title="四. select 子查询"></a>四. select 子查询</h3><p><strong>–子查询只能返还一个值</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp) <span class="operator">-</span> sal <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp) <span class="operator">-</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp),sal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">select</span> sal <span class="keyword">from</span> emp) <span class="keyword">from</span> emp;<span class="comment">--错误，子查询返回了一组值</span></span><br><span class="line"></span><br><span class="line">输出<span class="number">10</span>号部门跟<span class="number">20</span>号部门平均薪资的差</span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span><span class="number">10</span>)<span class="operator">-</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span><span class="number">20</span>) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="五-exists-子查询"><a href="#五-exists-子查询" class="headerlink" title="五.exists 子查询"></a>五.exists 子查询</h3><blockquote><p>1.先算外层，把外层的查询结果拿到内层，看内层是否成立，只有内层返回 true 时，外层才会执行。<br>2.内层只比较不输出（带有exists的子查询不返回任何值，只产生逻辑真值 true 或逻辑假值 false）<br>3.exists子查询不能独立运行，也不能输出，就是甲方爸爸，只管行不行<br>4.子查询的结果至少存在一条数据时，则主查询输出的结果为我们想要的结果；<br>  如果子查询找不到数据时，则主查寻结果为我们想要的数据 not exists </p></blockquote><p>查询史密斯所在部门的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span> <span class="keyword">and</span> a.deptno <span class="operator">=</span> b.deptno);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span> <span class="keyword">and</span> a.deptno <span class="operator">=</span> b.deptno);</span><br></pre></td></tr></table></figure><p>查询部门名称中带有字母’C’的部门下所有员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> dept b <span class="keyword">where</span> a.deptno <span class="operator">=</span> b.deptno <span class="keyword">and</span> dname <span class="keyword">like</span> <span class="string">&#x27;%C%&#x27;</span>);</span><br></pre></td></tr></table></figure><p>查询工资大于10号部门平均工资的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">10</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> a.sal <span class="operator">&gt;</span> <span class="built_in">avg</span>(b.sal));</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> a.sal <span class="operator">&gt;</span> <span class="built_in">avg</span>(b.sal) <span class="keyword">and</span> deptno <span class="operator">=</span> <span class="number">10</span> );<span class="comment">--效率低,分组不能省略</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">10</span> <span class="keyword">having</span> a.sal <span class="operator">&gt;</span> <span class="built_in">avg</span>(b.sal));</span><br></pre></td></tr></table></figure><p>查询哪个部门的平均薪资高于30号部门的平均薪资，显示出其部门编号跟人数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp a <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="keyword">exists</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">30</span> <span class="keyword">having</span> <span class="built_in">avg</span>(a.sal) <span class="operator">&gt;</span> <span class="built_in">avg</span>(b.sal));</span><br></pre></td></tr></table></figure><p>显示出工资大于本部门平均工资的员工姓名，工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,deptno <span class="keyword">FROM</span> EMP A <span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> </span><br><span class="line">(<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> EMP B <span class="keyword">WHERE</span> A.DEPTNO <span class="operator">=</span> B.DEPTNO <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">HAVING</span> A.SAL <span class="operator">&gt;</span> <span class="built_in">AVG</span>(B.SAL)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(sal),deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br></pre></td></tr></table></figure><h4 id="exists-跟-in的区别"><a href="#exists-跟-in的区别" class="headerlink" title="exists 跟 in的区别"></a>exists 跟 in的区别</h4><p><strong>1、适用表的类型不同。</strong></p><p>（“exists的效率比in的高”的说法不完全正确，要视情况而定。)<br>in适用于子查询结果集小而外面的表结果集大的情况。exists适用于外面的表结果集小而子查询结果集大的情况。<br><strong>2、子查询关联不同。</strong><br>exists一般都是关联子查询。对于关联子查询，必须先执行外层查询，接着对所有通过过滤条件的记录，执行内层查询。<br>外层查询和内层查询相互依赖，因为外层查询会把数据传递给内层查询。<br>in则一般都是非关联子查询，非关联子查询则必须先完成内层查询之后，外层查询才能介入。<br><strong>3、执行次数不同。</strong><br>IN 语句：只执行一次，确定给定的值是否与子查询或列表中的值相匹配。<br>in在查询的时候，首先查询子查询的表，然后将内表和外表做一个笛卡尔积，然后按照条件进行筛选。<br>所以相对内表比较小的时候，in的速度较快。</p><blockquote><p>EXISTS语句：执行次数根据表的长度而定。指定一个子查询，检测行的存在。遍历循环外表，<br>然后看外表中的记录有没有和内表的数据一样的。匹配上就将结果放入结果集中。</p></blockquote><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/4.%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2/20171129155351826.png" alt="20171129155351826"></p><h2 id="表连接"><a href="#表连接" class="headerlink" title="表连接"></a>表连接</h2><p><strong>什么是表连接</strong><br>将几张不同表内的字段连接在一起的方法</p><p><strong>什么时候使用表连接</strong><br>当输出的字段来源至少需要两张表时，必须使用表连接</p><p><strong>输出部门编号为20 的员工的姓名跟部门所在地</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,loc <span class="keyword">from</span> emp , dept <span class="keyword">where</span> emp.d;</span><br></pre></td></tr></table></figure><blockquote><p><strong>表连接中的注意点：</strong><br>1.表连接中共有的字段会出现两次并自动升序排列<br>2.表连接的连接条件不是列名相同，而是列的数据类型相同</p></blockquote><h3 id="一-内连接"><a href="#一-内连接" class="headerlink" title="一. 内连接"></a>一. 内连接</h3><p><strong>inner join</strong></p><p>inner 是表连接默认类型，可以省略</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--按照关联条件进行关联，将两张表中符合关联条件的内容全部输出</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">inner</span> <span class="keyword">join</span> 表B <span class="keyword">on</span> 两个表共有的字段;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,loc <span class="keyword">from</span> emp a <span class="keyword">inner</span> <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (emp a <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> deptno,sal,ename,dname <span class="keyword">from</span> emp a <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;<span class="comment">--报错，未明确定义列</span></span><br><span class="line"><span class="keyword">select</span> a.deptno,sal,ename,dname <span class="keyword">from</span> emp a <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br><span class="line"><span class="keyword">select</span> b.deptno,sal,ename,dname <span class="keyword">from</span> emp a <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br><span class="line"><span class="comment">--因为deptno列是两张表都有的列，在使用时必须声明使用哪张表中的列</span></span><br></pre></td></tr></table></figure><h3 id="二-外连接"><a href="#二-外连接" class="headerlink" title="二. 外连接"></a>二. 外连接</h3><p><strong>(左外连接，右外连接，全外连接)</strong></p><p><strong>按照关联条件进行关联，将两张表中符合关联条件的内容全部输出，不符合关联条件的部分根据情况输出</strong></p><h4 id="1-左外连接"><a href="#1-左外连接" class="headerlink" title="1.左外连接"></a>1.左外连接</h4><p> <strong>left join</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--按照关联条件进行关联，以左表数据为主（左表内容全部输出，右边没用对应关系的部分用null填充）</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">left</span> <span class="keyword">join</span> 表B <span class="keyword">on</span> 两个表共有的字段;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> DEPT a <span class="keyword">left</span> <span class="keyword">join</span> EMP b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><h4 id="2-右外连接"><a href="#2-右外连接" class="headerlink" title="2.右外连接"></a>2.右外连接</h4><p> <strong>right join</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--按照关联条件进行关联，以右表数据为主（右表内容全部输出，左边没用对应关系的部分用null填充）</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">right</span> <span class="keyword">join</span> 表B <span class="keyword">on</span> 两个表共有的字段;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">right</span> <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><h4 id="3-全外连接"><a href="#3-全外连接" class="headerlink" title="3.全外连接"></a>3.全外连接</h4><p> <strong>full join</strong> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--按照关联条件进行关联，所有数据全部输出（没有对应关系的部分用null填充）</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">full</span> <span class="keyword">join</span> 表B <span class="keyword">on</span> 两个表共有的字段;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">full</span> <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><h3 id="三-笛卡尔积"><a href="#三-笛卡尔积" class="headerlink" title="三. 笛卡尔积"></a>三. 笛卡尔积</h3><p> <strong>cross join</strong></p><p><strong>容易造成死机，只有两张表中数据都不多的时候可以使用</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--交叉连接，不需要关联条件，把两张表中所有的行进行交叉输出</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">cross</span> <span class="keyword">join</span> 表B;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">cross</span> <span class="keyword">join</span> dept b;</span><br></pre></td></tr></table></figure><hr><h4 id="特殊的连接方式"><a href="#特殊的连接方式" class="headerlink" title="特殊的连接方式"></a>特殊的连接方式</h4><p>–需要关联条件的名称跟数据类型均相同</p><h5 id="一-自然连接-natural"><a href="#一-自然连接-natural" class="headerlink" title="一. 自然连接  natural"></a>一. 自然连接  natural</h5><p><strong>结果等同于内连接</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--不需要写关联条件，自然连接会自动查找两个表中同名字段进行关联（有几个同名字段关联几个）</span></span><br><span class="line"><span class="comment">--被关联的字段会出现在表的最前面，并且只出现一次</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">natural</span> <span class="keyword">join</span> 表B;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">natural</span> <span class="keyword">join</span> dept b;</span><br></pre></td></tr></table></figure><h5 id="二-不使用on-使用-using"><a href="#二-不使用on-使用-using" class="headerlink" title="二. 不使用on 使用 using()"></a>二. 不使用on 使用 using()</h5><p>–使用using()关键词关联同名字段时，多个同名字段之间用英文逗号隔开<br>–在查询结果当中，关联字段会放在最前面且只出现一次</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">inner</span> <span class="keyword">join</span> 表B <span class="keyword">using</span>(两个表共有的字段);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">inner</span> <span class="keyword">join</span> dept b <span class="keyword">using</span>(deptno);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">inner</span> <span class="keyword">join</span> emp b <span class="keyword">using</span>(empno,ename,job);</span><br></pre></td></tr></table></figure><hr><h2 id="一-自连接"><a href="#一-自连接" class="headerlink" title="一. 自连接"></a>一. 自连接</h2><p><strong>–自己链接自己</strong></p><p>查询并输出所有的员工编号，姓名，岗位，上级员工姓名，上级员工岗位</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.deptno,a.ename,a.job,b.ename,b.job <span class="keyword">from</span> emp a <span class="keyword">left</span> <span class="keyword">join</span> emp b <span class="keyword">on</span> a.mgr <span class="operator">=</span> b.empno;</span><br></pre></td></tr></table></figure><h2 id="二-不等连接"><a href="#二-不等连接" class="headerlink" title="二. 不等连接"></a>二. 不等连接</h2><p><strong>–不使用等于号的连接方式</strong></p><p>select * from salgrade;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查询员工姓名，薪资，薪资等级</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,sal,grade <span class="keyword">from</span> emp a <span class="keyword">join</span> salgrade b <span class="keyword">on</span> sal <span class="keyword">between</span> losal <span class="keyword">and</span> hisal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,sal,grade <span class="keyword">from</span> emp a <span class="keyword">join</span> salgrade b <span class="keyword">on</span> sal <span class="operator">&gt;=</span> losal <span class="keyword">and</span> sal <span class="operator">&lt;=</span> hisal;</span><br></pre></td></tr></table></figure><h2 id="三-oracle-独有的连接方式"><a href="#三-oracle-独有的连接方式" class="headerlink" title="三.oracle 独有的连接方式"></a>三.oracle 独有的连接方式</h2><p><strong>–能看懂即可，不要使用</strong></p><p><strong>笛卡尔积&#x2F;交叉连接</strong> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a,dept b;</span><br></pre></td></tr></table></figure><p><strong>内连接</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a,dept b <span class="keyword">where</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><p><strong>左外连接</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a,dept b <span class="keyword">where</span> a.deptno <span class="operator">=</span> b.deptno(<span class="operator">+</span>);</span><br></pre></td></tr></table></figure><p><strong>右外连接</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a,dept b <span class="keyword">where</span> a.deptno(<span class="operator">+</span>) <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><blockquote><p>注意点：左外连接右表带加号，右外连接左表带加号</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进阶查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PLSQL存储过程</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/23.PLSQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/23.PLSQL%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h1><p><code>procedure</code>  –简单的说就是专门干一件事一段sql语句。</p><blockquote><p>百度百科上是这样解释的，存储过程（Stored Procedure）是在大型数据库系统中，一组为了完成特定功能的SQL 语句集，<br>存储在数据库中，经过第一次编译后再次调用不需要再次编译，用户通过指定存储过程的名字并给出参数来调用存储过程。<br>可以由数据库自己去调用，也可以由java程序去调用。</p></blockquote><h2 id="为什么要写存储过程？"><a href="#为什么要写存储过程？" class="headerlink" title="为什么要写存储过程？"></a>为什么要写存储过程？</h2><h3 id="1-效率高"><a href="#1-效率高" class="headerlink" title="1.效率高"></a>1.效率高</h3><p>  存储过程编译一次后，就会存到数据库，每次调用时都直接执行。而普通的sql语句我们要保存到其他地方(例如：记事本上),<br>  都要先分析编译才会执行。所以想对而言存储过程效率更高。</p><h3 id="2-降低网络流量"><a href="#2-降低网络流量" class="headerlink" title="2.降低网络流量"></a>2.降低网络流量</h3><p>存储过程编译好会放在数据库，我们在远程调用时，不会传输大量的字符串类型的sql语句。</p><h3 id="3-复用性高"><a href="#3-复用性高" class="headerlink" title="3.复用性高"></a>3.复用性高</h3><p>存储过程往往是针对一个特定的功能编写的，当再需要完成这个特定的功能时，可以再次调用该存储过程。</p><h3 id="4-可维护性高"><a href="#4-可维护性高" class="headerlink" title="4.可维护性高"></a>4.可维护性高</h3><p>当功能要求发生小的变化时，修改之前的存储过程比较容易，花费精力少。</p><h3 id="5-安全性高"><a href="#5-安全性高" class="headerlink" title="5.安全性高"></a>5.安全性高</h3><p>完成某个特定功能的存储过程一般只有特定的用户可以使用，具有使用身份限制，更安全。</p><hr><blockquote><p>1.匿名块：没有名字，运行后不会保存，想要执行相同的功能只能重复书写<br>2.命名块：create 开头，有名字， 运行一次后会保存在系统中，后续使用时可以直接调用</p><p>常见的命名块有：存储过程，存储函数，触发器，包</p></blockquote><h2 id="存储过程创建跟使用步骤"><a href="#存储过程创建跟使用步骤" class="headerlink" title="存储过程创建跟使用步骤"></a>存储过程创建跟使用步骤</h2><h3 id="1-创建存储过程"><a href="#1-创建存储过程" class="headerlink" title="1.创建存储过程"></a>1.创建存储过程</h3><p>  &#x3D;&#x3D;or replace  替换,第一次创建存储过程时可以不写，修改存储过程用&#x3D;&#x3D; </p><p><code>create or replace procedure</code> 存储过程名(参数 参数类型 数据类型) <code>is</code>&#x2F;<code>as</code><br>  声明摆放位置                                                      &#x3D;&#x3D;is&#x2F;as 后面跟声明，相当于匿名块中的declare&#x3D;&#x3D;<br><code>begin</code><br>  要实现的操作;<br><code>end;</code></p><p>参数      &#x3D;&#x3D;表中的列名&#x3D;&#x3D;<br>参数类型：<br><code>in</code>      –传入一个参数–默认值，不写参数类型默认为in<br><code>out</code>     –传出一个参数<br><code>in out</code>  –同一个参数，先传入，在传出</p><h3 id="2-调用存储过程"><a href="#2-调用存储过程" class="headerlink" title="2.调用存储过程"></a>2.调用存储过程</h3><ol><li>call 存储过程名(参数);–通过关键词调用存储过程</li><li>begin<br>  存储过程名(参数);–通过命令快调用存储过程<br>end;</li></ol><hr><h2 id="一-无参数的存储过程"><a href="#一-无参数的存储过程" class="headerlink" title="一. 无参数的存储过程"></a>一. 无参数的存储过程</h2><blockquote><p>不需要传入参数，也不需要传出参数</p></blockquote><h3 id="1-创建存储过程-1"><a href="#1-创建存储过程-1" class="headerlink" title="1.创建存储过程"></a>1.创建存储过程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure pro_aaa is</span><br><span class="line">  --声明摆放位置--is/as 后面跟声明，相当于匿名块中的declare </span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(&#x27;南京终于不热了！&#x27;);</span><br><span class="line">end;</span><br><span class="line">--存储过程创建结束</span><br><span class="line"></span><br><span class="line">--调用aaa存储过程</span><br><span class="line">call pro_aaa();</span><br><span class="line">begin</span><br><span class="line">  pro_aaa();</span><br><span class="line">end;</span><br><span class="line">--调用存储过程结束</span><br><span class="line"></span><br><span class="line">--删除aaa存储过程</span><br><span class="line">drop procedure pro_aaa;</span><br><span class="line">--删除存储过程结束</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure pro_aaa is--匿名块转化成存储过程的方法》把declare 替换成创建存储过程的语句</span><br><span class="line">  v_no number(2) :=1;</span><br><span class="line">begin</span><br><span class="line">  while v_no &lt; 8</span><br><span class="line">  loop</span><br><span class="line">    dbms_output.put_line(v_no);</span><br><span class="line">    v_no := v_no + 1;</span><br><span class="line">  end loop;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">call pro_aaa();</span><br></pre></td></tr></table></figure><h3 id="2-传入参数的存储过程"><a href="#2-传入参数的存储过程" class="headerlink" title="2.传入参数的存储过程"></a>2.传入参数的存储过程</h3><blockquote><p>参数的个数、类型可以自定义，但是参数不允许指定长度</p></blockquote><p>例：写一个存储过程，要求打印调用时传入的文字</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure pro_wenzi (wenzi in varchar2) is</span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(wenzi);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">call pro_wenzi(&#x27;&amp;要传入的文字&#x27;);</span><br></pre></td></tr></table></figure><p>例：写一个存储过程，当我们输入两个任意数值时，打印较大的那个<br>当我们输入的数值一样时，提示’请输入两个不同的数值’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  no1 number:=19;</span><br><span class="line">  no2 number:=19;</span><br><span class="line">begin</span><br><span class="line">  if no1 &gt; no2 then</span><br><span class="line">    dbms_output.put_line(no1);</span><br><span class="line">  elsif no1 &lt; no2 then</span><br><span class="line">    dbms_output.put_line(no2);</span><br><span class="line">  else</span><br><span class="line">    raise_application_error(-20000,&#x27;请输入两个不同的数值&#x27;);</span><br><span class="line">  end if;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create or replace procedure pro_wenzi(no1 in number, no2 in number) is</span><br><span class="line">begin</span><br><span class="line">  if no1 &gt; no2 then</span><br><span class="line">    dbms_output.put_line(no1);</span><br><span class="line">  elsif no1 &lt; no2 then</span><br><span class="line">    dbms_output.put_line(no2);</span><br><span class="line">  else</span><br><span class="line">    raise_application_error(-20000,&#x27;请输入两个不同的数值&#x27;);</span><br><span class="line">  end if;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">call pro_wenzi(19,19);</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  pro_wenzi(18,19);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>例：写一个存储过程，输入员工编号，打印员工姓名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure pro_xingming(no1 number) is</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp where empno = no1;</span><br><span class="line">  dbms_output.put_line(v_emp.ename);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">call pro_xingming(&amp;员工编号);</span><br></pre></td></tr></table></figure><h3 id="3-传出参数的存储过程"><a href="#3-传出参数的存储过程" class="headerlink" title="3.传出参数的存储过程"></a>3.传出参数的存储过程</h3><blockquote><p>得有接收参数的组件</p></blockquote><p>例：写一个存储过程，传出一个员工姓名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">  xm varchar2(20);</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp where empno = 7788;</span><br><span class="line">  xm := v_emp.ename;---------要传出的参数得有赋值的步骤</span><br><span class="line">  dbms_output.put_line(xm);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">create or replace procedure pro_xingming2(xm out varchar2) is</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp where empno = 7788;</span><br><span class="line">  xm := v_emp.ename;---------要传出的参数得有赋值的步骤</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  v_xingming varchar2(100);--声明一个数据类型用于接收传出的参数</span><br><span class="line">begin</span><br><span class="line">  pro_xingming2(v_xingming);---调用中写一个数据类型接收传出的参数，名称可以跟出参 参数 一致，也可以不同</span><br><span class="line">  dbms_output.put_line(v_xingming);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">select * from emp;</span><br></pre></td></tr></table></figure><h3 id="4-in-out先传入再传出"><a href="#4-in-out先传入再传出" class="headerlink" title="4.in out先传入再传出"></a>4.in out先传入再传出</h3><blockquote><p>传入的参数跟传出的参数数据类型要一致</p></blockquote><p>例：写一个存储过程，传入一个员工编号，传出一个薪资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">  no1 number :<span class="operator">=</span> <span class="number">7788</span>;</span><br><span class="line">  xz number;</span><br><span class="line">  v_emp emp<span class="operator">%</span>rowtype;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> v_emp <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span>no1;</span><br><span class="line">  xz:<span class="operator">=</span> v_emp.sal;</span><br><span class="line">  dbms_output.put_line(xz);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> pro_xingmingxinzi(xmxz <span class="keyword">in</span> <span class="keyword">out</span> number) <span class="keyword">is</span></span><br><span class="line">  v_emp emp<span class="operator">%</span>rowtype;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> v_emp <span class="keyword">from</span> emp <span class="keyword">where</span> empno<span class="operator">=</span>xmxz;</span><br><span class="line">  xmxz:<span class="operator">=</span> v_emp.sal;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">  xz number :<span class="operator">=</span><span class="number">7788</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  dbms_output.put_line(xz);</span><br><span class="line">  pro_xingmingxinzi(xz);</span><br><span class="line">  dbms_output.put_line(xz);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>例：写一个存储过程，传入一个数字，传出一个数字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> pro(shuzi <span class="keyword">in</span> <span class="keyword">out</span> number) <span class="keyword">is</span><span class="comment">--2--4</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  dbms_output.put_line(shuzi);<span class="comment">--3 打印18</span></span><br><span class="line">  shuzi :<span class="operator">=</span> shuzi <span class="operator">+</span> <span class="number">10</span>; <span class="comment">--4  修改为28</span></span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">  shuzi2 number :<span class="operator">=</span><span class="operator">&amp;</span>数字;<span class="comment">--1</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  pro(shuzi2);<span class="comment">--2--4</span></span><br><span class="line">  dbms_output.put_line(shuzi2);<span class="comment">--5</span></span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h3 id="5-多个参数in-out先传入再传出"><a href="#5-多个参数in-out先传入再传出" class="headerlink" title="5.多个参数in,out先传入再传出"></a>5.多个参数in,out先传入再传出</h3><p>例：写一个存储过程，传入一个员工编号，传出一个员工姓名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure pro_emp(xm out varchar2,no1 in number) is</span><br><span class="line">begin</span><br><span class="line">  select ename into xm from emp where empno = no1;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  xm varchar2(100);</span><br><span class="line">begin</span><br><span class="line">  pro_emp(xm,7788);</span><br><span class="line">  dbms_output.put_line(xm);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>思考题：在存储过程中 入参与出参 的执行顺序与它俩谁在前面有关系吗？</p><p>在存储过程中，先执行入参，后执行出参，&#x3D;&#x3D;跟位置没关系&#x3D;&#x3D;。</p><hr><h2 id="二、在存储过程中使用游标"><a href="#二、在存储过程中使用游标" class="headerlink" title="二、在存储过程中使用游标"></a>二、在存储过程中使用游标</h2><p>无参数传递</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> pro_cur <span class="keyword">is</span></span><br><span class="line">  <span class="keyword">cursor</span> cursor_emp <span class="keyword">is</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">for</span> v_emp <span class="keyword">in</span> cursor_emp loop</span><br><span class="line">    dbms_output.put_line(v_emp.ename <span class="operator">||</span> <span class="string">&#x27; &#x27;</span> <span class="operator">||</span> v_emp.sal);</span><br><span class="line">  <span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  pro_cur();</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>传入一个参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure pro_cur(bm in int) is</span><br><span class="line">  cursor cursor_emp is select * from emp where deptno = bm;</span><br><span class="line">begin</span><br><span class="line">  for v_emp in cursor_emp loop</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  pro_cur(20);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sys_refcursor  --系统游标，这是一个数据类型</span><br></pre></td></tr></table></figure><p>例：传入一个游标，打印出员工的姓名与薪资—传入一组数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure pro_cur(cur in sys_refcursor) is--接收游标并打印</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  loop</span><br><span class="line">    fetch cur into v_emp;</span><br><span class="line">    exit when cur%notfound;</span><br><span class="line">    dbms_output.put_line(&#x27;员工姓名为：&#x27;||v_emp.ename||&#x27;，员工薪资为：&#x27;||v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare--声明游标并赋值</span><br><span class="line">  cur_a sys_refcursor;--声明游标</span><br><span class="line">begin</span><br><span class="line">  open cur_a for select * from emp;--打开游标</span><br><span class="line">  pro_cur(cur_a);--调用存储过程--传递参数</span><br><span class="line">  close cur_a;--关闭游标</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>例：传出一个游标，打印出员工的姓名与薪资—传出一组数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure pro_cur(cur out sys_refcursor) is--打开游标并赋值</span><br><span class="line">begin</span><br><span class="line">  open cur for select * from emp;--打开游标</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">declare--接收游标并打印</span><br><span class="line">  cur_a sys_refcursor;--声明游标</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  pro_cur(cur_a);--调用存储过程--打开游标</span><br><span class="line">  loop</span><br><span class="line">    fetch cur_a into v_emp;--传递参数</span><br><span class="line">    exit when cur_a%notfound;</span><br><span class="line">    dbms_output.put_line(&#x27;员工姓名为：&#x27;||v_emp.ename||&#x27;，员工薪资为：&#x27;||v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">  close cur_a;--关闭游标</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><hr><blockquote><p>注意点：</p><p>1.存储过程可以在当前用户下–&gt; all object –&gt; procedures 文件夹中右键查看<br>2.存储过程写错了没有报错弹窗，但是存储过程名左上角有红色❌<br>3.错误的存储过程调用时会报错<br>4.数据类型后面不要跟东西<br>5.想要打印传入的参数，打印中要写&#x3D;&#x3D;参数名&#x3D;&#x3D;</p></blockquote><h2 id="拓展题："><a href="#拓展题：" class="headerlink" title="拓展题："></a>拓展题：</h2><p>1、有表student(s_no, s_name, s_age, s_grade)，其中s_no-学号，也是主键，是从1开始向上排的（例如：第一个学生学号是1，第二个是2，一次类推）；s_name-学生姓名；s_age-学生年龄；s_grade-年级；这张表的数据量有几千万甚至上亿。一个学年结束了，我要让这些学生全部升一年级，即，让s_grade字段加1。这条sql，写出来如下：<br>update student set s_grade&#x3D;s_grade+1<br>但是我们直接运行这条sql，会因数据量太大会把数据库undo表空间撑爆，从而发生异常。那我们来写个存储过程，进行批量更新，我们每10万条提交一次。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>2、现有学生表（学号 sid，姓名sname，所在系名xi_name）<br>选课表（课程号cid，学号 sid，老师tid，可容纳总人数all_student，已选人数checked，剩余可选人数 space_num）<br>① 编写一个程序，输入学号，返回学生姓名、所在系名，所选课程<br>② 编写一个程序：向学生表插入一条数据，返回该学生可以选学的课程id<br>③ 创建选课表历史记录表（check_history），并创建一个触发器，当对选课表进行删、改时，将原数据添加到选课历史记录表中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>3、有一个玩具售价表toy_price，包含字段（玩具id：toy_id, 玩具名称 toy_name,数量toy_num,单价price）；一个玩具订单表（订单编号order_id ,主键 客户名称：order_name玩具id：toy_id,数量：o_num）<br>要求编写一个程序：传入一条玩具订单表信息，看该玩具是否有足够的数量，如果有更改玩具售价表中数量，如果没有，弹出‘该玩具数量不足请补货’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>块，区，段，表空间</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 存储过程 </tag>
            
            <tag> 块、区、段、表空间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PLSQL触发器</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/24.PLSQL%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/24.PLSQL%E8%A7%A6%E5%8F%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="PLSQL触发器"><a href="#PLSQL触发器" class="headerlink" title="PLSQL触发器"></a>PLSQL触发器</h1><p><strong>现有如下题目：</strong></p><p>有表student(s_no, s_name, s_age, s_grade)，其中s_no-学号，也是主键，是从1开始向上排的<br>（例如：第一个学生学号是1，第二个是2，一次类推）；s_name-学生姓名；s_age-学生年龄；s_grade-年级；<br>这张表的数据量有几千万甚至上亿。一个学年结束了，我要让这些学生全部升一年级，即，让s_grade字段加1。<br>这条sql，写出来如下：<br>update student set s_grade&#x3D;s_grade+1;<br>但是我们直接运行这条sql，会因数据量太大会把数据库undo表空间撑爆，从而发生异常。<br>那我们来写个存储过程，进行批量更新，我们每10万条提交一次。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create or replace procedure pro_student is</span><br><span class="line">  zongrenshu number;</span><br><span class="line">  xuehao number :=0;</span><br><span class="line">begin</span><br><span class="line">  select count(1) into zongrenshu from student;--统计学员总人数</span><br><span class="line">  while xuehao &lt; zongrenshu loop</span><br><span class="line">    xuehao := xuehao + 1;</span><br><span class="line">    update student set s_grade=s_grade+1 where s_no = xuehao;--每次循环更新一条数据</span><br><span class="line">    if mod(xuehao,100000) = 0 then commit;---每10W条提交一次</span><br><span class="line">    end if;</span><br><span class="line">  end loop;</span><br><span class="line">  commit;---把最后不足10W条的数据提交</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><hr><blockquote><p>触发器 trigger</p></blockquote><h2 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h2><blockquote><p>触发器是一个pl&#x2F;sql块，类似存储过程和函数，是很多关系型数据库都提供的功能</p></blockquote><h3 id="1、触发器与存储过程-x2F-函数的区别"><a href="#1、触发器与存储过程-x2F-函数的区别" class="headerlink" title="1、触发器与存储过程&#x2F;函数的区别"></a>1、触发器与存储过程&#x2F;函数的区别</h3><ul><li>存储过程和函数创建之后，想要使用用户主动必须调用，触发器通过提前定义一个事件，当事件执行，自动触发</li><li>存储过程和函数都可以传递参数，而触发器不可以</li></ul><h3 id="2、触发器的作用"><a href="#2、触发器的作用" class="headerlink" title="2、触发器的作用"></a>2、触发器的作用</h3><p>监控对数据库的各种操作，从而实现审计工作</p><h2 id="二-触发器的组成部分"><a href="#二-触发器的组成部分" class="headerlink" title="二. 触发器的组成部分"></a>二. 触发器的组成部分</h2><p>1.触发<code>事件</code>  通常为DML语句的增删改，对表或视图进行操作的事件<br>2.触发<code>时间</code>  before 或 after<br>3.触发<code>操作</code>  begin end 中写的内容<br>4.触发<code>对象</code>  表，视图，数据库<br>5.触发<code>频率</code>  表级与行级<br>            表级 ：针对一张表的操作只触发一次，为默认等级<br>            行级 ： for each row   针对于每一行数据的操作都会触发</p><h2 id="三-触发器的分类"><a href="#三-触发器的分类" class="headerlink" title="三. 触发器的分类"></a>三. 触发器的分类</h2><ol><li>DML触发器：  针对表的DML操作所创建的触发器</li><li>替代触发器： 针对视图</li><li>系统触发器： 针对数据库的登入登出，启动关闭等情况</li></ol><h2 id="四-语法"><a href="#四-语法" class="headerlink" title="四. 语法"></a>四. 语法</h2><h3 id="1-DML-触发器"><a href="#1-DML-触发器" class="headerlink" title="1.DML 触发器"></a>1.DML 触发器</h3><p><code>create or replace trigger</code> 触发器名<br><code>before/after</code>  —在代码运行之前触发还是之后<br><code>insert or update or delete</code> —or 是记录多种操作时起连接作用的<br><code>on</code> 表名<br><code>for each row</code> –行级触发器，不写默认表级触发器<br><code>begin</code><br>  触发后要执行的操作;<br><code>end</code>;</p><p>例题：<br>创建一个触发器，当我们删除empa表中的数据时，打印’检测到目标被修改’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">create or replace trigger tri_xiugai</span><br><span class="line">  after delete on empa</span><br><span class="line">  for each row</span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(&#x27;检测到目标被修改&#x27;);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">--drop table empa;</span><br><span class="line">--create table empa as select * from emp;</span><br><span class="line">select * from empa;</span><br><span class="line">delete from empa;</span><br></pre></td></tr></table></figure><p>例题：<br>创建一个触发器，当我们删除empa表中的数据时，打印’检测到目标被删除’，<br>                      修改empa表中的数据时，打印’检测到目标被修改’，<br>                        给empa表插入数据时，打印’检测到目标被添加’，</p><blockquote><p><strong>属性：</strong> </p><p>&#x3D;&#x3D;inserting&#x3D;&#x3D;</p><p>&#x3D;&#x3D;updating&#x3D;&#x3D;</p><p>&#x3D;&#x3D;deleting&#x3D;&#x3D;</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">create or replace trigger tri_xiugai</span><br><span class="line">  after delete or update or insert on empa</span><br><span class="line">  for each row</span><br><span class="line">begin</span><br><span class="line">  if deleting then </span><br><span class="line">  dbms_output.put_line(&#x27;检测到目标被删除&#x27;);</span><br><span class="line">  elsif  updating  then </span><br><span class="line">    dbms_output.put_line(&#x27;检测到目标被修改&#x27;);</span><br><span class="line">  elsif  inserting  then </span><br><span class="line">    dbms_output.put_line(&#x27;检测到目标被添加&#x27;);</span><br><span class="line">  end if;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">delete from empa where ename = &#x27;SMITH&#x27;;</span><br><span class="line">update empa set deptno = 40 where ename = &#x27;SCOTT&#x27;;</span><br><span class="line">insert into empa(ename) values(&#x27;罗语萱&#x27;);</span><br></pre></td></tr></table></figure><blockquote><p><strong>参数：</strong></p><p>只针对列名起作用</p><p>&#x3D;&#x3D;:old&#x3D;&#x3D; 旧数据 ，原数据</p><p>&#x3D;&#x3D;:new&#x3D;&#x3D; 新数据</p></blockquote><p>例：创建一个触发器，当修改数据时，打印原数据为XXX，修改后的数据为XXX</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">create or replace trigger tri_xiugai</span><br><span class="line">  after update on empa</span><br><span class="line">  for each row</span><br><span class="line">begin</span><br><span class="line">  if </span><br><span class="line">  dbms_output.put_line(&#x27;原数据为:&#x27;||:old||&#x27;修改后的数据为:&#x27;||:new);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 触发器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>游标</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/21.PLSQL%E6%B8%B8%E6%A0%87/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/21.PLSQL%E6%B8%B8%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<h1 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h1><p>游标：（指针）<br>在Oracle中，游标是一种机制，是通过关键字 cursor 的来定义一组oracle查询出来的数据集，<br>可以把查询的数据集存储在内存当中，然后通过游标指向其中一条记录，通过循环游标达到循环数据集的目的。<br>我们可以通过该机制将名称分配给SELECT语句并处理该SQL语句中的信息。<br>select * from emp;</p><p>游标的分类<br>一. 静态游标–显式游标和隐式游标称为静态游标，因为在使用他们之前，游标的定义已经完成，不能再更改。<br>1.隐式游标：系统自动生成和管理的游标，又叫sql游标。DML语句和单行 select…into…语句会使用隐式游标。<br>2.显示游标：用户自己声明和管理的游标，即指定结果集。当查询返回结果超过一行时，就需要一个显式游标。</p><p>二. 动态游标(ref游标)–游标在声明时没有设定，在打开时可以对其进行修改。</p><p>游标属性：<br><code>cursor_name%found</code>      布尔型属性，当最近一次提取游标操作 <code>fetch</code> 成功则为 <code>true</code>,否则为 <code>false</code>；<br><code>cursor_name%notfound</code>   布尔型属性，与<code>%found</code> 相反；<br><code>cursor_name%isopen</code>     布尔型属性，当游标已打开时返回 <code>true</code>；<br><code>cursor_name%rowcount</code>   数字型属性，返回已从游标中读取的记录数。</p><hr><p>隐式游标–系统自动生成和管理的游标，游标属性名均为sql  例如：sql%found<br>–一次只能处理一条数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">   v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp where ename = &#x27;SMITH&#x27;;</span><br><span class="line">  if sql%found then dbms_output.put_line(&#x27;有数据&#x27;);</span><br><span class="line">  end if;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">   v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp where ename = &#x27;XIAOHONG&#x27;;---从这一步开始报错，没机会走游标</span><br><span class="line">  if sql%found then dbms_output.put_line(&#x27;有数据&#x27;);</span><br><span class="line">  else dbms_output.put_line(&#x27;无数据&#x27;);</span><br><span class="line">  end if;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">   v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp where ename = &#x27;SMITH&#x27;;</span><br><span class="line">  if sql%found then dbms_output.put_line(sql%rowcount);</span><br><span class="line">  end if;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  delete from empa;</span><br><span class="line">  dbms_output.put_line(sql%rowcount);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">select * from empa;</span><br></pre></td></tr></table></figure><hr><p>显示游标–用户可以自己声明跟管理的游标，需要自己起名字</p><p>1.声明游标  <code>cursor_name is select 语句</code>–游标名后面可以直接跟参数，作用就是传递参数<br>2.打开游标  <code>open cursor_name</code>–游标名<br>3.传递参数  <code>fetch cursor_name</code>–游标名<br>4.关闭游标  <code>close cursor_name</code>–游标名</p><p>例：定义一个游标，打印出emp表中所有的员工姓名与薪资</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  cursor cursor_emp is select * from emp;</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  open cursor_emp;</span><br><span class="line">  fetch cursor_emp into v_emp;---直接使用的时候只能获取第一条，想要获取多条需要放在循环中</span><br><span class="line">  close cursor_emp;</span><br><span class="line">  dbms_output.put_line(v_emp.ename||&#x27; &#x27;||v_emp.sal);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  cursor cursor_emp is select * from emp;</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  open cursor_emp;</span><br><span class="line">  loop</span><br><span class="line">    fetch cursor_emp into v_emp; ---直接使用的时候只能获取第一条，想要获取多条需要放在循环中</span><br><span class="line">    exit when cursor_emp%notfound;</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">  close cursor_emp;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  cursor cursor_emp is select * from emp where deptno = 10;</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  open cursor_emp;</span><br><span class="line">  loop</span><br><span class="line">    fetch cursor_emp into v_emp; ---直接使用的时候只能获取第一条，想要获取多条需要放在循环中</span><br><span class="line">    exit when cursor_emp%notfound;</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">  close cursor_emp;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>传递参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  cursor cursor_emp(bm number) is select * from emp where deptno = bm;</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  open cursor_emp(&amp;部门编号);</span><br><span class="line">  loop</span><br><span class="line">    fetch cursor_emp into v_emp;</span><br><span class="line">    exit when cursor_emp%notfound;</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">  close cursor_emp;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  cursor cursor_emp(bm number) is select * from emp where deptno = bm;</span><br><span class="line">  --游标名中，需要传递的数据类型名需要自己命，不能跟字段名一样</span><br><span class="line">  --游标中需要传递的数据类型要保持一致</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  open cursor_emp(10);</span><br><span class="line">  loop</span><br><span class="line">    fetch cursor_emp into v_emp;</span><br><span class="line">    exit when cursor_emp%notfound;</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">  close cursor_emp;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>传递多个参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  cursor cursor_emp(bm number,xm varchar2) is select * from emp where deptno = bm and ename = xm;</span><br><span class="line">  --游标名中，需要传递的数据类型名需要自己命，不能跟字段名一样</span><br><span class="line">  --游标中需要传递的数据类型要保持一致</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  open cursor_emp(20,&#x27;SMITH&#x27;);</span><br><span class="line">  loop</span><br><span class="line">    fetch cursor_emp into v_emp;</span><br><span class="line">    exit when cursor_emp%notfound;</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">  close cursor_emp;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  cursor cursor_emp(bm1 number,bm2 number) is select * from emp where deptno = bm1 or deptno = bm2;</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  open cursor_emp(20,10);--即使传递同字段同类型的参数，每个参数也需要对应属于自己的数据类型</span><br><span class="line">  loop</span><br><span class="line">    fetch cursor_emp into v_emp;</span><br><span class="line">    exit when cursor_emp%notfound;</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">  close cursor_emp;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  cursor cursor_emp(bm number) is select * from emp where deptno = bm;</span><br><span class="line">  --游标名中，需要传递的数据类型名需要自己命，不能跟字段名一样</span><br><span class="line">  --游标中需要传递的数据类型要保持一致</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  open cursor_emp(in(10,20));--报错，不能使用集合一次传递多个参数</span><br><span class="line">  loop</span><br><span class="line">    fetch cursor_emp into v_emp;</span><br><span class="line">    exit when cursor_emp%notfound;</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">  close cursor_emp;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>在for循环中使用游标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  cursor cursor_emp is select * from emp;</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  for v_emp in cursor_emp loop</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  cursor cursor_emp(bm number) is select * from emp where deptno = bm;</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  for v_emp in cursor_emp(&amp;部门编号)loop</span><br><span class="line">    dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">  end loop;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>for循环在使用游标时，会自动进行打开，传递，关闭游标的过程<br>                               open  fetch   close</p><p>1.当进入循环时，游标 for 循环语句自动打开游标并提取第一行游标数据；<br>2.当程序处理完当前所提取的数据而进入下一次循环时，游标for循环语句自动提取下一行数据供程序处理；<br>3.当提取完 结果集中全部数据后，结束循环，并自动关闭循环；</p>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游标 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异常处理</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/22.PLSQL%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/22.PLSQL%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h1><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/22.PLSQL%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/5f8b9bb8e2b6804c2636a566f431453.png" alt="5f8b9bb8e2b6804c2636a566f431453"></p><p>因为PL&#x2F;SQL程序块一旦产生异常而没有指出如何处理时,程序就会自动终止整个程序运行，所以我们需要异常处理语句</p><p>概念：异常情况处理 exception 是用来处理正常执行过程中未预料的事件,程序块的异常处理预定义的错误和自定义错误</p><h2 id="异常分类："><a href="#异常分类：" class="headerlink" title="异常分类："></a>异常分类：</h2><h3 id="1-语法错误引发的报错"><a href="#1-语法错误引发的报错" class="headerlink" title="1.语法错误引发的报错"></a>1.语法错误引发的报错</h3><h3 id="2-程序运行错误引发的报错"><a href="#2-程序运行错误引发的报错" class="headerlink" title="2.程序运行错误引发的报错"></a>2.程序运行错误引发的报错</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">语法错误案例，异常处理无法解决语法错误</span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(&#x27;贾晶晶声音有点小&#x27;)--报错原因：没写分号</span><br><span class="line">end;</span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(贾晶晶声音有点小);--报错原因：字符串没使用单引号</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">程序运行错误</span><br><span class="line">declare</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp;--错误原因：返回内容超出一条</span><br><span class="line">  dbms_output.put_line(v_emp.empno);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">我们所说的异常处理，指的都是程序运行错误</span><br></pre></td></tr></table></figure><h2 id="异常处理的分类"><a href="#异常处理的分类" class="headerlink" title="异常处理的分类"></a>异常处理的分类</h2><p>1.预定义异常</p><p>–有错误编码，也有错误名称</p><p>oracle中预定义的异常常见的有20多种，对于这种异常情况的处理，无需再程序中定义，由oracle自动引发。</p><p>2.非预定义异常</p><p>–有错误编码，没有错误名称</p><p>其他标准的oracle错误，对这种异常情况的处理，需要用户在程序中定义，然后由oracle自动引发。</p><p>3.用户定义异常</p><p>–错误编码需要自定义，错误名称也需要自定义</p><p>程序执行过程中，出现编程人员认为的非正常情况。<br>对这种异常情况的处理，需要用户在程序中定义，然后显示地在程序中将其引发。</p><p>异常处理的语句<br><code>begin</code><br>  执行语句;<br>  <code>exception</code><br>    <code>when</code> 异常错误信息名称 <code>then</code> 异常处理方法;<br>    <code>when</code> 异常错误信息名称 <code>then</code> 异常处理方法;<br>    <code>when</code> <code>others</code> <code>then</code> 异常处理方法;<br><code>end</code>;</p><h4 id="1-预定义异常"><a href="#1-预定义异常" class="headerlink" title="1.预定义异常"></a>1.预定义异常</h4><blockquote><p>有错误编码，也有错误名称</p></blockquote><p>例：返回多条数据的错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp;--错误原因：返回内容超出一条</span><br><span class="line">  dbms_output.put_line(v_emp.empno);</span><br><span class="line">  exception when too_many_rows then dbms_output.put_line(&#x27;返回内容超出一条&#x27;);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>例：输入值超出范围的错误<br>输入一个员工编号，正确的话打印姓名，错误的话打印’查无此人’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  select ename into v_emp.ename from emp where empno=&amp;员工编号;</span><br><span class="line">   dbms_output.put_line(v_emp.ename);</span><br><span class="line">   exception when no_data_found then dbms_output.put_line(&#x27;查无此人&#x27;);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>思考题：<br>输入一个部门编号，打印出该部门的员工姓名，薪资。<br>如果该部门不存在，则输出’该部门不存在’,如果该部门人数不止一个，则输出’该部门员工人数过多’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp where deptno = &amp;部门编号;</span><br><span class="line">  dbms_output.put_line(v_emp.ename || &#x27; &#x27; || v_emp.sal);</span><br><span class="line">exception</span><br><span class="line">  when no_data_found then</span><br><span class="line">    dbms_output.put_line(&#x27;该部门不存在&#x27;);</span><br><span class="line">  when too_many_rows then</span><br><span class="line">    dbms_output.put_line(&#x27;该部门员工人数过多&#x27;);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><h4 id="2-非预定义异常"><a href="#2-非预定义异常" class="headerlink" title="2.非预定义异常"></a>2.非预定义异常</h4><blockquote><p>有错误编码，没有错误名称<br>想要使用必须自己定义错误名称，和错误编码进行绑定</p></blockquote><h5 id="使用非预定义异常的三个步骤"><a href="#使用非预定义异常的三个步骤" class="headerlink" title="使用非预定义异常的三个步骤"></a>使用非预定义异常的三个步骤</h5><ul><li>在程序块中的声明部分<code>定义一个异常名称</code></li><li>在声明部分使用函数<code>将异常名称和错误编码关联</code> —– <code>pragma</code> 编译指示   <code>init</code> 初始化</li><li>在异常处理部分<code>捕获异常并使用</code></li></ul><p>例：删除掉dept表中的20号部门,如果该部门有员工存在，则返回’不能删，该部门还有喘气的’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">delete from dept where deptno = 20;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  in_fk exception;---定义一个异常名称</span><br><span class="line">  pragma exception_init(in_fk,-02292);--关联异常名称</span><br><span class="line">begin</span><br><span class="line">  delete from dept where deptno = 20;</span><br><span class="line">  exception when in_fk then dbms_output.put_line(&#x27;不能删，该部门还有喘气的&#x27;);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>例：返回多条数据的错误 –（可不可以用非预定义异常来写？）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DECLARE</span><br><span class="line">  IN_FK EXCEPTION;</span><br><span class="line">  PRAGMA EXCEPTION_INIT(IN_FK, -01422);</span><br><span class="line">  A EMP%ROWTYPE;</span><br><span class="line">BEGIN</span><br><span class="line">  SELECT * INTO A FROM EMP;</span><br><span class="line">EXCEPTION</span><br><span class="line">  WHEN IN_FK THEN DBMS_OUTPUT.PUT_LINE(&#x27;太多啦太多啦&#x27;);</span><br><span class="line">  when too_many_rows then dbms_output.put_line(&#x27;该部门员工人数过多&#x27;);--冗余异常，同种异常给了两个解决方法</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><h4 id="3-自定义异常"><a href="#3-自定义异常" class="headerlink" title="3.自定义异常"></a>3.自定义异常</h4><blockquote><p>需要手动引发异常，通常用于不会报错的场景，不需要错误编号跟错误名称，只需要声明异常名称</p></blockquote><p><code>raise</code> 异常名称 –引发异常的关键词</p><p><strong>语法结构</strong><br><code>declare</code><br>  异常名称 <code>exception</code>;<br><code>begin</code><br>  执行程序;<br>  <code>raise</code> 异常名称;   —–通常放在if语句中判断<br>  <code>exception</code> <code>when</code> 异常名称 <code>then</code> 处理方法;<br><code>end</code>;</p><p>例：输入一个员工姓名，如果他的薪资大于2999就正常打印，<br>小于3000就打印’给老子涨薪’，如果找不到这个员工，就打印’已经提桶跑路’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_emp emp%rowtype;</span><br><span class="line">  xinziyichang exception;</span><br><span class="line">begin</span><br><span class="line">  select * into v_emp from emp where ename = &#x27;&amp;员工姓名&#x27;;</span><br><span class="line">  if v_emp.sal &lt; 3000 then raise xinziyichang;</span><br><span class="line">  end if;</span><br><span class="line">  dbms_output.put_line(v_emp.sal);</span><br><span class="line">  exception </span><br><span class="line">    when xinziyichang then dbms_output.put_line(&#x27;给老子涨薪&#x27;);</span><br><span class="line">    when no_data_found then  dbms_output.put_line(&#x27;已经提桶跑路&#x27;);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>思考题：<br>根据输入的参数打印公司信息，如果为1打印部门信息，为2打印员工信息，<br>添加异常，如果输入的不是1或2则打印’您输入的信息不合法，请输入1或2’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_no       number := &amp;数值;</span><br><span class="line">  xinxiyouwu exception;</span><br><span class="line">  v_dept     dept%rowtype;</span><br><span class="line">  v_emp      emp%rowtype;</span><br><span class="line">begin</span><br><span class="line">  if v_no = 1 then</span><br><span class="line">    for v_dept in (select * from dept) loop</span><br><span class="line">      dbms_output.put_line(v_dept.dname);</span><br><span class="line">    end loop;</span><br><span class="line">  elsif v_no = 2 then</span><br><span class="line">    for v_emp in (select * from emp) loop</span><br><span class="line">      dbms_output.put_line(v_emp.ename);</span><br><span class="line">    end loop;</span><br><span class="line">  else</span><br><span class="line">    raise xinxiyouwu;</span><br><span class="line">  end if;</span><br><span class="line">exception</span><br><span class="line">  when xinxiyouwu then</span><br><span class="line">    dbms_output.put_line(&#x27;您输入的信息不合法，请输入1或2&#x27;);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">cursor cur1 is select * from dept;</span><br><span class="line">cursor cur2 is select * from emp;</span><br><span class="line">a number:=&amp;参数;</span><br><span class="line">yichang exception;</span><br><span class="line">begin</span><br><span class="line">  if a=1 then</span><br><span class="line">    for i in cur1 LOOP</span><br><span class="line">      dbms_output.put_line(i.dname);</span><br><span class="line">    end loop;</span><br><span class="line">    elsif a=2 THEN</span><br><span class="line">      for i in cur2 LOOP</span><br><span class="line">      dbms_output.put_line(i.empno);</span><br><span class="line">    end loop;</span><br><span class="line">    else</span><br><span class="line">      raise yichang;</span><br><span class="line"> end if;</span><br><span class="line"> exception</span><br><span class="line">   when yichang then</span><br><span class="line">     dbms_output.put_line(&#x27;您输入的信息不合法，请输入1或2&#x27;);</span><br><span class="line">END;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 异常处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>plsql流程化控制语句</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/20.PLSQL%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/20.PLSQL%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="PLSQL流程化控制语句"><a href="#PLSQL流程化控制语句" class="headerlink" title="PLSQL流程化控制语句"></a>PLSQL流程化控制语句</h1><h2 id="一、条件判断"><a href="#一、条件判断" class="headerlink" title="一、条件判断"></a>一、条件判断</h2><h3 id="1-if语句"><a href="#1-if语句" class="headerlink" title="1.if语句"></a>1.if语句</h3><p>语法：</p><p><code>if</code> 条件一 <code>then</code> 结果一;</p><p><code>elsif</code> 条件二 <code>then</code> 结果二 ;</p><p>…</p><p><code>else</code> 结果N;</p><p><code>end</code> <code>if</code>;</p><h3 id="2-case-when语句"><a href="#2-case-when语句" class="headerlink" title="2.case when语句"></a>2.case when语句</h3><p>语法一：</p><p><code>CASE</code></p><p><code>WHEN</code> 条件一 <code>THEN</code> 结果一;    </p><p><code>WHEN</code> 条件二 <code>THEN</code> 结果二;    </p><p>…    </p><p><code>ELSE</code> 结果;           &#x3D;&#x3D;注意一定要有else 否则报错&#x3D;&#x3D; </p><p><code>END</code> <code>CASE</code>;</p><p>语法二：</p><p><code>CASE</code> 变量</p><p><code>WHEN</code> 值一 <code>THEN</code> 结果一;    </p><p><code>WHEN</code> 值二 <code>THEN</code> 结果二;    </p><p>…    </p><p><code>ELSE</code> 结果;           &#x3D;&#x3D;注意一定要有else 否则报错&#x3D;&#x3D; </p><p><code>END</code> <code>CASE</code>;</p><blockquote><p>若没有else报错为：</p><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/20.PLSQL%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/uTools_1660527749017.png" alt="uTools_1660527749017"></p></blockquote><p>例题：</p><p>输入一个学号，判断它是不是我们班的学生，如果是 打印’XXX是我们班的’，不是打印’我不认识’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">v_no number :=&amp;学号;</span><br><span class="line">begin</span><br><span class="line">if v_no &lt; 34 then dbms_output.put_line(v_no||&#x27;是我们班的&#x27;);</span><br><span class="line">else dbms_output.put_line(&#x27;我不认识&#x27;);</span><br><span class="line">end if;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>输入一个数，判断它跟30的关系，并打印出来。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_number number:=&amp;数字;</span><br><span class="line">begin</span><br><span class="line">  if v_number&lt;30 then dbms_output.put_line(v_number||&#x27;小于30&#x27;);</span><br><span class="line">  elsif v_number=30 then dbms_output.put_line(v_number||&#x27;等于30&#x27;);</span><br><span class="line">  else dbms_output.put_line(v_number||&#x27;大于30&#x27;);</span><br><span class="line">  end if;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>输入一个员工编号，判断其是否有佣金，有佣金的打印姓名+佣金，无佣金则打印 姓名+ 无佣金。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">v_no number:=&amp;编号;</span><br><span class="line">v_temp varchar(11);</span><br><span class="line">v_name varchar(11);</span><br><span class="line">begin</span><br><span class="line">  select ename,comm into v_name,v_temp from emp where empno = v_no;</span><br><span class="line">  if v_temp is not null then  dbms_output.put_line(v_name||v_temp);</span><br><span class="line">  else dbms_output.put_line(v_name||&#x27;无佣金&#x27;);</span><br><span class="line">  end if;</span><br><span class="line">  --dbms_output.put_line(v_temp);</span><br><span class="line">end; </span><br></pre></td></tr></table></figure><h2 id="二、循环语句"><a href="#二、循环语句" class="headerlink" title="二、循环语句"></a>二、循环语句</h2><p>在PLSQL中&#x3D;&#x3D;不存在无限循环&#x3D;&#x3D;，因为无限循环一直在运行中，永远不会结束。</p><h3 id="1-LOOP循环"><a href="#1-LOOP循环" class="headerlink" title="1.LOOP循环"></a>1.LOOP循环</h3><blockquote><p>给出一个条件，满足条件的时候退出循环</p></blockquote><p><strong>语法：</strong></p><p><code>loop</code></p><p>​循环执行语句<code>;</code></p><p>​循环变量更新<code>;</code></p><p>​<code>exit</code> <code>when</code> 条件<code>;</code></p><p><code>end</code> <code>loop</code>;</p><blockquote><p>在循环内的语句是从上到下按顺序执行的，循环内容的顺序可以调换（&#x3D;&#x3D;会影响结果&#x3D;&#x3D;）</p></blockquote><p>例子：</p><p>编写一个程序，输出 1~7</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-WHILE循环"><a href="#2-WHILE循环" class="headerlink" title="2.WHILE循环"></a>2.WHILE循环</h3><blockquote><p>给出一个条件，满足条件的时候执行循环</p></blockquote><p><strong>语法：</strong></p><p><code>while</code> 条件  <code>loop</code></p><p>​循环执行语句<code>;</code></p><p>​循环变量更新<code>;</code></p><p><code>end</code> <code>loop``;</code></p><h3 id="3-FOR循环"><a href="#3-FOR循环" class="headerlink" title="3.FOR循环"></a>3.FOR循环</h3><blockquote><p>给定循环的取值范围，满足条件的时候执行循环  不会有逻辑死循环</p></blockquote><p><strong>语法：</strong></p><p><code>for</code> 循环变量 <code>in</code> 初始值<code>..</code>最大值 <code>loop</code>         &#x3D;&#x3D;循环变量不能当作赋值目标，不能在loop中更改赋值&#x3D;&#x3D;</p><p>​循环执行语句<code>;</code></p><p>​循环变量更新<code>;</code></p><p><code>end</code> <code>loop``;</code></p><p>编写一个程序，输出1~7之间的奇数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_no number(1);</span><br><span class="line">begin</span><br><span class="line">  for v_no in 1..7 </span><br><span class="line">  loop</span><br><span class="line">    if mod(v_no,2)!=0 then dbms_output.put_line(v_no);</span><br><span class="line">    end if;</span><br><span class="line">  end loop;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plsql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql语句在plsql中的运用</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/19.PLSQL%E8%BF%90%E8%A1%8CSQL/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/19.PLSQL%E8%BF%90%E8%A1%8CSQL/</url>
      
        <content type="html"><![CDATA[<h1 id="sql语句在plsql中的运用"><a href="#sql语句在plsql中的运用" class="headerlink" title="sql语句在plsql中的运用"></a>sql语句在plsql中的运用</h1><h2 id="一-DML语句"><a href="#一-DML语句" class="headerlink" title="一. DML语句"></a>一. DML语句</h2><p>–数据操纵语句</p><p>​    TCL语句–事务控制语句<br>–可以直接在plsql块中使用的语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">begin</span><br><span class="line">  insert into empa(ename,sal) values (&#x27;朱精卫&#x27;,3000);</span><br><span class="line">  commit;</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line">select * from empa;</span><br></pre></td></tr></table></figure><h2 id="二-DDL语句"><a href="#二-DDL语句" class="headerlink" title="二. DDL语句"></a>二. DDL语句</h2><p>–数据定义语句</p><p>–不能直接在plsql块中使用</p><p><code>execute</code> <code>immediate</code> –可以使用字符串中的语句</p><p>execute——执行   immediate——立即</p><p>declare<br>  v_jingwei varchar2(100);<br>begin<br>  v_jingwei :&#x3D;’create table yuanbo(cm number,kg number)’;<br>  execute immediate v_jingwei;<br>end;</p><p>select * from yuanbo;</p><h2 id="三-DQL语句"><a href="#三-DQL语句" class="headerlink" title="三. DQL语句"></a>三. DQL语句</h2><p>–数据查询语句</p><p>–不能直接在plsql块中使用<br>declare<br>  v_jingwei varchar2(100);<br>  v_emp emp%rowtype;<br>begin<br>  v_jingwei :&#x3D;’select * from emp where empno &#x3D; 7788’;<br>  execute immediate v_jingwei into v_emp;<br>  dbms_output.put_line(v_emp.ename);<br>end;</p><h2 id="思考题："><a href="#思考题：" class="headerlink" title="思考题："></a>思考题：</h2><p>遇到需要字符串类型的语句时，怎么运行<br>declare<br>  v_jingwei varchar2(100);<br>  v_emp emp%rowtype;<br>begin<br>  v_jingwei :&#x3D;’select * from emp where ename &#x3D; ‘SMITH’’;–报错<br>  execute immediate v_jingwei into v_emp;<br>  dbms_output.put_line(v_emp.ename);<br>end;</p><p>declare<br>  v_jingwei varchar2(100);<br>  v_emp emp%rowtype;<br>begin<br>  v_jingwei :&#x3D;’select * from emp where ename &#x3D; ‘’SMITH’’’;–解决方法一，使用双单引号<br>  execute immediate v_jingwei into v_emp;<br>  dbms_output.put_line(v_emp.ename);<br>end;</p><p>declare<br>  v_jingwei varchar2(100);<br>  v_emp emp%rowtype;<br>begin<br>  v_jingwei :&#x3D;q’[select * from emp where ename &#x3D; ‘SMITH’]’;–解决方法二，使用转义字符q’[]’<br>  execute immediate v_jingwei into v_emp;<br>  dbms_output.put_line(v_emp.ename);<br>end;<br>—-推荐用第二种方法</p>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plsql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量的数据类型</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/18.PLSQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/18.PLSQL%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="变量的数据类型"><a href="#变量的数据类型" class="headerlink" title="变量的数据类型"></a>变量的数据类型</h1><h2 id="一-标准类型"><a href="#一-标准类型" class="headerlink" title="一. 标准类型"></a>一. 标准类型</h2><h3 id="1-数值型"><a href="#1-数值型" class="headerlink" title="1.数值型"></a>1.数值型</h3><h4 id="1-十进制"><a href="#1-十进制" class="headerlink" title="(1)十进制"></a>(1)十进制</h4><table><thead><tr><th>类型</th><th align="left">描述</th></tr></thead><tbody><tr><td>number(数值长度,精度)</td><td align="left">数值长度不写时，默认为38，精度正数为精确到小数点后几位，负数为精确到小数点前几位。</td></tr><tr><td>int</td><td align="left">整数类型    小数位会自动四舍五入 —int(数值长度,精度) 整数型可以带有精度，也可以带有小数</td></tr><tr><td>float</td><td align="left">浮点型(小数型)，跟number一样,不能写精度</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_no number(5,2):=123.45;--数值长度剪掉精度是整数位的长度</span><br><span class="line">  v_no2 int(5,2) :=123.45;</span><br><span class="line">  v_no3 int :=123.55;</span><br><span class="line">  v_no4 float(7) :=123.45;</span><br><span class="line">  v_no5 float(7) :=555.55;</span><br><span class="line">  v_no6 float(7) :=456;</span><br><span class="line">  v_no7 float(10) :=456456;</span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(v_no);</span><br><span class="line">  dbms_output.put_line(v_no2);</span><br><span class="line">  dbms_output.put_line(v_no3);</span><br><span class="line">  dbms_output.put_line(v_no4);</span><br><span class="line">  dbms_output.put_line(v_no5);</span><br><span class="line">  dbms_output.put_line(v_no6);</span><br><span class="line">  dbms_output.put_line(v_no7);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>运行结果：</p><p>123.45<br>123.45<br>124<br>123<br>556<br>456<br>456500</p><h4 id="2-二进制"><a href="#2-二进制" class="headerlink" title="(2)二进制"></a>(2)二进制</h4><p>二进制的方式显示数值 –sql语句中没有，只能是整数<br>pls_integer  –数值范围大于定义的数值范围时会报错<br>binary_integer –数值范围大于定义的数值范围时不会报错，会自动转成number</p><p>binary –二进制<br>integer –整数</p><h3 id="2-字符型"><a href="#2-字符型" class="headerlink" title="2.字符型"></a>2.字符型</h3><p>–字符集  UTF-8<br>char(字节长度)      –定长<br>varchar(字节长度)   –变长<br>varchar2(字节长度)  –变长</p><h3 id="3-日期型"><a href="#3-日期型" class="headerlink" title="3.日期型"></a>3.日期型</h3><p>date<br>timestamp</p><p>declare<br>  v_date date;<br>  v_timestamp timestamp;<br>begin<br>  –v_date :&#x3D;sysdate;<br>  –v_timestamp  :&#x3D; sysdate;<br>  v_date :&#x3D;systimestamp;<br>  v_timestamp  :&#x3D; systimestamp;</p><p>  dbms_output.put_line(v_date);<br>  dbms_output.put_line(v_timestamp);<br>end;</p><h3 id="4-布尔类型"><a href="#4-布尔类型" class="headerlink" title="4.布尔类型"></a>4.布尔类型</h3><p>Boolean –sql中没有<br>true  –真<br>false –假<br>null  –空<br>–布尔类型不能直接打印</p><h3 id="5-属性类型"><a href="#5-属性类型" class="headerlink" title="5.属性类型"></a>5.属性类型</h3><p>–数据类型不直接定义，而是从某一张表中的某一个字段上获取</p><p>语法： <code>变量名 表名.字段名%type</code>;</p><p>声明一个变量，让他的数据类型等于emp表中的hiredate，输入员工编号，输出员工入职日期</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">declare </span><br><span class="line">v_hiredate emp.hiredate%type;</span><br><span class="line">begin</span><br><span class="line">select hiredate into v_hiredate from emp where empno=7369;</span><br><span class="line">dbms_output.put_line(v_hiredate);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>声明一个变量，让他的数据类型等于emp表中的job，输入员工编号，输出员工岗位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_job emp.job%type;</span><br><span class="line">begin</span><br><span class="line">  select job into v_job from emp where empno=&amp;员工编号;</span><br><span class="line">  dbms_output.put_line(&#x27;该员工的岗位为&#x27;||v_job);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  v_job emp.job%type;</span><br><span class="line">  v_empno emp.empno%type :=&amp;员工编号;</span><br><span class="line">begin</span><br><span class="line">  select job into v_job from emp where empno=v_empno;</span><br><span class="line">  dbms_output.put_line(&#x27;该员工的岗位为&#x27;||v_job);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><h2 id="二-复合类型"><a href="#二-复合类型" class="headerlink" title="二. 复合类型"></a>二. 复合类型</h2><p>记录型–指通过一个变量名记录一张表中的所有数据类型<br>语法： 变量名 表名%rowtype;</p><p>输入员工姓名，输出员工编号，姓名，薪资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">  v_emp emp<span class="operator">%</span>rowtype;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> v_emp <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;&amp;员工姓名&#x27;</span>;</span><br><span class="line">  dbms_output.put_line(v_emp.deptno<span class="operator">||</span>v_emp.ename<span class="operator">||</span>v_emp.sal);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>自定义型<br>语法： <code>type 类型名 is record(字段名 数据类型,字段名 数据类型……)</code>;</p><p>输入员工姓名，输出员工编号，姓名，部门所在地</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">  type yuangong <span class="keyword">is</span> record(bh number,xm varchar2(<span class="number">20</span>),szd varchar2(<span class="number">20</span>));</span><br><span class="line">  xiaohong yuangong;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> empno,ename,loc <span class="keyword">into</span> xiaohong <span class="keyword">from</span> emp a <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;&amp;员工姓名&#x27;</span>;</span><br><span class="line">  dbms_output.put_line(xiaohong.bh<span class="operator">||</span>xiaohong.xm<span class="operator">||</span>xiaohong.szd);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>–所有数据来源于一张表时，推荐用记录型，所有数据来源于多张表时，推荐用自定义型<br>–以下类型sql中均没有<br>3.表类型<br>4.可变数组</p><h2 id="三-参考类型"><a href="#三-参考类型" class="headerlink" title="三. 参考类型"></a>三. 参考类型</h2><h2 id="四-大对象类型"><a href="#四-大对象类型" class="headerlink" title="四. 大对象类型"></a>四. 大对象类型</h2><p>blob 大型二进制<br>clob 字符大数据块<br>nclob 不区分中英文</p><hr><p>select empno||deptno from emp;–两个number类型，用连接符连接在一块后算什么类型</p><h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><p>声明变量（日期型），当手动输入一个日期后，打印出这是本年的第几周 格式为’XX在本年的第Y周’<br>declare<br>v_date date :&#x3D;to_date(‘&amp;日期’,’yyyy-mm-dd’);<br>begin<br>  dbms_output.put_line(v_date||’在本年的第’||to_char(v_date,’ww’)||’周’);<br>end;</p><p>打印出emp表中 薪资为5000 的员工姓名、薪资与部门名称<br>declare<br>v_ename varchar2(7);<br>v_sal number(5):&#x3D;5000;<br>v_dname varchar2(10);<br>begin<br>  select ename,sal,dname into v_ename,v_sal,v_dname from emp a join dept b on a.deptno&#x3D;b.deptno where sal&#x3D;5000;<br>  dbms_output.put_line(v_ename||’  ‘||v_sal||’  ‘||v_dname);<br>end;</p><p>select ename,sal,dname  from emp a join dept b on a.deptno&#x3D;b.deptno and sal&#x3D;5000;–on 跟 where 的区别</p><p>声明一个数值型变量v_deptno，输入赋值<br>查询并打印部门编号为v_deptno且在此部门内工资最低的员工姓名</p><p>declare<br>v_deptno number:&#x3D;&amp;部门编号;<br>v_ename varchar2(10);<br>begin<br>  select ename<br>    into v_ename<br>    from (select ename<br>            from emp<br>           where sal in (select min(sal) from emp where deptno &#x3D; v_deptno)<br>             and deptno &#x3D; v_deptno) where rownum &#x3D;1;<br>  dbms_output.put_line(‘部门编号’||v_deptno||’员工姓名’||v_ename);<br>end;</p><p>declare<br>v_deptno number:&#x3D;&amp;部门编号;<br>v_ename varchar2(10);<br>begin<br>  select ename<br>    into v_ename<br>    from (select ename<br>            from emp<br>           where sal &#x3D; 3000<br>             and deptno &#x3D; v_deptno) where rownum &#x3D;1;<br>  dbms_output.put_line(‘部门编号’||v_deptno||’员工姓名’||v_ename);<br>end;</p><p>思考题：<br>删除掉表内重复数据的方法？</p><p>select * from empa;</p><p>declare<br>v_deptno number:&#x3D;&amp;部门编号;<br>v_xingming varchar2(10);<br>begin<br>  select ename into v_xingming from emp where (sal,deptno) in(select min(sal),deptno from emp where deptno&#x3D;v_deptno group by deptno);<br>  dbms_output.put_line(‘部门编号’||v_deptno||’员工姓名’||v_xingming);<br>end;</p><p>select ename from emp where (sal,deptno) in(select min(sal),deptno from emp where deptno&#x3D;10 group by deptno);</p><p>declare<br>v_sal number;<br>begin<br>  select sal into v_sal from emp where sal &#x3D; 3000;–报错，实际返回的行数多于一行<br>  dbms_output.put_line(v_sal);<br>end;</p><p>打印工资第5名的员工姓名<br>declare<br>v_ename varchar2(10);<br>begin<br> select ename into v_ename from (select ename,rownum r from (select * from emp order by sal desc))where r  between  5 and 5;<br> dbms_output.put_line(‘姓名：’||v_ename);<br>end;</p><p>select ename into v_ename from (select ename,rownum paixu from (select * from emp order by sal desc)) where paixu &#x3D; 5;</p><p>打印出KING的员工编号和入职时间(精确到天)和对应的部门名称<br>declare<br>  v_empno number;<br>  v_date date;<br>  v_dname varchar2(10);<br>begin<br>  select empno,hiredate,dname into v_empno,v_date,v_dname from emp A join dept B on A.deptno &#x3D; B.deptno and A.ename &#x3D; ‘KING’;<br>  dbms_output.put_line(‘员工编号：’||v_empno||’，入职时间：’||v_date||’，部门名称：’||v_dname);<br>end;</p>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>条件查询</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/2.%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/2.%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h1><h2 id="条件查询-where-–哪儿"><a href="#条件查询-where-–哪儿" class="headerlink" title="条件查询 where –哪儿"></a>条件查询 where –哪儿</h2><p><strong>基本语法：select 字段 from 表名 where 条件;</strong></p><p>书写顺序    执行顺序<br>select        from<br>from          where<br>where         select</p><p>例子：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="number">1</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="number">1</span> <span class="operator">=</span> <span class="number">2</span>;<span class="comment">--在where中的条件，如果成立，及输出想要的内容，不成立不输出内容，但不会报错；</span></span><br><span class="line"></span><br><span class="line">查询姓名为史密斯的员工的所有信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;smith&#x27;</span>;<span class="comment">--where查询的值 严格区分大小写</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="string">&#x27;SMITH&#x27;</span>;<span class="comment">--错误，查找值时，前面要跟上对应的列名</span></span><br><span class="line"></span><br><span class="line">查询薪资为<span class="number">3000</span>的员工的所有信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> <span class="number">3000</span>;</span><br></pre></td></tr></table></figure><h3 id="一-逻辑运算符"><a href="#一-逻辑运算符" class="headerlink" title="一. 逻辑运算符"></a>一. 逻辑运算符</h3><p>  <strong>&lt; , &lt;&#x3D; , &gt; , &gt;&#x3D; , &#x3D;  ,  不等于号： !&#x3D; 或 &lt;&gt; –等于一次只能查询一个内容</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">&lt;</span> <span class="string">&#x27;SMITH&#x27;</span>;<span class="comment">--按照首字母比较</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;=</span> <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>,ename <span class="operator">=</span><span class="string">&#x27;KING&#x27;</span>;<span class="comment">--报错，等于不能一次查询多个内容</span></span><br></pre></td></tr></table></figure><h3 id="二-包含-in-不包含-not-in"><a href="#二-包含-in-不包含-not-in" class="headerlink" title="二. 包含  in()  不包含  not in()"></a>二. 包含  in()  不包含  not in()</h3><p><strong>一次查询多个内容时使用</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;SCOTT&#x27;</span>,<span class="string">&#x27;KING&#x27;</span>,<span class="string">&#x27;FORD&#x27;</span>);<span class="comment">--in既能查询一个内容，也能查询多个内容，是等于号的上位替代品。</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;scott&#x27;</span>,<span class="string">&#x27;KING&#x27;</span>,<span class="string">&#x27;FORD&#x27;</span>,<span class="string">&#x27;史密斯&#x27;</span>);<span class="comment">--in中有表中不存在的值时不输出，不会报错。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">in</span>(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">3000</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="keyword">in</span>(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">3000</span>);<span class="comment">--报错，in跟not in不能跟逻辑运算符一起使用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">not</span> <span class="keyword">in</span>(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">3000</span>);<span class="comment">--not in 为 in 的反面</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="number">2222</span>,<span class="string">&#x27;KING&#x27;</span>,<span class="string">&#x27;FORD&#x27;</span>,<span class="string">&#x27;史密斯&#x27;</span>);<span class="comment">--括号内的数据类型要保持一致</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;2222&#x27;</span>,<span class="string">&#x27;KING&#x27;</span>,<span class="string">&#x27;FORD&#x27;</span>,<span class="string">&#x27;史密斯&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="三-布尔连接"><a href="#三-布尔连接" class="headerlink" title="三. 布尔连接"></a>三. 布尔连接</h3><p>  <strong>and 且  –需要满足所有条件才能输出</strong><br>  <strong>or 或   –满足其一即可输出</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span> <span class="keyword">or</span> ename <span class="operator">=</span> <span class="string">&#x27;KING&#x27;</span>;<span class="comment">--查相同的列，or不如in好用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span> <span class="keyword">or</span> sal <span class="operator">=</span> <span class="number">3000</span>;<span class="comment">--可以查不同的列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;FORD&#x27;</span> <span class="keyword">and</span> sal <span class="operator">=</span> <span class="number">3000</span>;</span><br></pre></td></tr></table></figure><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><p><strong>and 跟 or 的优先级相同嘛？怎么验证？</strong><br>不同， and 优先级比 or 高。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查询薪资为<span class="number">800</span> 且 为<span class="number">3000</span> 或<span class="number">5000</span> 的全部信息<span class="comment">--输出结果为空，说明or优先级高于and，输出结果为5000，说明and优先级高于or。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> SAL<span class="operator">=</span><span class="number">800</span> <span class="keyword">AND</span> SAL<span class="operator">=</span> <span class="number">3000</span> <span class="keyword">OR</span> SAL<span class="operator">=</span><span class="number">5000</span>;<span class="comment">--输出5000 》 and优先级高于or</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> SAL<span class="operator">=</span><span class="number">800</span> <span class="keyword">AND</span> (SAL<span class="operator">=</span> <span class="number">3000</span> <span class="keyword">OR</span> SAL<span class="operator">=</span><span class="number">5000</span>);<span class="comment">--输出空，说明有括号先算括号内，没括号先算and后算or</span></span><br></pre></td></tr></table></figure><h3 id="四-范围-between-最小值-and-最大值"><a href="#四-范围-between-最小值-and-最大值" class="headerlink" title="四. 范围 between 最小值 and 最大值"></a>四. 范围 between 最小值 and 最大值</h3><p><strong>在什么跟什么之间–包含边界值</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">求薪资在<span class="number">800</span>和<span class="number">3000</span>之间的员工信息(包含<span class="number">800</span> 跟 <span class="number">3000</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;=</span> <span class="number">800</span> <span class="keyword">and</span> sal <span class="operator">&lt;=</span> <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">800</span> <span class="keyword">and</span> <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">求薪资在<span class="number">800</span>和<span class="number">3000</span>之间的员工信息(不包含<span class="number">800</span> 跟 <span class="number">3000</span>)</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="number">800</span> <span class="keyword">and</span> sal <span class="operator">&lt;</span> <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">801</span> <span class="keyword">and</span> <span class="number">2999</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">800</span> <span class="keyword">and</span> <span class="number">3000</span> <span class="keyword">and</span> sal <span class="keyword">not</span> <span class="keyword">in</span>(<span class="number">800</span>,<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">3000</span> <span class="keyword">and</span> <span class="number">800</span>;<span class="comment">--查不出数据，相当于大于等于3000小于等于800</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;=</span> <span class="number">3000</span> <span class="keyword">and</span> sal <span class="operator">&lt;=</span> <span class="number">800</span>;</span><br><span class="line"></span><br><span class="line">注意点：<span class="keyword">between</span> .. <span class="keyword">and</span> .. 必须遵照先写最小值后写最大值的写法</span><br></pre></td></tr></table></figure><h3 id="五-模糊查询-like-像-not-like-不像"><a href="#五-模糊查询-like-像-not-like-不像" class="headerlink" title="五. 模糊查询 like 像   not like 不像"></a>五. 模糊查询 like 像   not like 不像</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="1-通配符"><a href="#1-通配符" class="headerlink" title="1.通配符"></a>1.通配符</h4><p>_ : 有且只有一个字符<br>% ：有0到多个字符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查询所有姓名为S开头的人的信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;S%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">查询所有姓名为S开头,且长度为五个字母的人的信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;S____&#x27;</span>;</span><br><span class="line"></span><br><span class="line">查询所有姓名中含有S的人的信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%S%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">思考题</span><br><span class="line">查询名字中倒数第二个字母为T的人的信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%T_&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="2-转义字符-escape"><a href="#2-转义字符-escape" class="headerlink" title="2.转义字符 escape"></a>2.转义字符 escape</h4><p><strong>自定义一个字符，让他作为转义字符使用</strong></p><p><strong>转义字符本身不会输出，作用是使他后面跟着的第一个字符以原本的样貌输出</strong><br><strong>一般用于转换并输出有特殊含义的字符</strong></p><blockquote><p>注：一个escape只能作用于和他相邻的一个like语句</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查询姓名中带 <span class="operator">%</span> 的人的名字</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%/%%&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;/&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="3-update-更新"><a href="#3-update-更新" class="headerlink" title="3.update 更新"></a>3.update 更新</h4><p><strong>可以永久性修改表内的数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">思考题</span><br><span class="line">查询名字中带有<span class="operator">%</span> 或 带有_的人的信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%/%%&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;/&#x27;</span> <span class="keyword">or</span> ename <span class="keyword">like</span> <span class="string">&#x27;%/_%&#x27;</span> <span class="keyword">escape</span> <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="comment">--转义字符的作用范围为一个字段。</span></span><br></pre></td></tr></table></figure><h3 id="六-空值的查询-is-null-空值-is-not-null-非空"><a href="#六-空值的查询-is-null-空值-is-not-null-非空" class="headerlink" title="六. 空值的查询 is null 空值  is not null 非空"></a>六. 空值的查询 is null 空值  is not null 非空</h3><blockquote><p>注：空值与其他值运算时，答案为空</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">查询emp表中所有有佣金的员工</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">查询emp表中所有没有佣金的员工</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sal,sal<span class="operator">+</span><span class="number">100</span>,comm <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> sal,sal<span class="operator">+</span><span class="number">100</span>,comm<span class="operator">+</span><span class="number">100</span> <span class="keyword">from</span> emp;<span class="comment">--空值不参与运算</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="operator">&gt;=</span> <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="operator">&lt;=</span> <span class="number">1000</span>;<span class="comment">--空值不参与比较</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="operator">=</span> <span class="number">0</span>;<span class="comment">--查不到空值</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;<span class="comment">--查不到空值</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">null</span>;<span class="comment">--查询空值的方法</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">思考题</span><br><span class="line">计算员工一年的总薪资<span class="comment">--总薪资为：(薪资+奖金)*12</span></span><br><span class="line"><span class="keyword">select</span> <span class="number">12</span><span class="operator">*</span>(sal<span class="operator">+</span>comm) 总薪资 <span class="keyword">from</span> emp;<span class="comment">--空值不参与运算</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="number">12</span><span class="operator">*</span>(sal<span class="operator">+</span>nvl(comm,<span class="number">0</span>)) 总薪资 <span class="keyword">from</span> emp;<span class="comment">--正确答案</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>nvl(字段,默认值) 函数<span class="comment">--专门针对空值的函数，作用是把空值处理成默认值</span></span><br><span class="line"><span class="comment">--函数必定带括号，函数会有一个返回值</span></span><br><span class="line"><span class="comment">--函数看里面填字段</span></span><br><span class="line"><span class="keyword">select</span> nvl(comm,<span class="number">100</span>),comm <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>nvl2(字段,非空处理成默认值<span class="number">1</span>,空值处理成默认值<span class="number">2</span>) </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> nvl2(comm,<span class="number">1</span>,<span class="number">0</span>),comm <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><blockquote><p>注意点：<br>nvl() 跟 nvl2() 处理空值时，默认值数据类型要跟字段保持一致</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">例子：<span class="keyword">select</span> nvl(comm,<span class="string">&#x27;无佣金&#x27;</span>),comm <span class="keyword">from</span> emp;<span class="comment">--报错原因，默认值跟字段数据类型不一致</span></span><br><span class="line"><span class="number">3.</span>求和函数 <span class="built_in">sum</span>()<span class="comment">--了解一下，后面专门讲</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(nvl2(comm,<span class="number">1</span>,<span class="number">0</span>)) <span class="keyword">from</span> emp;<span class="comment">--求出有佣金的人数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp;<span class="comment">--当月总薪资(不包含佣金)</span></span><br></pre></td></tr></table></figure><h3 id="七-any-任意一个-all-全部–需要搭配逻辑运算符使用"><a href="#七-any-任意一个-all-全部–需要搭配逻辑运算符使用" class="headerlink" title="七.  any() 任意一个   all() 全部–需要搭配逻辑运算符使用"></a>七.  any() 任意一个   all() 全部–需要搭配逻辑运算符使用</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="keyword">any</span>(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">3000</span>);<span class="comment">--大于集合内最小值</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="keyword">all</span>(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">3000</span>);<span class="comment">--大于集合内最大值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&lt;</span> <span class="keyword">any</span>(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">3000</span>);<span class="comment">--小于集合内最大值</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&lt;</span> <span class="keyword">all</span>(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">3000</span>);<span class="comment">--小于集合内最小值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> <span class="keyword">any</span>(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">3000</span>);<span class="comment">--等于集合内任意数值</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> <span class="keyword">all</span>(<span class="number">1000</span>,<span class="number">2000</span>,<span class="number">3000</span>);<span class="comment">--等于集合内所有数值--不存在</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 条件查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PL/SQL</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/17.PLSQL/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/17.PLSQL/</url>
      
        <content type="html"><![CDATA[<h1 id="PL-x2F-SQL"><a href="#PL-x2F-SQL" class="headerlink" title="PL&#x2F;SQL"></a>PL&#x2F;SQL</h1><blockquote><p><strong>oracle中的编程语言</strong></p></blockquote><h2 id="一-概念："><a href="#一-概念：" class="headerlink" title="一. 概念："></a>一. 概念：</h2><p>SQL 结构化查询语言，用户和数据库之间沟通的语言</p><p>PL&#x2F;SQL 使用过程功能扩展SQL，带有过程控制的SQL</p><h2 id="二-优点："><a href="#二-优点：" class="headerlink" title="二. 优点："></a>二. 优点：</h2><p>将过程化控制集成在SQL上，从而提高效率，优化数据库的性能</p><h2 id="三-块-快结构是最基本的单位"><a href="#三-块-快结构是最基本的单位" class="headerlink" title="三. 块(快结构是最基本的单位)"></a>三. 块(快结构是最基本的单位)</h2><p>概念：由代码块组成，每一个块形成一个任务或逻辑单元，通过逻辑条件、循环等来实现一些复杂的功能<br>组成：声明部分、执行部分、异常处理部分</p><p>基本语法：<br><code>declare</code><br>–声明的内容（变量，常量，游标等）<br><code>begin</code><br>  –执行的内容(这个块要实现的任务或功能，如果能正常执行，则直接跳到end，如果不能正常执行，则执行exception)<br>  <code>exception</code>–异常处理<br><code>end</code>;</p><blockquote><p>declare——宣布、声明  begin——开始  exception——异常  end——结束</p><p>dbms——数据库管理系统  output——输出  line——行</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">begin</span><br><span class="line">  dbms_output.put_line(&#x27;你好，我叫张鹏飞&#x27;);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  dbms_output.put(&#x27;我们今天玩了警察抓小偷的游戏&#x27;);--put会把内容保存在缓存中</span><br><span class="line">  dbms_output.put_line(&#x27;，朱精卫输了小游戏&#x27;);--输出到行时，会先输出缓存内容，在输出本行内容</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(&#x27;我们今天玩了警察抓小偷的游戏&#x27;);</span><br><span class="line">  dbms_output.new_line;--把缓存中的信息输出到新的行中，如果缓存中没有信息，mew——line也会占一行</span><br><span class="line">  dbms_output.put(&#x27;，朱精卫输了小游戏&#x27;);</span><br><span class="line">  dbms_output.new_line;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">select * from emp;</span><br><span class="line">select * from dept;</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  dbms_output.put(&#x27;我们今天玩了警察抓小偷的游戏&#x27;);--put会把内容保存在缓存中</span><br><span class="line">  dbms_output.put_line(&#x27;，朱精卫输了小游戏&#x27;);--输出到行时，会先输出缓存内容，在输出本行内容</span><br><span class="line">end;</span><br><span class="line">/</span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(&#x27;我们今天玩了警察抓小偷的游戏&#x27;);</span><br><span class="line">  dbms_output.new_line;--把缓存中的信息输出到新的行中，如果缓存中没有信息，mew——line也会占一行</span><br><span class="line">  dbms_output.put(&#x27;，朱精卫输了小游戏&#x27;);</span><br><span class="line">  dbms_output.new_line;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><blockquote><p>注意点：<br>1.在基本语法中，begin end 是必须存在的关键词，其他都可省略。<br>2.在 begin end 每一个单独的语句后面必定带有分号，end 后面也必定带有分号。<br>3.最外层两个单独的匿名块不能并列存在，需要用斜杠划分。<br>4.在 匿名块 中的 匿名块可以并列存在，不会报错。</p></blockquote><hr><blockquote><p>变量于常量<br>变量：值可以变化的量，创建变量时可以不赋值。–创建好变量后，后期我们可以通过重新赋值的方式改变值。<br>常量：值不能变化的量，创建常量时必须立即赋值，并且值不能被改变。</p></blockquote><p>–命名规则<br>1.英文字母开头<br>2.取名要有意义</p><p>语法：<br><code>declare</code><br>–声明的内容（变量，常量，游标等）<br>  变量名 数据类型(字符长度)–声明一个变量<br>  常量名 <code>constant</code> 数据类型(字符长度)–声明一个常量<br><code>begin</code><br>  –执行的内容(这个块要实现的任务或功能，如果能正常执行，则直接跳到end，如果不能正常执行，则执行exception)<br>  <code>exception</code>–异常处理<br><code>end</code>;</p><h3 id="变量的声明方法："><a href="#变量的声明方法：" class="headerlink" title="变量的声明方法："></a>变量的声明方法：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_xuehao number(2);--声明一个变量，没有赋值</span><br><span class="line">  v_xuehao2 number(2):= 2;--声明一个变量，并且赋值为1</span><br><span class="line">begin</span><br><span class="line">  v_xuehao := 1;--给变量赋值</span><br><span class="line">  dbms_output.put_line(v_xuehao);</span><br><span class="line">  v_xuehao2 := 3;--用新值改变旧值</span><br><span class="line">  dbms_output.put_line(v_xuehao2);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><blockquote><p>变量的赋值方法：</p><p>1.声明的同时赋值<br>2.在 begin end 中赋值–在使用这个变量之前，先赋值</p></blockquote><h3 id="常量的声明方式："><a href="#常量的声明方式：" class="headerlink" title="常量的声明方式："></a>常量的声明方式：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  c_xuehao constant number(2):= 2;--声明一个常量，并且赋值为1</span><br><span class="line">begin</span><br><span class="line">  c_xuehao ：= 1;--报错，常量不能修改赋值</span><br><span class="line">  dbms_output.put_line(v_xuehao);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><blockquote><p>注意点：</p><ol><li>常量在声明时必须给与赋值</li><li>常量无法在 begin end 赋值</li></ol></blockquote><hr><p>例：<br>声明一个变量 v_sal 并赋值1000(周薪)，把一周的天数声明成常量c_day ,打印出’日薪为XXX’，要求保留两位小数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_sal number(4):=1000;</span><br><span class="line">  c_day constant number(1):=7;</span><br><span class="line">begin</span><br><span class="line">  dbms_output.put(&#x27;日薪为&#x27;);</span><br><span class="line">  dbms_output.put_line(round(v_sal/c_day,2));</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  v_sal number(4):=1000;</span><br><span class="line">  c_day constant number(1):=7;</span><br><span class="line">begin</span><br><span class="line"> dbms_output.put_line(&#x27;日薪为：&#x27;||round(v_sal/c_day,2));</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  v_sal number(4):=1000;</span><br><span class="line">  c_day constant number(1):=7;</span><br><span class="line">  v_rixin number(7,2);</span><br><span class="line">begin</span><br><span class="line">  v_rixin := v_sal/c_day;</span><br><span class="line">  dbms_output.put_line(&#x27;日薪为：&#x27;||v_rixin);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>声明变量，打印出’距离中秋还有XX天’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_day number(2);</span><br><span class="line">begin</span><br><span class="line">  v_day:=to_date(&#x27;2022-09-10&#x27;,&#x27;yyyy-mm-dd&#x27;)-sysdate;</span><br><span class="line">  dbms_output.put_line(&#x27;距离中秋还有&#x27;||v_day||&#x27;天&#x27;);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(&#x27;距离中秋还有&#x27;||trunc((to_date(&#x27;2022-09-10&#x27;,&#x27;yyyy-mm-dd&#x27;)-sysdate))||&#x27;天&#x27;);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><hr><h3 id="PLSQL块的嵌套"><a href="#PLSQL块的嵌套" class="headerlink" title="PLSQL块的嵌套"></a>PLSQL块的嵌套</h3><blockquote><p>begin end 中可以放多个 begin end</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">begin</span><br><span class="line">  dbms_output.put_line(&#x27;这是外边的块&#x27;);</span><br><span class="line">  begin</span><br><span class="line">    dbms_output.put_line(&#x27;这是里边的块&#x27;);</span><br><span class="line">  end;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  dbms_output.put(&#x27;这是外边的块&#x27;);</span><br><span class="line">  begin</span><br><span class="line">    dbms_output.put_line(&#x27;这是里边的块&#x27;);</span><br><span class="line">  end;</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  begin</span><br><span class="line">    dbms_output.put(&#x27;这是里边的块&#x27;);</span><br><span class="line">  end;</span><br><span class="line">  dbms_output.put_line(&#x27;这是外边的块&#x27;);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  begin</span><br><span class="line">    dbms_output.put_line(&#x27;111111&#x27;);</span><br><span class="line">    begin</span><br><span class="line">      dbms_output.put_line(&#x27;222222&#x27;);</span><br><span class="line">    end;</span><br><span class="line">    begin</span><br><span class="line">      dbms_output.put_line(&#x27;333333&#x27;);</span><br><span class="line">    end;</span><br><span class="line">  end;</span><br><span class="line">  dbms_output.put_line(&#x27;444444&#x27;);</span><br><span class="line">end;</span><br><span class="line">----按照 1 2 3 4 的顺序打印</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_xuehao number(2) :=1;</span><br><span class="line">begin</span><br><span class="line">  declare</span><br><span class="line">    v_chengji number(4,1):=95;</span><br><span class="line">  begin</span><br><span class="line">    dbms_output.put_line(&#x27;小明的学号为：&#x27;||v_xuehao||&#x27;，成绩为：&#x27;||v_chengji||&#x27;。&#x27;);</span><br><span class="line">  end;</span><br><span class="line">  dbms_output.put_line(&#x27;小明的学号为：&#x27;||v_xuehao||&#x27;，成绩为：&#x27;||v_chengji||&#x27;。&#x27;);--报错，识别不到v_chengji</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">  v_xuehao number(2) :=1;</span><br><span class="line">  v_chengji number(4,1):=95;</span><br><span class="line">begin</span><br><span class="line">  declare</span><br><span class="line"></span><br><span class="line">  begin</span><br><span class="line">    dbms_output.put_line(&#x27;小明的学号为：&#x27;||v_xuehao||&#x27;，成绩为：&#x27;||v_chengji||&#x27;。&#x27;);</span><br><span class="line">  end;</span><br><span class="line">  dbms_output.put_line(&#x27;小明的学号为：&#x27;||v_xuehao||&#x27;，成绩为：&#x27;||v_chengji||&#x27;。&#x27;);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><blockquote><p>注意点：<br>1.因为匿名块嵌套时，里面的块能识别外边块的声明，外边块不能识别里边块的声明。<br>  所以在使用块嵌套时，所有的声明最好全部放在最外边的块中。</p><p>2.两个平级的块互相读不到对方的声明部分。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">  declare</span><br><span class="line">      v_xuehao number(2) :=1;</span><br><span class="line">  begin</span><br><span class="line">    dbms_output.put_line(&#x27;小明的学号为：&#x27;||v_xuehao||&#x27;，成绩为：&#x27;||v_chengji||&#x27;。&#x27;);</span><br><span class="line">  end;</span><br><span class="line">  declare</span><br><span class="line">    v_chengji number(4,1):=95;</span><br><span class="line">  begin</span><br><span class="line">    dbms_output.put_line(&#x27;小明的学号为：&#x27;||v_xuehao||&#x27;，成绩为：&#x27;||v_chengji||&#x27;。&#x27;);</span><br><span class="line">  end;</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><hr><h3 id="赋值方法"><a href="#赋值方法" class="headerlink" title="赋值方法"></a>赋值方法</h3><ol><li>:&#x3D;  &#x2F;<em>英文的冒号+等号</em>&#x2F; 直接赋值 </li><li>:&#x3D;&amp;弹窗提示名  &#x2F;*英文的冒号 + 等号 + &amp; + 提示 ( shift+7 ) *&#x2F; 弹窗赋值–给变量赋予用户输入的值</li><li>select into 赋值  &#x2F;<em>不直接赋值，而是把select语句中查到的值通过into赋给变量</em>&#x2F;</li></ol><h4 id="弹窗赋值使用方法一"><a href="#弹窗赋值使用方法一" class="headerlink" title="弹窗赋值使用方法一"></a>弹窗赋值使用方法一</h4><p>declare<br>  v_no number :&#x3D;&amp;学号;<br>  v_name varchar2(20):&#x3D;’&amp;姓名’;–使用弹窗给字符串赋值时，’&amp;弹窗提示名’ 需要用单引号括起来<br>  v_class number :&#x3D;&amp;班级;<br>  v_date date :&#x3D; to_date(‘&amp;入学日期’,’yyyy&#x2F;mm&#x2F;dd’);<br>begin<br>  dbms_output.put_line(‘学号为：’||v_no||’，姓名为：’||v_name||’，班级为：’||v_class||’，入学日期为：’||v_date||’。’);<br>end;</p><h4 id="弹窗赋值使用方法二"><a href="#弹窗赋值使用方法二" class="headerlink" title="弹窗赋值使用方法二"></a>弹窗赋值使用方法二</h4><p>declare<br>  v_no number :&#x3D;&amp;学号;<br>  v_name varchar2(20):&#x3D;&amp;姓名;–在弹窗内输入值时，字符串类型需要单引号括起来<br>  v_class number :&#x3D;&amp;班级;<br>  v_date date :&#x3D;&amp;入学日期;–在弹窗内输出日期时，需要使用转换函数把日期转为date类型<br>begin<br>  dbms_output.put_line(‘学号为：’||v_no||’，姓名为：’||v_name||’，班级为：’||v_class||’，入学日期为：’||v_date||’。’);<br>end;</p><p>思考题：<br>1.在块中能不能直接使用 select 查询信息，比如查询员工’SMITH’的薪资–不能，会报错<br>select sal from emp where ename &#x3D; ‘SMITH’;</p><p>declare<br>  v_sal number;<br>begin<br>  select sal into v_sal from emp where ename &#x3D; ‘SMITH’;–可以通过select into 赋值的方法在块中使用select语句<br>  dbms_output.put_line(‘史密斯的薪资为：’||v_sal);<br>end;</p><p>2.打印出emp表中 员工编号为7369的员工姓名与所在部门<br>declare<br>  v_ename varchar2(20);<br>  v_deptno number;<br>begin<br>  select ename,deptno into v_ename,v_deptno from emp where empno&#x3D;7369;<br>  dbms_output.put_line(‘员工编号为7369的员工姓名’||v_ename||’与所在部门’||v_deptno);<br>end;</p><p>3.打印出emp表中 员工编号为7369的员工姓名与部门所在地<br>declare<br>  v_ename varchar2(20);<br>  v_loc   varchar2(20);<br>begin<br>  select ename, loc<br>    into v_ename, v_loc<br>    from emp a<br>    join dept b<br>      on a.deptno &#x3D; b.deptno<br>   where empno &#x3D; 7369;<br>  dbms_output.put_line(‘员工姓名为’ || v_ename || ‘部门所在地是’ || v_loc);<br>end;</p><p>声明变量（日期型），当手动输入一个日期后，打印出这是本年的第几周 格式为’XX在本年的第Y周’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare </span><br><span class="line">v_date date :=to_date(&#x27;&amp;日期&#x27;,&#x27;yyyy-mm-dd&#x27;);</span><br><span class="line">begin</span><br><span class="line">  dbms_output.put_line(v_date||&#x27;在本年的第&#x27;||to_char(v_date,&#x27;ww&#x27;)||&#x27;周&#x27;);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>打印出emp表中 薪资为5000 的员工姓名、薪资与部门名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">v_ename varchar2(7);</span><br><span class="line">v_sal number(5):=5000;</span><br><span class="line">v_dname varchar2(10);</span><br><span class="line">begin</span><br><span class="line">  select ename,sal,dname into v_ename,v_sal,v_dname from emp a join dept b on a.deptno=b.deptno where sal=5000;</span><br><span class="line">  dbms_output.put_line(v_ename||&#x27;  &#x27;||v_sal||&#x27;  &#x27;||v_dname);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">select ename,sal,dname  from emp a join dept b on a.deptno=b.deptno and sal=5000;--on 跟 where 的区别</span><br></pre></td></tr></table></figure><p>声明一个数值型变量v_deptno，输入赋值<br>查询并打印部门编号为v_deptno且在此部门内工资最低的员工姓名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">v_deptno number:=&amp;部门编号;</span><br><span class="line">v_ename varchar2(10);</span><br><span class="line">begin</span><br><span class="line">  select ename</span><br><span class="line">    into v_ename</span><br><span class="line">    from (select ename</span><br><span class="line">            from emp</span><br><span class="line">           where sal in (select min(sal) from emp where deptno = v_deptno)</span><br><span class="line">             and deptno = v_deptno) where rownum =1; </span><br><span class="line">  dbms_output.put_line(&#x27;部门编号&#x27;||v_deptno||&#x27;员工姓名&#x27;||v_ename);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">v_deptno number:=&amp;部门编号;</span><br><span class="line">v_ename varchar2(10);</span><br><span class="line">begin</span><br><span class="line">  select ename</span><br><span class="line">    into v_ename</span><br><span class="line">    from (select ename</span><br><span class="line">            from emp</span><br><span class="line">           where sal = 3000</span><br><span class="line">             and deptno = v_deptno) where rownum =1; </span><br><span class="line">  dbms_output.put_line(&#x27;部门编号&#x27;||v_deptno||&#x27;员工姓名&#x27;||v_ename);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>思考题：<br>删除掉表内重复数据的方法？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">create table emp_copy as select * from emp;</span><br><span class="line">create table emp_copy1 as select * from emp_copy;</span><br><span class="line">select * from v_emp_copy;</span><br><span class="line">select * from emp_copy1;</span><br><span class="line">select * from emp_copy;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> --创建表用于备份数据</span><br><span class="line">create table v_emp_copy as select  empno,ename,job,mgr,hiredate,sal,comm,deptno from emp_copy  group by empno,ename,job,mgr,hiredate,sal,comm,deptno having count(1)&gt;1;</span><br><span class="line">select * from v_emp_copy;</span><br><span class="line"></span><br><span class="line">--删除数据</span><br><span class="line">delete from emp_copy where empno in (select empno from (select  empno,ename,job,mgr,hiredate,sal,comm,deptno,count(1) from emp_copy  group by empno,ename,job,mgr,hiredate,sal,comm,deptno having count(1)&gt;1) group by empno);</span><br><span class="line">select * from emp_copy for update;</span><br><span class="line"></span><br><span class="line">--重新插入重复数据</span><br><span class="line">insert into emp_copy select  * from v_emp_copy;</span><br><span class="line">select * from emp_copy;</span><br><span class="line">select * from emp;</span><br><span class="line"></span><br><span class="line">--删除表释放空间</span><br><span class="line">drop table v_emp_copy</span><br><span class="line">drop view v_emp_copy</span><br></pre></td></tr></table></figure><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">v_deptno number:=&amp;部门编号;</span><br><span class="line">v_xingming varchar2(10);</span><br><span class="line">begin</span><br><span class="line">  select ename into v_xingming from emp where (sal,deptno) in(select min(sal),deptno from emp where deptno=v_deptno group by deptno);</span><br><span class="line">  dbms_output.put_line(&#x27;部门编号&#x27;||v_deptno||&#x27;员工姓名&#x27;||v_xingming);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">select ename from emp where (sal,deptno) in(select min(sal),deptno from emp where deptno=10 group by deptno);</span><br><span class="line"></span><br><span class="line">declare</span><br><span class="line">v_sal number;</span><br><span class="line">begin</span><br><span class="line">  select sal into v_sal from emp where sal = 3000;--报错，实际返回的行数多于一行</span><br><span class="line">  dbms_output.put_line(v_sal);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><p>打印工资第5名的员工姓名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">declare </span><br><span class="line">v_ename varchar2(10);</span><br><span class="line">begin </span><br><span class="line"> select ename into v_ename from (select ename,rownum r from (select * from emp order by sal desc))where r  between  5 and 5;</span><br><span class="line"> dbms_output.put_line(&#x27;姓名：&#x27;||v_ename);</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">select ename into v_ename from (select ename,rownum paixu from (select * from emp order by sal desc)) where paixu = 5;</span><br></pre></td></tr></table></figure><p>打印出KING的员工编号和入职时间(精确到天)和对应的部门名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">declare</span><br><span class="line">  v_empno number;</span><br><span class="line">  v_date date;</span><br><span class="line">  v_dname varchar2(10);</span><br><span class="line">begin</span><br><span class="line">  select empno,hiredate,dname into v_empno,v_date,v_dname from emp A join dept B on A.deptno = B.deptno and A.ename = &#x27;KING&#x27;;</span><br><span class="line">  dbms_output.put_line(&#x27;员工编号：&#x27;||v_empno||&#x27;，入职时间：&#x27;||v_date||&#x27;，部门名称：&#x27;||v_dname);</span><br><span class="line">end;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> PLSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plsql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视图</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><p>含义：将查询的结果动态保存到数据库中的一张虚拟表上。</p><p>特点：占用空间小，查询速度快，能像普通表一样使用，能动态获取结果。视图只有逻辑定义。每次使用的时候,只是重新执行SQL。</p><p>关键词：<code>VIEW</code></p><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/20200604070254183.png" alt="20200604070254183"></p><p><strong>完整语法：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">OR</span> REPLACE] [&#123;FORCE<span class="operator">|</span>NOFORCE&#125;] <span class="keyword">VIEW</span> view_name</span><br><span class="line"></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> 查询</span><br><span class="line"></span><br><span class="line">[<span class="keyword">WITH</span> READ <span class="keyword">ONLY</span> <span class="keyword">CONSTRAINT</span>]</span><br></pre></td></tr></table></figure><p><strong>语法详解：</strong></p><ol><li><code>OR REPLACE</code>：如果视图已经存在，则替换旧视图。</li><li><code>FORCE</code>：即使基表不存在，也可以创建该视图，但是该视图不能正常使用，当基表创建成功后，视图才能正常使用。</li><li><code>NOFORCE</code>：如果基表不存在，无法创建视图，该项是默认选项。</li><li><code>WITH</code> <code>READ</code> <code>ONLY</code>：默认可以通过视图对基表执行增删改操作，但是有很多在基表上的限制(比如：基表中某列不能为空，但是该列没有出现在视图中，则不能通过视图执行<code>insert</code>操作)，<code>WITH READ ONLY</code>说明视图是只读视图，不能通过该视图进行增删改操作。现实开发中，基本上不通过视图对表中的数据进行增删改操作。</li></ol><p><strong>视图分类：</strong><br>1.简单视图，它是基于单个表所建立的，不包含任何函数、表达式以及分组数据的视图。<br>2.复杂视图，它是指包含函数、表达式或者分组数据的视图，使用复杂视图的主要目的是为了简化查询操作。<br>3.连接视图，它是指基于多个表所建立的视图，使用连接视图的主要目的是为了简化连接查询。<br>4.只读视图，它是指只允许执行SELECT操作，而禁止任何DML操作的视图。<br>在视图上执行DML操作的原则：<br>1.DELETE操作原则：如果视图包含有GROUP BY子句、分组函数、DISTINCT关键字和ROWNUM伪列，那么不能在该视图上执行DELETE操作。<br>2.UPDATE操作原则：如果视图包含有GROUP BY子句、分组函数、DISTINCT关键字、ROWNUM伪列以及使用表达式所定义的列，那么不能在该视图上执行UPDATE操作。<br>3.INSERT操作原则：如果视图包含有GROUP BY子句、分组函数、DISTINCT关键字、ROWNUM伪列以及使用表达式所定义的列，或者在视图上没有包含视图基表的NOT NULL列，那么不能在该视图上执行INSERT操作。</p><h2 id="1-创建视图"><a href="#1-创建视图" class="headerlink" title="1.创建视图"></a>1.创建视图</h2><p><strong>语法：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> 视图名 <span class="keyword">AS</span> （ <span class="keyword">SELECT</span> 字段 <span class="keyword">from</span> 表<span class="operator">/</span><span class="keyword">SQL</span>语句）;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_EMP <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> DEPTNO<span class="operator">=</span><span class="number">10</span></span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/image-20220802095115635.png" alt="image-20220802095115635"></p><blockquote><p><strong>需要赋予权限：</strong></p><p><code>GRANT CREATE VIEW TO SCOTT</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> V_EMP(EMPNO,ENAME) <span class="keyword">VALUES</span> (<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;CKQ&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/image-20220802100256136.png" alt="image-20220802100256136"></p><h3 id="向视图插入数据："><a href="#向视图插入数据：" class="headerlink" title="向视图插入数据："></a>向视图插入数据：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> V_EMP(EMPNO,ENAME) <span class="keyword">VALUES</span> (<span class="string">&#x27;1212&#x27;</span>,<span class="string">&#x27;CKQ&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/image-20220802100453726.png" alt="image-20220802100453726"></p><blockquote><p>此时源表中出现了数据，向视图插入数据，源表也会出现数据。</p></blockquote><h3 id="向源表插入数据："><a href="#向源表插入数据：" class="headerlink" title="向源表插入数据："></a>向源表插入数据：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP(EMPNO,ENAME，DEPTNO) <span class="keyword">VALUES</span> (<span class="string">&#x27;1313&#x27;</span>,<span class="string">&#x27;CKQ&#x27;</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> V_EMP;</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/image-20220802101330914.png" alt="image-20220802101330914"></p><blockquote><p>此时视图中出现了数据，向源表插入数据，视图也会出现数据。</p></blockquote><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><blockquote><ul><li>在视图中进行增加操作，原表也会进行对应的操作</li><li>在EMP表中，EMPNO带有主键约束，结合上面一点，所以在视图中进行增加操作必须加上EMPNO这一列</li><li>如果在视图中插入不符合条件的数据，不会报错，但是不会显示在视图中（因为视图创建时加了条件），&#x3D;&#x3D;源表会显示&#x3D;&#x3D;；同时反过来也相同； 即：双向绑定</li></ul></blockquote><h2 id="2-修改视图"><a href="#2-修改视图" class="headerlink" title="2.修改视图"></a>2.修改视图</h2><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> REPLACE <span class="keyword">VIEW</span> 视图名 <span class="keyword">AS</span> （ <span class="keyword">SELECT</span> 字段 <span class="keyword">from</span> 表<span class="operator">/</span><span class="keyword">SQL</span>语句）;</span><br></pre></td></tr></table></figure><h2 id="3-删除视图"><a href="#3-删除视图" class="headerlink" title="3.删除视图"></a>3.删除视图</h2><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> 视图名;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> V_EMP;</span><br></pre></td></tr></table></figure><blockquote><p>注意：删除视图不会影响源表</p></blockquote><h2 id="思考："><a href="#思考：" class="headerlink" title="思考："></a>思考：</h2><h3 id="1-视图中是否可以使用函数或者来源表中不存在的列？"><a href="#1-视图中是否可以使用函数或者来源表中不存在的列？" class="headerlink" title="1.视图中是否可以使用函数或者来源表中不存在的列？"></a>1.视图中是否可以使用函数或者来源表中不存在的列？</h3><p>&#x3D;&#x3D;可以&#x3D;&#x3D; </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_EMP <span class="keyword">AS</span> <span class="keyword">SELECT</span> emp.<span class="operator">*</span>,rownum a <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> DEPTNO<span class="operator">=</span><span class="number">10</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> V_EMP</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/image-20220802105330967.png" alt="image-20220802105330967"></p><blockquote><p>不存在的列必须有&#x3D;&#x3D;别名&#x3D;&#x3D;</p></blockquote><h3 id="2-可以基于表连接创建视图吗？可以"><a href="#2-可以基于表连接创建视图吗？可以" class="headerlink" title="2.可以基于表连接创建视图吗？可以"></a>2.可以基于表连接创建视图吗？可以</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_EMP <span class="keyword">AS</span> <span class="keyword">SELECT</span> ename,deptno <span class="keyword">FROM</span> EMP <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">SELECT</span> ename,deptno <span class="keyword">FROM</span> EMP ;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> V_EMP</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/image-20220802105916938.png" alt="image-20220802105916938"></p><blockquote><p>交并补可以在此处使用</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_EMP <span class="keyword">AS</span> <span class="keyword">SELECT</span> emp.<span class="operator">*</span>,dept.<span class="operator">*</span> <span class="keyword">FROM</span> EMP ,dept ;</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/image-20220802110035372.png" alt="image-20220802110035372"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_EMP <span class="keyword">AS</span> <span class="keyword">SELECT</span> emp.deptno,ename,emp.empno <span class="keyword">FROM</span> EMP ,dept ;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> V_EMP</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/image-20220802110251068.png" alt="image-20220802110251068"></p><blockquote><p>使用表连接时注意不能出现重复列名</p><p>当表连接的表被删除一个后，视图还会存在，但是无法查询，可以再创建一个同名字的表，该视图还能继续使用</p></blockquote><h3 id="3-可以用视图做表连接吗？"><a href="#3-可以用视图做表连接吗？" class="headerlink" title="3.可以用视图做表连接吗？"></a>3.可以用视图做表连接吗？</h3><p>&#x3D;&#x3D;可以&#x3D;&#x3D;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.deptno <span class="keyword">from</span> V_EMP a,V_EMP b;</span><br></pre></td></tr></table></figure><blockquote><p>表连接时，如果有相同列名需要明确指定</p></blockquote><h3 id="4-可以基于视图创建视图吗？"><a href="#4-可以基于视图创建视图吗？" class="headerlink" title="4.可以基于视图创建视图吗？"></a>4.可以基于视图创建视图吗？</h3><p>&#x3D;&#x3D;可以&#x3D;&#x3D;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> V_EMP1 <span class="keyword">AS</span> <span class="keyword">select</span> deptno <span class="keyword">from</span> V_EMP ;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> V_EMP1</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/16.%E8%A7%86%E5%9B%BE/image-20220802110856139.png" alt="image-20220802110856139"></p><h3 id="5-虚拟列在以上哪个地方有体现？"><a href="#5-虚拟列在以上哪个地方有体现？" class="headerlink" title="5.虚拟列在以上哪个地方有体现？"></a>5.虚拟列在以上哪个地方有体现？</h3><blockquote><p>表中不存在的列为虚拟列</p></blockquote><h1 id="物化视图"><a href="#物化视图" class="headerlink" title="物化视图"></a>物化视图</h1><p>是一张实际存在的表，在源表上复制数据</p><p><strong>优点：</strong>运行效率较快</p><p>创建物化视图的语法：<code>CREATE MATERIALIZED VIEW</code> 视图名 <code>AS</code> SQL语句;</p>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注释</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/15.%E6%B3%A8%E9%87%8A,%E5%90%8C%E4%B9%89%E8%AF%8D/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/15.%E6%B3%A8%E9%87%8A,%E5%90%8C%E4%B9%89%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><blockquote><p>单行注释  <code>--</code></p><p>多行注释  <code>/* */</code></p><p>方便了解sql语句的作用等</p></blockquote><h2 id="1-列注释"><a href="#1-列注释" class="headerlink" title="1.列注释"></a>1.列注释</h2><p>语法：<code>COMMENT</code> <code>ON</code> <code>COLUMN</code> 表名.列名 <code>IS</code> ‘注释内容’;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">comment <span class="keyword">on</span> <span class="keyword">column</span> emp.deptno <span class="keyword">is</span> <span class="string">&#x27;部门编号&#x27;</span>;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center"><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/15.%E6%B3%A8%E9%87%8A,%E5%90%8C%E4%B9%89%E8%AF%8D/image-20220801153901148-16615575305701.png" alt="image-20220801153901148"></th></tr></thead></table><h3 id="修改注释："><a href="#修改注释：" class="headerlink" title="修改注释："></a>修改注释：</h3><blockquote><p>1.CTRL+鼠标左键 直接修改</p><p>2.再次输入语句<code>comment on column emp.deptno is &#39;更改后的注释&#39;;</code></p></blockquote><h3 id="删除注释："><a href="#删除注释：" class="headerlink" title="删除注释："></a>删除注释：</h3><blockquote><p>1.CTRL+鼠标左键 直接删除</p><p>2.再次输入语句<code>comment on column emp.deptno is &#39;&#39;;</code>（单引号内不写内容）</p><p>不能使用null（如下图）</p></blockquote><table><thead><tr><th align="center"><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/15.%E6%B3%A8%E9%87%8A,%E5%90%8C%E4%B9%89%E8%AF%8D/image-20220801154316079.png" alt="image-20220801154316079"></th></tr></thead></table><h2 id="2-表级注释"><a href="#2-表级注释" class="headerlink" title="2.表级注释"></a>2.表级注释</h2><p>语法：<code>COMMENT</code> <code>ON</code> <code>TABLE</code> 表名 <code>IS</code> ‘注释的内容’;</p><p>&#x3D;&#x3D;修改 删除 方法同上&#x3D;&#x3D;</p><h1 id="同义词"><a href="#同义词" class="headerlink" title="同义词"></a>同义词</h1><p><strong>语法：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">OR</span> REPLACE] [PUBLIC] SYNONYM [schema.] synonym_name <span class="keyword">FOR</span> [schema.] object_name [<span class="variable">@dblink</span>];</span><br></pre></td></tr></table></figure><p><strong>语法说明：</strong><br><code>OR REPLACE</code>: 在不使用DROP的前提下容许你重新创建（如果同义词已经存在）。</p><p><code>PUBLIC</code>: 所创建的同义词是全局的同义词，所有数据库用户都可以使用。</p><p><code>schema</code>: 要创建同义词的对象所在的schema,如果省略，则默认的应用对象在当前<code>schema</code>下。</p><p><code>object_name</code>: 要创建同义词的对象，它可以是以下几种类型：</p><ul><li>TABLE</li><li>VIEW</li><li>SEQUENCE</li><li>STORED PROCEDURE</li><li>FUNCTION</li><li>PACKAGE</li><li>MATERIALIZED VIEW</li><li>JAVA CLASS SCHEMA OBJECT</li><li>USER-DEFINED OBJECT</li><li>SYNONYM</li></ul><p>含义：相当于给数据库对象取一个长期有效的别名</p><p>分类：</p><p>&#x3D;&#x3D;公有&#x3D;&#x3D;同义词  所有用户都可以使用 <code>PUBLIC</code> <code>SYNONYM</code></p><p>&#x3D;&#x3D;私有&#x3D;&#x3D;同义词  只能是创建用户或者被授权用户使用 <code>SYNONYM</code></p><p>赋予用户查看某张表的权限：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 用户名.表名 <span class="keyword">TO</span> 用户名;</span><br></pre></td></tr></table></figure><h2 id="公有同义词"><a href="#公有同义词" class="headerlink" title="公有同义词"></a>公有同义词</h2><p>语法：<code>CREATE</code> <code>PUBLIC</code> <code>SYNONYM</code> 公有名 <code>FOR</code> 对象名;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> PUBLIC SYNONYM abc <span class="keyword">FOR</span> emp;</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/15.%E6%B3%A8%E9%87%8A,%E5%90%8C%E4%B9%89%E8%AF%8D/image-20220801164649724-16615576344262.png" alt="image-20220801164649724"></p><blockquote><p>更换为管理员用户后成功创建</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> abc;</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/15.%E6%B3%A8%E9%87%8A,%E5%90%8C%E4%B9%89%E8%AF%8D/image-20220801165039716.png" alt="image-20220801165039716"></p><blockquote><p>原因：当前用户下不存在emp表 同理使用同义词也找不到表</p></blockquote><p><strong>正确使用方法：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> PUBLIC SYNONYM scottemp <span class="keyword">FOR</span> scott.emp;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> scottemp;</span><br></pre></td></tr></table></figure><blockquote><p>在管理员用户下给scott用户下的emp表创建同义词</p></blockquote><p><strong>删除&#x3D;&#x3D;公有&#x3D;&#x3D;同义词：</strong></p><p><code>DROP</code> <code>PUBLIC</code> <code>SYNONYM</code> 同义词;</p><h2 id="私有同义词"><a href="#私有同义词" class="headerlink" title="私有同义词"></a>私有同义词</h2><p>语法：<code>CREATE</code>  <code>SYNONYM</code> 公有名 <code>FOR</code> 对象名;</p><p>在管理员用户下时：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SCOTT.scottemp</span><br></pre></td></tr></table></figure><blockquote><p>私有同义词无法直接找到，需要赋予查看权限再来查看表。（由于是管理员，所以这里不用赋权）</p></blockquote><p>问题：</p><p><del>同义词前面可以加用户名吗？</del></p><p>同义词能在其他用户下删除吗？</p><p>可以删除，需要赋予权限  （赋权语句如下）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> [p] synonym <span class="keyword">to</span> scott</span><br></pre></td></tr></table></figure><h2 id="删除同义词"><a href="#删除同义词" class="headerlink" title="删除同义词"></a>删除同义词</h2><p><strong>语法：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> [PUBLIC] SYNONYM [schema.] synonym_name [FORCE];</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p><code>PUBLIC</code>: 容许删除PUBLIC同义词， 如果使用了PUBLIC关键字，则可以省略schema。</p><p><code>FORCE</code>：用来强制删除同义词，即使它在数据库中有其它的依赖。</p><blockquote><p><strong>补充：</strong></p><p>授权某个用户crate synonym的权限，若用户名为scott</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">create</span> synonym <span class="keyword">to</span> scott</span><br></pre></td></tr></table></figure><p>创建同义词</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> [<span class="keyword">or</span> replace] synonym syn_name <span class="keyword">from</span> table_name;</span><br></pre></td></tr></table></figure><p>撤销scott创建同义词的权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">revoke</span> <span class="keyword">create</span> synonym <span class="keyword">from</span> scott;</span><br></pre></td></tr></table></figure><p>删除同义词</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> synonym syn_name</span><br></pre></td></tr></table></figure><p>查看所有同义词</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dba_synonyms</span><br></pre></td></tr></table></figure><p>获取当前所有的同义词表名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  table_name <span class="keyword">from</span>  user_synonyms</span><br></pre></td></tr></table></figure><p>查询所有同义词表的所有者：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  table_owner   <span class="keyword">from</span>  user_synonyms</span><br></pre></td></tr></table></figure><p>查询当前同义词表的所有者：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  table_owner  <span class="keyword">from</span>  user_synonyms  <span class="keyword">WHERE</span> table_name <span class="operator">=</span> <span class="string">&#x27;大写表名&#x27;</span></span><br></pre></td></tr></table></figure><p>查询同义词表的表数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>   <span class="operator">*</span>  <span class="keyword">from</span>   大写所有者名.大写表名</span><br></pre></td></tr></table></figure><p>查询同义词表的表结构基本信息（字段名称，字段类型，字段长度等信息）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  COLUMN_NAME,DATA_TYPE,DATA_LENGTH   <span class="keyword">from</span>   dba_tab_columnswhere table_name <span class="operator">=</span>  <span class="string">&#x27;(大写表名)&#x27;</span>   <span class="keyword">AND</span>   OWNER <span class="operator">=</span> (大写所<span class="operator">=</span>属名)   <span class="keyword">order</span>   <span class="keyword">by</span>   COLUMN_NAME;</span><br></pre></td></tr></table></figure></blockquote>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/14.%E7%B4%A2%E5%BC%95/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/14.%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><p><strong>索引的起名规则：</strong><code>索引名_表名_列名</code></p><p><strong>说明：</strong><br>1）索引是数据库对象之一（数据库对象有6个：用户，表，视图，索引，序列，触发器），用于加快数据的检索，类似于书籍的目录。<br>在数据库中索引可以减少数据库程序查询结果时需要读取的数据量，<br>类似于在书籍中我们利用目录可以不用翻阅整本书即可找到想要的信息。<br>2）索引是建立在表上的可选对象;–索引的关键在于通过一组排序后的索引键来取代默认的全表扫描检索方式，从而提高检索效率<br>3）索引在逻辑上和物理上都与相关的表和数据无关，当创建或者删除一个索引时，不会影响基本的表<br>4）索引一旦建立，在表上进行DML操作时（例如在执行插入、修改或者删除相关操作时），oracle会自动管理索引<br>5）索引对用户是透明的，无论表上是否有索引，sql语句的用法不变<br>6）oracle创建主键时会自动在该列上创建B-TREE索引</p><p>1.六个数据库对象：用户，表，视图，索引，序列，触发器；<br>2.索引类似于字典上目录，是建立在一列或多列上的辅助对象；<br>3.索引可以减少查询结果时读取的数据，从而加快数据的检索；<br>4.当创建或删除索引时，不会对表产生影响；<br>5.创建索引后，会加快查询效率，但是，进行DML操作上，ORACLE会自动管理索引（大部分情况都会降低效率）；<br>6.索引对用户时透明的，无论表上是否有索引，SQL语句不会变；</p><p>7.ORACLE创建主键时，会自动在该列上创建索引&#x3D;&#x3D;B-TREE索引&#x3D;&#x3D;。</p><p>全盘扫描：将表中的每一条数据都挨个扫一遍，默认的扫描方式<br>索引扫描：在表中的列上建立索引，先对数据进行排序（默认从小到大），将该数据以及对应的 rowid 存为一条索引条目（数据+rowid）<br>检索数据时，会先对索引列进行检索，然后直接定位到数据所在的 rowid。</p><blockquote><p>冷知识：虽然ROWID对我们没什么太大作用，但它的检索速度确实很快</p></blockquote><h2 id="索引的分类"><a href="#索引的分类" class="headerlink" title="索引的分类"></a>索引的分类</h2><p><strong>按照存储形式</strong><br>B-TREE索引<br>位图索引<br>反向键索引<br>基于函数的索引<br><strong>按照唯一性</strong><br>唯一索引    非唯一索引<br><strong>按照列个数</strong><br>单列索引   复合索引(联合索引)–多列索引</p><hr><h3 id="一-B-TREE索引（B树索引）–默认索引类型，最常见，最常用的索引类型根块–索引中的顶级块（包含了指向下一个节点的信息）"><a href="#一-B-TREE索引（B树索引）–默认索引类型，最常见，最常用的索引类型根块–索引中的顶级块（包含了指向下一个节点的信息）" class="headerlink" title="一. B-TREE索引（B树索引）–默认索引类型，最常见，最常用的索引类型根块–索引中的顶级块（包含了指向下一个节点的信息）"></a>一. B-TREE索引（B树索引）–默认索引类型，最常见，最常用的索引类型根块–索引中的顶级块（包含了指向下一个节点的信息）</h3><p>分支块–指向下一个节点的信息（指向分支块或者叶块）<br>叶块–索引的入口（能够适应精确查找，模糊查询，比较查询）</p><blockquote><p>特点：</p><p>1.适用于大部分情况<br>2.不适用于包含OR的语句</p></blockquote><p>语法：<code>CREATE</code> <code>INDEX</code> 索引名 <code>ON</code> 表名(需要添加索引的字段1,字段2,…);</p><p>–sql语句先看有没有符合条件的索引，有就使用索引，没有就全盘扫描</p><h3 id="二：位图索引"><a href="#二：位图索引" class="headerlink" title="二：位图索引"></a>二：位图索引</h3><blockquote><ol><li>主要用于值的范围相对固定或只有少数几个值的列中</li><li>适用于包含OR的语句</li></ol></blockquote><p>语法：<code>CREATE</code> <code>BITMAP</code> <code>INDEX</code> 索引名 <code>ON</code> 表名(需要添加索引的字段1,字段2,…);</p><h3 id="三：反向键索引"><a href="#三：反向键索引" class="headerlink" title="三：反向键索引"></a>三：反向键索引</h3><blockquote><ol><li>将数据反过来存储</li><li>不常见，但是部分有奇效</li></ol></blockquote><p>10001  10002    10005  10033  10016<br>10001  20001    50001   33001  61001</p><p>语法：<code>CREATE</code> <code>INDEX</code> 索引名 <code>ON</code> 表名(需要添加索引的字段1,字段2,…) <code>REVERSE</code>;</p><p>–<code>REVERSE</code> 颠倒</p><h3 id="四：基于函数的索引"><a href="#四：基于函数的索引" class="headerlink" title="四：基于函数的索引"></a>四：基于函数的索引</h3><blockquote><p>用于经常对某个字段做查询的时候带函数操作的</p></blockquote><p>语法：<code>CREATE</code> <code>INDEX</code> 索引名 <code>ON</code> 表名(<code>FUNCTION</code> 需要添加索引的字段1,字段2,…);</p><hr><h3 id="五：唯一索引"><a href="#五：唯一索引" class="headerlink" title="五：唯一索引"></a>五：唯一索引</h3><blockquote><p>索引列中不允许出现重复的值</p></blockquote><p>语法：<code>CREATE</code> <code>UNIQUE</code> <code>INDEX</code> 索引名 <code>ON</code> 表名(需要添加索引的字段1,字段2,…);</p><p>提问：B-TREE索引一定是唯一索引吗？位图索引呢？<br>回答：B-TREE索引不一定是唯一索引，位图索引一定不是唯一索引</p><hr><h3 id="六：单列索引"><a href="#六：单列索引" class="headerlink" title="六：单列索引"></a>六：单列索引</h3><blockquote><p>只覆盖一个列的索引（只引用一个列时会生效）</p></blockquote><p>语法：<code>CREATE</code>  <code>INDEX</code> 索引名 <code>ON</code> 表名(需要添加索引的字段1);</p><h3 id="七：复合索引"><a href="#七：复合索引" class="headerlink" title="七：复合索引"></a>七：复合索引</h3><blockquote><p>覆盖多个列的索引（引用到第一个列时会生效）</p></blockquote><p>语法：<code>CREATE</code>  <code>INDEX</code> 索引名 <code>ON</code> 表名(需要添加索引的字段1,字段2,…);</p><h2 id="删除索引："><a href="#删除索引：" class="headerlink" title="删除索引："></a>删除索引：</h2><p>语法：<code>DROP</code> <code>INDEX</code> 索引名;</p><h2 id="修改索引："><a href="#修改索引：" class="headerlink" title="修改索引："></a>修改索引：</h2><h3 id="1-重命名索引"><a href="#1-重命名索引" class="headerlink" title="1.重命名索引"></a>1.重命名索引</h3><p>语法：<code>ALTER</code> <code>INDEX</code> 旧索引名 <code>RENAME</code> TO 新索引名;</p><h3 id="2-合并索引"><a href="#2-合并索引" class="headerlink" title="2.合并索引"></a>2.合并索引</h3><p>–占物理空间，会随着数据的增加而变大<br>–将更新、删除等操作产生的空闲空间进行合并<br>语法：<code>ALTER</code> <code>INDEX</code> 索引名 <code>COALESCE</code> <code>DEALLOCATE</code>  <code>UNUSED</code>;</p><h3 id="3-禁用索引"><a href="#3-禁用索引" class="headerlink" title="3.禁用索引"></a>3.禁用索引</h3><p><code>ALTER</code> <code>INDEX</code> 索引名 <code>UNUSABLE</code>;</p><h3 id="4-启用索引（重建索引）"><a href="#4-启用索引（重建索引）" class="headerlink" title="4.启用索引（重建索引）"></a>4.启用索引（重建索引）</h3><p><code>ALTER</code> <code>INDEX</code> 索引名 <code>REBUILD</code>;</p><blockquote><p>紧急提问：索引越多越好吗？</p><p>不是。创建索引耗费时间，占物理空间，会随着数据的增加而变大，会拖慢效率</p></blockquote><h2 id="创建索引的原则："><a href="#创建索引的原则：" class="headerlink" title="创建索引的原则："></a>创建索引的原则：</h2><p>1.如果在一列上同时存在唯一索引和非唯一索引，ORACLE会自动引用唯一索引；<br>2.如果索引建立在多个列上时，只有他的第一个列被引用时，优化器才会使用该索引；<br>3.数据量小的表不建议创建索引；<br>4.列中有很多空值，不建议创建索引，因为索引容易失效；但是如果该列的非空值经常被查询，还是应当创建索引；<br>5.经常进行WHERE查询或表连接的列，应当创建索引；<br>6.在创建索引时，要将最常查询到的列放在最前，索引的第一个列也应该放在最前；<br>7.数据类型：<code>NUMBER CHAR VARCHAR2 VARCHAR DATE</code><br><code>LONG</code> (变长，字符串数据，最长2G)–不能创建索引<br><code>LONG RAW</code> (变长，二进制数据，最长2G)–不能创建索引<br>INT–这个是什么？<br>8.要限制索引的数量。<br>8.1 不重要的列不建议创建索引<br>8.2 一张表内不建议创建太多的索引</p><blockquote><p>原因：创建索引耗费时间，占物理空间，会随着数据的增加而变大，会拖慢效率</p></blockquote><h2 id="索引失效："><a href="#索引失效：" class="headerlink" title="索引失效："></a>索引失效：</h2><p>1.通配符：* _ %<br>当通配符处于搜索词的首位 ‘%A%’</p><p>2.在索引列上使用不等于时</p><p>3.索引判断空值时</p><p>4.未引用复合索引的第一个列时</p><p>1.索引本身失效</p><p>2.隐式转换导致索引失效</p><p>3.查询的数据量为一个表的大部分数据</p><p>4.对小表查询</p><p>5.B-TREE索引 IS NULL 不走索引  IS NOT NULL 走索引</p><h2 id="ORACLE索引失效原因归纳"><a href="#ORACLE索引失效原因归纳" class="headerlink" title="ORACLE索引失效原因归纳"></a><a href="https://www.cnblogs.com/guanjie20/p/4817337.html">ORACLE索引失效原因归纳</a></h2><p><strong>1．隐式转换导致索引失效.这一点应当引起重视.也是开发中经常会犯的错误.</strong></p><p> 由于表的字段tu_mdn定义为varchar2(20),但在查询时把该字段作为number类型以where条件传给Oracle,这样会导致索引失效.</p><p> 错误的例子：select * from test where tu_mdn&#x3D;13333333333;</p><p> 正确的例子：select * from test where tu_mdn&#x3D;’13333333333’;</p><p><strong>2. 对索引列进行运算导致索引失效,我所指的对索引列进行运算包括(+，-，*，&#x2F;，! 等)</strong></p><p> 错误的例子：select * from test where id-1&#x3D;9;</p><p> 正确的例子：select * from test where id&#x3D;10;</p><p><strong>3. 使用Oracle内部函数导致索引失效.对于这样情况应当创建基于函数的索引.</strong></p><p>​    错误的例子：select * from test where round(id)&#x3D;10; 说明，此时id的索引已经不起作用了</p><p>   正确的例子：首先建立函数索引，create index test_id_fbi_idx on test(round(id));然后 select * from test where round(id)&#x3D;10; 这时函数索引起作用了</p><p><strong>4. 以下使用会使索引失效，应避免使用；</strong></p><ul><li>使用 &lt;&gt; 、not in 、not exist、!&#x3D;</li><li>like “%_” 百分号在前（可采用在建立索引时用reverse(columnName)这种方法处理）</li><li>单独引用复合索引里非第一位置的索引列.应总是使用索引的第一个列，如果索引是建立在多个列上, 只有在它的第一个 列被where子句引用时，优化器才会选择使用该索引。</li><li>字符型字段为数字时在where条件里不添加引号.</li><li>当变量采用的是times变量，而表的字段采用的是date变量时.或相反情况。</li></ul><p><strong>5. 不要将空的变量值直接与比较运算符（符号）比较。</strong></p><p>如果变量可能为空，应使用 IS NULL 或 IS NOT NULL 进行比较，或者使用 ISNULL 函数。</p><p><strong>6. 不要在 SQL 代码中使用双引号。</strong></p><p>因为字符常量使用单引号。如果没有必要限定对象名称，可以使用（非 ANSI SQL 标准）括号将名称括起来。</p><p><strong>7. 将索引所在表空间和数据所在表空间分别设于不同的磁盘chunk上，有助于提高索引查询的效率。</strong></p><p><strong>8. Oracle默认使用的基于代价的SQL优化器（CBO）非常依赖于统计信息，一旦统计信息不正常，会导致数</strong> <strong>据库查询时不使用索引或使用错误的索引。</strong></p><p>   一般来说，Oracle的自动任务里面会包含更新统计信息的语句，但如果表数据发生了比较大的变化（超过 20%）,可以考虑立即手动更新统计信息，例如：analyze table abc compute statistics，但注意，更新统计 信息比较耗费系统资源，建议在系统空闲时执行。</p><p><strong>9. Oracle在进行一次查询时，一般对一个表只会使用一个索引.</strong></p><p>   因此，有时候过多的索引可能导致Oracle使用错误的索引，降低查询效率。例如某表有索引1（Policyno） 和索引 2 （ classcode），如果查询条件为 policyno &#x3D; ‘ xx ’ and classcode &#x3D; ‘ xx ’ ，则系统有可能会使用索引 2，相较于使用索引1，查询效率明显降低。</p><p><strong>10. 优先且尽可能使用分区索引。</strong></p>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>序列</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/12.%E5%BA%8F%E5%88%97/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/12.%E5%BA%8F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h1 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h1><p>要学怎么创建序列，需要注意什么，提问：怎么应用序列</p><p>含义：序列是ORACLE提供的一组能够自动递增或递减的序号，常用来生成主键自增</p><p>语法:<br><code>CREATE SEQUENCE</code>  序列名         –创建序列名<br><code>START</code> <code>WITH</code> N1                          –初始值N1<br><code>INCREMENT</code> BY N2                    –增长幅度N2<br><code>MINVALUE</code> N3                            –最小值N3          <code>NOMINVALUE</code><br><code>MAXVALUE</code> N4                            –最大值N4          <code>NOMAXVALUE</code><br><code>CACHE</code> N5                               –缓存N5              <code>NOCACHE</code><br><code>CYCLE</code>;                                 –循环                  <code>NOCYCLE</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence seq_class37 <span class="keyword">start</span> <span class="keyword">with</span>  increment <span class="keyword">by</span> <span class="number">1</span> maxvalue <span class="number">10</span> cache <span class="number">20</span> <span class="keyword">cycle</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> SEQUENCE SEQ_CLASS37</span><br><span class="line"><span class="keyword">START</span> <span class="keyword">WITH</span> <span class="number">1</span></span><br><span class="line">INCREMENT <span class="keyword">BY</span> <span class="number">1</span></span><br><span class="line">MINVALUE <span class="number">1</span></span><br><span class="line">MAXVALUE <span class="number">42</span></span><br><span class="line">CACHE <span class="number">20</span></span><br><span class="line"><span class="keyword">CYCLE</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>NEXTVAL</code> –下一个值<br><code>CURRVAL</code> –当前值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SEQ_CLASS37.NEXTVAL <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="keyword">SELECT</span> SEQ_CLASS37.CURRVAL <span class="keyword">FROM</span> DUAL;</span><br></pre></td></tr></table></figure><p><code>CREATE</code> <code>SEQUENCE</code>  序列名     建议取名方式：&#x3D;&#x3D;SEQ_名字&#x3D;&#x3D;<br><code>START</code> <code>WITH</code> N1                         –1.初始值为多少，第一次运行出来的数字就为多少<br>                                           –2.初始值不能大于最大值，不能小于最小值<br>                                           –3.初始值只有在第一运行的有效<br><code>INCREMENT BY</code> N2                            –当增长幅度为正数时，序列为递增序列；当增长幅度为负数时，序列为递减序列<br>                                           –增长幅度要小于最大值与最小值的差<br><code>MINVALUE</code> N3                                –最小值的上限为负的&#x3D;&#x3D;10^27^&#x3D;&#x3D;<br><code>MAXVALUE</code> N4                                –最大值的上限为正的&#x3D;&#x3D;10^27^&#x3D;&#x3D;<br><code>CACHE</code> N5                                   –缓存可以理解为电脑先运行序列得到部分值，找值的时候就会被直接输出<br>                                           –必须大于&#x3D;&#x3D;1&#x3D;&#x3D;<br>                                           – 能写的最大值&#x3D;（最大值减去最小值）&#x2F;增长幅度的绝对值  即&#x3D;&#x3D;&lt;&#x3D;循环次数&#x3D;&#x3D;<br><code>CYCLE</code>;                                     –如果有循环，当得到的值&#x3D;&#x3D;超过最大值或最小值，会得到最小值或最大值&#x3D;&#x3D;</p><p><code>NEXTVAL</code> –第一次运行找到的是初始值，但是第一次运行必须是NEXTVAL<br><code>CURRVAL</code> –如果一次NEXTVAL都没有运行过，CURRVAL是不能运行的</p><p><strong>删除序列的方法：</strong>&#x3D;&#x3D;DROP SEQUENCE 序列名&#x3D;&#x3D;;</p><p><code>CREATE SEQUENCE</code>  序列名                     – &#x3D;&#x3D;可以只有第一行&#x3D;&#x3D;，其他的所有东西都是默认值<br><code>START WITH</code>                                 –当不写初始值时，默认从&#x3D;&#x3D;最小值&#x3D;&#x3D;开始，最小值和初始值都不写时，默认从&#x3D;&#x3D;1&#x3D;&#x3D;开始<br><code>INCREMENT BY</code>                       –当不写增长幅度时，默认增长幅度为&#x3D;&#x3D;1&#x3D;&#x3D;<br><code>MINVALUE</code>                               –最小值的上限为负的&#x3D;&#x3D;10^27^&#x3D;&#x3D;<br><code>MAXVALUE</code>                               –最大值的上限为正的&#x3D;&#x3D;10^27^&#x3D;&#x3D;<br><code>CACHE</code>                                      –当不写缓存时，默认为&#x3D;&#x3D;20&#x3D;&#x3D;,写循环时不能超过循环的次数&#x3D;&#x3D;&lt;&#x3D;循环次数&#x3D;&#x3D;<br><code>CYCLE</code>;                                     –当不写循环时，默认不循环；当不循环时，当下一个值超过最大&#x2F;最小值时，会报错</p><p><strong>修改序列：</strong><br>&#x3D;&#x3D;ALTER SEQUENCE 序列名&#x3D;&#x3D;<br>&#x3D;&#x3D;需要修改的部分;&#x3D;&#x3D;</p><p><strong>特点：</strong></p><ul><li>修改序列不会使序列初始化，而会修改之后的值</li><li>不能修改初始值，哪怕什么都没运行；</li></ul><p><strong>删除序列：</strong><br><code>DROP</code> <code>SEQUENCE</code> 序列名;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> SEQUENCE SEQ_CLASS37;</span><br></pre></td></tr></table></figure><p>提问：1.当序列为递增序列时，需要设置最大值；当序列为递减序列时，需要设置最小值。对不对？<br>2.怎么应用序列？<br>3.能在序列里面插入函数吗？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> A.<span class="operator">*</span> ,SEQ_CLASS37.NEXTVAL <span class="keyword">FROM</span> EMP A;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> SEQ_CLASS37.CURRVAL <span class="keyword">FROM</span> DUAL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP(EMPNO) <span class="keyword">VALUES</span>(SEQ_CLASS37.nextVAL);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br></pre></td></tr></table></figure><blockquote><p>序列(<code>SEQUENCE</code>)是序列号生成器，可以为表中的行自动生成序列号，产生一组等间隔的数值(类型为数字)。不占用磁盘空间，占用内存。</p><p>其主要用途是生成表的主键值，可以在插入语句中引用，也可以通过查询检查当前值，或使序列增至下一个值。</p></blockquote><p>创建序列需要&#x3D;&#x3D;CREATE SEQUENCE&#x3D;&#x3D;系统权限。序列的创建语法如下：</p><p>　　<code>CREATE</code> <code>SEQUENCE</code> 序列名</p><p>　　[<code>INCREMENT</code> <code>BY</code> n1]</p><p>　　[<code>START</code> <code>WITH</code> n2]</p><p>　　[{<code>MAXVALUE</code>&#x2F; <code>MINVALUE</code> n3| <code>NOMAXVALUE</code>}]</p><p>　　[{<code>CYCLE</code>|<code>NOCYCLE</code>}]</p><p>　　[{<code>CACHE</code> n4| <code>NOCACHE</code>}];</p><p>  其中：</p><ul><li><p><code>INCREMENT BY</code>用于定义序列的步长，如果省略，则默认为1，如果出现负值，则代表Oracle序列的值是按照此步长递减的。</p></li><li><p><code>START WITH</code> 定义序列的初始值(即产生的第一个值)，默认为1。&#x3D;&#x3D;如果不写按照最小值来&#x3D;&#x3D;</p></li><li><p><code>MAXVALUE</code> 定义序列生成器能产生的最大值。选项<code>NOMAXVALUE</code>是默认选项，代表没有最大值定义，这时对于递增Oracle序列，系统能够产生的最大值是10的27次方;对于递减序列，最大值是-1。</p></li><li><p><code>MINVALUE</code>定义序列生成器能产生的最小值。选项<code>NOMAXVALUE</code>是默认选项，代表没有最小值定义，这时对于递减序列，系统能够产生的最小值是?10的26次方;对于递增序列，最小值是1。</p></li><li><p><code>CYCLE</code>和<code>NOCYCLE</code> 表示当序列生成器的值达到限制值后是否循环。<code>CYCLE</code>代表循环，<code>NOCYCLE</code>代表不循环。如果循环，则当递增序列达到最大值时，循环到最小值;对于递减序列达到最小值时，循环到最大值。如果不循环，达到限制值后，继续产生新值就会发生错误。</p></li><li><p><code>CACHE</code>(缓冲)定义存放序列的内存块的大小，默认为20。<code>NOCACHE</code>表示不对序列进行内存缓冲。对序列进行内存缓冲，可以改善序列的性能。</p><blockquote><p>​大量语句发生请求，申请序列时，为了避免序列在运用层实现序列而引起的性能瓶颈。Oracle序列允许将序列提前生成 cache x个先存入内存，在发生大量申请序列语句时，可直接到运行最快的内存中去得到序列。但cache个数也不能设置太大，因为在数据库重启时，会清空内存信息，预存在内存中的序列会丢失，当数据库再次启动后，序列从上次内存中最大的序列号+1 开始存入cache x个。这种情况也能会在数据库关闭时也会导致序号不连续。</p></blockquote></li><li><p><code>NEXTVAL</code> 返回序列中下一个有效的值，任何用户都可以引用。</p></li><li><p><code>CURRVAL</code> 中存放序列的当前值,<code>NEXTVAL</code> 应在 <code>CURRVAL</code> 之前指定 ，二者应同时有效。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 序列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>窗口函数</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/13.%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/13.%E7%AA%97%E5%8F%A3%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="窗口函数"><a href="#窗口函数" class="headerlink" title="窗口函数"></a>窗口函数</h1><p>语法：<code>SELECT</code> 聚合函数（字段） <code>OVER</code>(分组,排序),字段 <code>FROM</code> 表</p><p>–窗口函数的分组 <code>PARTITION BY</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MAX</span>(SAL) <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) &quot;MAX_SAL&quot; <span class="keyword">FROM</span> EMP;</span><br></pre></td></tr></table></figure><p>相当于字段，可以取别名。</p><p>聚合函数和窗口函数的&#x3D;&#x3D;区别&#x3D;&#x3D;：</p><p>1.聚合函数针对一组数据时只会返回一个值，窗口函数针对一组数据会返回相同数量的值。</p><p>2.聚合函数分组的关键词为<code>GROUP BY</code>，窗口函数分组的关键词为<code>PARTITION BY</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查询每个部门的最高薪资</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO;</span><br><span class="line"><span class="number">2.</span>查询每个部门最高工资员工的姓名和薪资</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> SAL <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO) ;</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> SAL <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO) <span class="keyword">GROUP</span> <span class="keyword">BY</span> ENAME,SAL ; </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">FOR</span> <span class="keyword">UPDATE</span>;</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> (SAL,DEPTNO) <span class="keyword">IN</span> (<span class="keyword">SELECT</span> <span class="built_in">MAX</span>(SAL),DEPTNO <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO) ;</span><br><span class="line"><span class="number">3.</span>查询每个员工的姓名和薪资，以及对应部门的最高薪资</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> ENAME,SAL</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL , MAX_SAL  <span class="keyword">FROM</span> EMP A <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> DEPTNO,<span class="built_in">MAX</span>(SAL) MAX_SAL <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO) B <span class="keyword">USING</span>(DEPTNO);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MIN</span>(SAL)<span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) MAX_SAL <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">AVG</span>(SAL)<span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) MAX_SAL <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">SUM</span>(SAL)<span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) MAX_SAL <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">COUNT</span>(SAL)<span class="keyword">OVER</span> (<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) MAX_SAL <span class="keyword">FROM</span> EMP;</span><br></pre></td></tr></table></figure><p><strong>什么时候会用到窗口函数</strong></p><ul><li>当只要求输出聚合函数的值，只需要用到分组（GROUP BY ）,如果这种时候用开窗函数，会得到14个值,有点多余。</li><li>当每个人需要自己对应部门的聚合函数的值，如果只用GROUP BY ,是以个人为一个组，得不到自己想要的值，可以用表连接，但是用窗口函数会很方便</li></ul><blockquote><ol><li><strong>一些专用的窗口函数，随后会举例介绍其用法功能</strong></li></ol><ul><li>序号函数：<code>row_number</code>() &#x2F; <code>rank</code>() &#x2F; <code>dense_rank</code>()</li><li>分布函数：<code>percent_rank</code>() &#x2F; <code>cume_dist</code>()</li><li>前后函数：<code>lag</code>() &#x2F; <code>lead</code>()</li><li>头尾函数：<code>first_val</code>() &#x2F; <code>last_val</code>()</li><li>其他函数：<code>nth_value</code>() &#x2F; 用途：将分区中的有序数据分为n个桶，记录桶号。</li></ul><ol start="2"><li><strong>原有的聚合函数也可用作窗口函数，如下</strong></li></ol><ul><li><code>sum</code>()，<code>avg</code>()，<code>count</code>()，<code>max</code>()，<code>min</code>()</li></ul></blockquote><p>窗口函数和普通聚合函数也很容易混淆，二者<strong>区别</strong>如下：</p><ul><li>聚合函数是将多条记录聚合为一条；而窗口函数是每条记录都会执行，查询结果并不会改变记录条数，有几条记录执行完还是几条。</li><li>普通聚合函数也可以用于窗口函数中，赋予它窗口函数的功能。</li></ul><p>原因就在于窗口函数的执行顺序（逻辑上的）是在FROM，JOIN，WHERE，GROUP BY，HAVING之后，在ORDER　BY，LIMIT，SELECT　DISTINCT之前。它执行时GROUP BY的聚合过程已经完成了，所以不会再产生数据聚合。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">查询每个部门的最高薪资</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO;</span><br><span class="line"></span><br><span class="line">查询SMITH所在部门的最高薪资的员工信息</span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ENAME <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> DEPTNO <span class="keyword">IN</span>(<span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ENAME <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> (DEPTNO,SAL) <span class="keyword">IN</span></span><br><span class="line">(<span class="keyword">SELECT</span> DEPTNO,<span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> DEPTNO <span class="keyword">IN</span>(<span class="keyword">SELECT</span> DEPTNO <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ENAME <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>) <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO);<span class="comment">--单行多列</span></span><br><span class="line"></span><br><span class="line">查询每个部门最高工资的员工姓名和工资</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO ;</span><br><span class="line"><span class="keyword">SELECT</span> ENAME ,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> (DEPTNO,SAL) <span class="keyword">IN</span>(<span class="keyword">SELECT</span> DEPTNO,<span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO);<span class="comment">--多行多列</span></span><br><span class="line"></span><br><span class="line">查询每个员工的姓名和工资，以及对应部门的最高工资</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="keyword">SELECT</span> DEPTNO,<span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> DEPTNO,ENAME,SAL <span class="keyword">FROM</span> EMP) A <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> DEPTNO,<span class="built_in">MAX</span>(SAL) <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO) B <span class="keyword">USING</span>(DEPTNO);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,MAX_SAL <span class="keyword">FROM</span> EMP A <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> DEPTNO,<span class="built_in">MAX</span>(SAL) MAX_SAL <span class="keyword">FROM</span> EMP <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO) B <span class="keyword">ON</span> A.DEPTNO<span class="operator">=</span>B.DEPTNO;</span><br></pre></td></tr></table></figure><h2 id="1-聚合函数类"><a href="#1-聚合函数类" class="headerlink" title="1.聚合函数类"></a>1.聚合函数类</h2><p>语法：<code>SELECT</code> 聚合函数(字段)<code>OVER</code>(分析子句) <code>FROM</code> 表;</p><p>分析子句里面有分组和排序<br>之前学的分组关键词：<code>GROUP BY</code><br>之前学的排序关键词：<code>ORDER BY</code><br>窗口函数的分组关键词：<code>PARTITION BY</code><br>窗口函数的排序关键词：<code>ORDER BY</code> </p><blockquote><p>写在SELECT后面，相当于一个字段，可以取别名</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">查询每个员工的姓名和工资，以及对应部门的最高工资</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) R <span class="keyword">FROM</span> EMP;<span class="comment">--对应每个部门的最高工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MIN</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) <span class="keyword">FROM</span> EMP;<span class="comment">--对应每个部门的最低工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">SUM</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) <span class="keyword">FROM</span> EMP;<span class="comment">--对应每个部门的总计工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">AVG</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) <span class="keyword">FROM</span> EMP;<span class="comment">--对应每个部门的平均工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">COUNT</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO) <span class="keyword">FROM</span> EMP;<span class="comment">--对应每个部门的人数</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>窗口函数和聚合函数的区别</strong><br>1.当聚合函数针对一组数据进行分析时，只会返回一个值；窗口函数针对一组数据进行分析时，会返回相应数量的值；<br>2.聚合函数的分组关键词为GROUP BY ，窗口函数的分组关键词为PARTITION BY </p><p><strong>窗口函数属于–OLAP(联机分析处理)，主要是进行复杂的分析操作，提供直观易懂的查询结果</strong><br>窗口可以理解为一个范围，以PARTITION BY 为例，分组后的结果就可以理解为窗口<br>OLTP(联机事务处理)，主要进行简单的数据增删改查。</p></blockquote><p><strong>什么时候用两种函数？</strong><br>1.当只要求输出聚合函数的值的时候，用聚合函数，因为会去重；这种时候用窗口函数会得到冗余数据</p><p>2.当要求 需要 对应部门的聚合函数的值，如果用GROUP BY ，去重后只会得到三个值，少于预期的数量，需要用表连接进行扩展，用窗口函数更方便</p><p>3.当需要按每组排序时，用窗口函数更方便 （查询每个部门工资前三的员工信息  拓展内容）UNION ALL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--窗口函数中使用ORDER BY ，可以理解为从第一行到当前行</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--对应从第一行到当前行的最高工资</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) <span class="keyword">FROM</span> EMP;<span class="comment">--对应从第一行到当前行的最高工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MIN</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--对应从第一行到当前行的最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MIN</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) <span class="keyword">FROM</span> EMP;<span class="comment">--对应从第一行到当前行的最低工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">SUM</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--对应从第一行到当前行的累计工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">AVG</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">----对应从第一行到当前行的平均工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">COUNT</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">----对应从第一行到当前行的人数（会并列，前面会跳级）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">窗口函数的分析子句中可以只写分组和排序中的一个，也可以全部都写</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--对应部门的从第一行到当前行的最高工资</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) <span class="keyword">FROM</span> EMP;<span class="comment">--对应部门从第一行到当前行的最高工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MIN</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--对应部门的从第一行到当前行的最低工资</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">MIN</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) <span class="keyword">FROM</span> EMP;<span class="comment">--对应从第一行到当前行的最低工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">SUM</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--对应部门的从第一行到当前行的累计工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">AVG</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">----对应部门的从第一行到当前行的平均工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">COUNT</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) O_SAL <span class="keyword">FROM</span> EMP;<span class="comment">----对应部门的从第一行到当前行的人数（会并列，会跳级）</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：<br>1.PARTITION BY 能放在ORDER BY 后面吗？<br>–不可以<br>2.当分析子句同时含有分组和排序时，同时包含他们两个的特点。<br>3.能不能在一个SELECT 语句中出现多个窗口函数呢？<br>–可以</p></blockquote><h2 id="2-排序类"><a href="#2-排序类" class="headerlink" title="2.排序类"></a>2.排序类</h2><h3 id="1-ROW-NUMBER-OVER-分析子句-–得到从1开始的序列"><a href="#1-ROW-NUMBER-OVER-分析子句-–得到从1开始的序列" class="headerlink" title="1 ROW_NUMBER()OVER(分析子句)–得到从1开始的序列"></a>1 ROW_NUMBER()OVER(分析子句)–得到从1开始的序列</h3><p>与 ROWNUM 相似–自动生成从1开始的连续序号，出现ROWNUM则必须从1开始<br>–都是简单排序，重复时不并列，不跳级。1 2 3 4 5 6</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查询工资从小到大不算并列在第四位到第八位的员工信息</span><br><span class="line"> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> a.<span class="operator">*</span>,rownum b <span class="keyword">from</span> emp a <span class="keyword">order</span> <span class="keyword">by</span> sal) b <span class="keyword">where</span> b <span class="keyword">between</span> <span class="number">4</span> <span class="keyword">and</span> <span class="number">8</span>;<span class="comment">--错误</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> a.<span class="operator">*</span>,rownum 排序 <span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal) a) <span class="keyword">where</span> 排序 <span class="keyword">between</span> <span class="number">4</span> <span class="keyword">and</span> <span class="number">8</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> A.<span class="operator">*</span>,ROWNUM 排序 <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>)A) <span class="keyword">WHERE</span> 排序 <span class="keyword">BETWEEN</span> <span class="number">4</span> <span class="keyword">AND</span> <span class="number">8</span>; <span class="comment">--是降序，应该为升序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> ENAME ,SAL,<span class="built_in">ROW_NUMBER</span>()<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) R <span class="keyword">FROM</span> EMP) <span class="keyword">where</span> R <span class="keyword">BETWEEN</span> <span class="number">4</span> <span class="keyword">AND</span> <span class="number">8</span> ;</span><br></pre></td></tr></table></figure><h3 id="2-RANK-OVER-分析子句"><a href="#2-RANK-OVER-分析子句" class="headerlink" title="2 RANK()OVER(分析子句)"></a>2 RANK()OVER(分析子句)</h3><p>–非紧密排序，重复时并列，并且后面跳级  1   2   3    3   5  6</p><h3 id="3-DENSE-RANK-OVER-分析子句"><a href="#3-DENSE-RANK-OVER-分析子句" class="headerlink" title="3 DENSE_RANK()OVER(分析子句)"></a>3 DENSE_RANK()OVER(分析子句)</h3><p>–紧密排序，重复时并列，不跳级     1   2    3   3    4   5<br>–排序类前面的括号内不能写东西，不能省略括号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">RANK</span>()<span class="keyword">OVER</span>( <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--1 2 3 4 4 6</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">RANK</span>()<span class="keyword">OVER</span>( <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">RANK</span>()<span class="keyword">OVER</span>( <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">RANK</span>()<span class="keyword">OVER</span>( <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL ) <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">--首先运行SELECT的窗口函数的ORDER BY，其中工资升序生成序号，在运行ORDER BY ，工资再次排序成降序，再输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> A.<span class="operator">*</span> ,ROWNUM <span class="keyword">FROM</span> EMP A  <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span> ;<span class="comment">--用ROWNUM会打乱顺序，没有窗口函数智能</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">DENSE_RANK</span>()<span class="keyword">OVER</span>( <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--1 2 3  4 4 5</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">COUNT</span>(SAL)<span class="keyword">OVER</span>( <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) <span class="keyword">FROM</span> EMP;<span class="comment">-- 1 2 3 5 5 6</span></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,DEPTNO,<span class="built_in">COUNT</span>(SAL)<span class="keyword">OVER</span>( <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL ) <span class="keyword">FROM</span> EMP <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line">问：查询每个部门薪资排在第二名的员工信息（要求考虑重复数据，不跳级）</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> A.<span class="operator">*</span>,<span class="built_in">DENSE_RANK</span>()<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) R <span class="keyword">FROM</span> EMP A) <span class="keyword">WHERE</span> R <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">查询每个部门薪资排在第一名的员工信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> A.<span class="operator">*</span>,<span class="built_in">DENSE_RANK</span>()<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) R <span class="keyword">FROM</span> EMP A) <span class="keyword">WHERE</span> R <span class="operator">=</span> <span class="number">1</span>;<span class="comment">--四条数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> A.<span class="operator">*</span>,<span class="built_in">RANK</span>()<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) R <span class="keyword">FROM</span> EMP A) <span class="keyword">WHERE</span> R <span class="operator">=</span> <span class="number">1</span>;<span class="comment">--四条数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> A.<span class="operator">*</span>,<span class="built_in">ROW_NUMBER</span>()<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">DESC</span>) R <span class="keyword">FROM</span> EMP A) <span class="keyword">WHERE</span> R <span class="operator">=</span> <span class="number">1</span>;<span class="comment">--三条数据</span></span><br></pre></td></tr></table></figure><p>–ROW_NUMBER重复时不并列，所以能输出指定的结果<br>–RANK和DENSE_RANK重复时并列，所以输出的结果可能超过预期</p><p><strong>表连接的内容：</strong><br>条件写在WHERE和ON后面的区别<br>1.名字不一样<br>2.所属不一样，ON跟在FROM子句，WHERE属于WHERE子句<br>3.SELECT * FROM EMP A LEFT JOIN DEPT B ON A.DEPTNO  &#x3D; B.DEPTNO AND  A.DEPTNO &#x3D;10;<br>–条件写在ON后面，是先对表进行数据筛查，再以筛查结果作为一个新的数据源进行表连接<br>–条件写在WHERE后面，先进行表连接，再进行条件筛查</p><h2 id="3-偏移类"><a href="#3-偏移类" class="headerlink" title="3.偏移类"></a>3.偏移类</h2><p>LEAD(字段,偏移的行数,填充的内容(DEFAULT))OVER(分析子句) –LEAD 向上偏移 –LEAD 引领<br>LAG(字段,偏移的行数,填充的内容(DEFAULT))OVER(分析子句) –LAG 向下偏移 –LAG 退后</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SAL,<span class="built_in">LEAD</span>(SAL,<span class="number">3</span>,<span class="number">0</span>)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--整体向上偏移三行，没有的部分用‘填充的内容’填充</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> SAL,<span class="built_in">LAG</span>(SAL,<span class="number">3</span>,<span class="number">100</span>)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--整体向下偏移三行，没有的部分用‘填充的内容’填充</span></span><br></pre></td></tr></table></figure><p>–1.填充的内容的数据类型必须和字段保持一致；<br>–2.可以认为是整体向上&#x2F;向下移动，没有的部分用‘填充的内容’填充<br>–3.填充的内容可以不写，默认填充空值</p><p>FIRST_VALUE(字段)OVER(分析子句) –某个窗口范围内的第一个值<br>LAST_VALUE(字段)OVER(分析子句) –某个窗口范围内的最后一个值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SAL,<span class="built_in">FIRST_VALUE</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--升序排列后，整个表从第一行到当前行的第一个值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> SAL,<span class="built_in">LAST_VALUE</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;<span class="comment">--升序排列后，整个表从第一行到当前行的最后一个值</span></span><br><span class="line"><span class="comment">--ORDER BY 遵循从第一行到当前行</span></span><br></pre></td></tr></table></figure><h2 id="4-窗口子句"><a href="#4-窗口子句" class="headerlink" title="4.窗口子句"></a>4.窗口子句</h2><p><strong>又叫WINDOW子句</strong></p><p>语法：窗口函数()<code>OVER</code>(分析子句 <code>ROWS</code> <code>BETWEEN</code> … <code>AND</code> …)</p><blockquote><p>–这里的窗口函数可以写哪些？</p></blockquote><p>关键词：<br><code>CURRENT</code> <code>ROW</code> –当前行<br>数字 <code>PRECEDING</code> –当前行的前‘数字’行<br>数字 <code>FOLLOWING</code> –当前行的后‘数字行<br><code>UNBOUNDED</code> <code>PRECEDING</code> –第一行 –UNBOUNDED 无限制的<br><code>UNBOUNDED</code> <code>FOLLOWING</code> –最后一行</p><p>1.（窗口函数的默认值）从第一行到当前行<br><code>ROWS</code> <code>BETWEEN</code> <code>UNBOUNDED</code> <code>PRECEDING</code> <code>AND</code> <code>CURRENT</code> <code>ROW</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL ) <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> UNBOUNDED PRECEDING <span class="keyword">AND</span> <span class="keyword">CURRENT</span> <span class="type">ROW</span>) <span class="keyword">FROM</span> EMP;<span class="comment">--与前面的结果一样</span></span><br></pre></td></tr></table></figure><p>2.第一行到最后一行<br><code>ROWS</code> <code>BETWEEN</code> <code>UNBOUNDED</code> <code>PRECEDING</code> <code>AND</code> <code>UNBOUNDED</code> <code>FOLLOWING</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL ) <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> UNBOUNDED PRECEDING <span class="keyword">AND</span> UNBOUNDED FOLLOWING) <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="comment">--每个组在第一行到最后一行这个范围中选最大值</span></span><br></pre></td></tr></table></figure><p>3.从当前行到当前行的后2行<br><code>ROWS</code> <code>BETWEEN</code> <code>CURRENT</code> <code>ROW</code> <code>AND</code> 2 <code>FOLLOWING</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL ) <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>( <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> <span class="keyword">CURRENT</span> <span class="type">ROW</span> <span class="keyword">AND</span> <span class="number">2</span> FOLLOWING) <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="comment">--从当前行到当前行的后2行中找最大值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MIN</span>(SAL)<span class="keyword">OVER</span>( <span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> <span class="number">1</span>PRECEDING <span class="keyword">AND</span> <span class="number">2</span> FOLLOWING) <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="comment">--从当前行的前1行到当前行的后2行中找最小值</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">思考题：按照工资升序排序，输出姓名，工资，以及每人工资前一行和工资后两行；（两种方法）</span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> <span class="number">1</span> PRECEDING <span class="keyword">AND</span> <span class="number">1</span> PRECEDING),<span class="built_in">MAX</span>(SAL)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> <span class="number">2</span> FOLLOWING <span class="keyword">AND</span>  <span class="number">2</span> FOLLOWING) <span class="keyword">FROM</span> EMP; </span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,<span class="built_in">LAG</span>(SAL,<span class="number">1</span>)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL),<span class="built_in">LEAD</span>(SAL,<span class="number">2</span>)<span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> SAL) <span class="keyword">FROM</span> EMP;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 窗口函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DCL语句</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/11.DCL%E8%AF%AD%E5%8F%A5/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/11.DCL%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="DCL语句"><a href="#DCL语句" class="headerlink" title="DCL语句"></a>DCL语句</h1><h2 id="1-创建用户-USER"><a href="#1-创建用户-USER" class="headerlink" title="1.创建用户 USER"></a>1.创建用户 USER</h2><p>语法：<code>CREATE</code> <code>USER</code> 用户名 <code>IDENTIFIED</code> <code>BY</code> 密码;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> SCOTT IDENTIFIED <span class="keyword">BY</span> SCOTT;</span><br></pre></td></tr></table></figure><p>–如果权限不足会报错，显示权限不足，需要赋予权限。</p><p><code>sys</code>&#x2F;<code>sys</code>  <code>system</code>&#x2F;<code>system</code> 两个管理员账号密码</p><p>–无法直接登录，需要修改’连接为‘成<code>SYSDBA</code></p><h2 id="2-赋权（赋予权限）-GRANT"><a href="#2-赋权（赋予权限）-GRANT" class="headerlink" title="2.赋权（赋予权限） GRANT"></a>2.赋权（赋予权限） GRANT</h2><p>语法：<code>GRANT</code> <code>CREATE</code> <code>SESSION</code> TO 用户名;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CREATE</span> SESSION <span class="keyword">TO</span> YAOTIAN;</span><br></pre></td></tr></table></figure><p>–新建的用户没有表，也不能创建表</p><h3 id="2-2-给用户添加基础连接角色-CONNECT-和基础资源角色-RESOURCE"><a href="#2-2-给用户添加基础连接角色-CONNECT-和基础资源角色-RESOURCE" class="headerlink" title="2.2 给用户添加基础连接角色 CONNECT 和基础资源角色 RESOURCE"></a>2.2 给用户添加基础连接角色 CONNECT 和基础资源角色 RESOURCE</h3><p><code>CONNECT</code> 能够使用户连接到数据库中，并对其他用户的标有访问权限时，做增删改操作<br><code>RESOURCE</code> 能让用户在自己的窗口中创建表等内容<br>语法：<code>GRANT</code> <code>CONNECT</code>,<code>RESOURCE</code> <code>TO</code> 用户名;<br>–权限是可以多个一起给的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">CONNECT</span>,RESOURCE <span class="keyword">TO</span> YAOTIAN;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP(EMPNO NUMBER(<span class="number">4</span>));</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br></pre></td></tr></table></figure><h3 id="2-3-给用户赋予查询某张表的权限"><a href="#2-3-给用户赋予查询某张表的权限" class="headerlink" title="2.3 给用户赋予查询某张表的权限"></a>2.3 给用户赋予查询某张表的权限</h3><p>语法：<code>GRANT</code> <code>SELECT</code> <code>ON</code> 用户名.表名 <code>TO</code> 用户名;<br>–前一个用户名为表的所属人，后一个用户名为被赋予查看这张表的人</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> SCOTT.EMP <span class="keyword">TO</span> YAOTIAN;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SCOTT.EMP;</span><br></pre></td></tr></table></figure><h3 id="2-4-赋予用户管理员权限"><a href="#2-4-赋予用户管理员权限" class="headerlink" title="2.4 赋予用户管理员权限"></a>2.4 赋予用户管理员权限</h3><p>语法：<code>GRANT</code> <code>DBA</code> TO 用户名;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> DBA <span class="keyword">TO</span> YAOTIAN;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> A;<span class="comment">--还是查看</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SCOTT.A;<span class="comment">--这个才能查看</span></span><br></pre></td></tr></table></figure><p>我现在在YAOTIAN用户下创建了一个CLASS_37的表，请问怎么在SCOTT用户下查看?<br>1.赋予管理员权限<br>2.赋予查看这张表的权限</p><h2 id="3-收回权限-REVOKE"><a href="#3-收回权限-REVOKE" class="headerlink" title="3.收回权限 REVOKE"></a>3.收回权限 REVOKE</h2><p>语法：<code>REVOKE</code> 权限 FROM 用户名;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> DBA <span class="keyword">FROM</span> YAOTIAN;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SCOTT.A;<span class="comment">--会有一点点的滞后，新开窗口以后就不能运行了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 用户名.表名 <span class="keyword">TO</span> 用户名;</span><br><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> 用户名.表名 <span class="keyword">FROM</span> 用户名;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><code>GRANT SELECT ON 用户名.表名 TO 用户名;</code> 给某个用户赋予其他用户下表的查看权限</p></blockquote><h2 id="4-锁定-x2F-解锁用户-LOCK-x2F-UNLOCK"><a href="#4-锁定-x2F-解锁用户-LOCK-x2F-UNLOCK" class="headerlink" title="4.锁定&#x2F;解锁用户 LOCK&#x2F;UNLOCK"></a>4.锁定&#x2F;解锁用户 LOCK&#x2F;UNLOCK</h2><p>语法：<code>ALTER</code> <code>USER</code>  用户名 <code>ACCOUNT</code> <code>LOCK</code>;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span>  用户名 ACCOUNT UNLOCK;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> YAOTIAN ACCOUNT LOCK;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> YAOTIAN ACCOUNT UNLOCK;</span><br></pre></td></tr></table></figure><p>–1.可以在自己的用户下锁定自己，退出后无法登录<br>–2.锁定的用户在没有解锁之前无法登录</p><h2 id="5-修改密码"><a href="#5-修改密码" class="headerlink" title="5.修改密码"></a>5.修改密码</h2><p>创建用户的语法：<code>CREATE</code> <code>USER</code> 用户名 <code>IDENTIFIED</code> BY 密码;<br>修改密码的语法：<code>ALTER</code>  <code>USER</code> 用户名 <code>IDENTIFIED</code> <code>BY</code> 新密码;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> YAOTIAN IDENTIFIED <span class="keyword">BY</span> yaotian;</span><br></pre></td></tr></table></figure><p>–密码是严格区分大小写的，用户名不区分</p><h2 id="6-删除用户"><a href="#6-删除用户" class="headerlink" title="6.删除用户"></a>6.删除用户</h2><p>语法：<code>DROP</code> <code>USER</code> 用户名;–删除用户，但是里面有权限、表、视图等内容都不能用这个删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> YAOTIAN CASCADE;<span class="comment">--权限不足</span></span><br></pre></td></tr></table></figure><p>–CASCADE需要在超级管理员的用户下进行<br>–1.自己无法删除自己<br>–2.如果赋权了，得先收回权限再删除用户，要不然无法删除用户<br>–3.如果硬要删除，在用户名后加上CASCADE即可</p><p>&#x3D;&#x3D;GRANT DBA TO YAOTIAN;&#x3D;&#x3D;</p><p>&#x3D;&#x3D;DROP USER YAOTIAN CASCADE;&#x3D;&#x3D;</p>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DCL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>约束</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/10.%E7%BA%A6%E6%9D%9F/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/10.%E7%BA%A6%E6%9D%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h1><blockquote><p>一个字段可以有多个约束（前提不冲突）</p></blockquote><ul><li><p><strong>什么是约束？</strong></p><p>给表增加规则和条件（限制）。</p></li><li><p><strong>约束的作用：</strong></p><p>可以让表更加符合实际要求。因为约束具有不符合条件的数据不予录入的特点。</p></li><li><p><strong>约束的分类：</strong></p><p><strong>列级约束</strong>（六种）：主键（PRIMARY KEY）,外键（FOREIGN KEY）,唯一（UNIQUE）,检查（CHECK）,非空(&#x2F;空值）(NOT NULL&#x2F;NULL) ,默认（DEFAULT）</p><p><strong>表级约束</strong>（四种）：主键（PRIMARY KEY）,外键（FOREIGN KEY）,唯一（UNIQUE）,检查（CHECK）</p><p>（主键&#x3D;非空+唯一）</p></li><li><p><strong>列级约束和表级约束的区别：</strong></p></li></ul><p>​当一个约束只约束一个列时，他是列级约束；</p><p>​当一个约束同时约束多个列时，他是表级约束；</p><h2 id="一、非空约束-NOT-NULL-x2F-NULL"><a href="#一、非空约束-NOT-NULL-x2F-NULL" class="headerlink" title="一、非空约束 (NOT NULL&#x2F;NULL)"></a>一、非空约束 (NOT NULL&#x2F;NULL)</h2><h3 id="1-可以在创建表的时候创建非空约束"><a href="#1-可以在创建表的时候创建非空约束" class="headerlink" title="1.可以在创建表的时候创建非空约束"></a>1.可以在创建表的时候创建非空约束</h3><p>语法：<code>CREATE TABLE</code> 表名 (字段1 数据类型 <code>NULL</code>,字段2 数据类型 <code>NOT NULL</code>,…)<br>–限制可以为空值写不写<code>NULL</code>影响不大</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(EMPNO NUMBER(<span class="number">4</span>) <span class="keyword">NULL</span>,DEPTNO NUMBER(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,SAL NUMBER(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP3;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1111</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">800</span>);<span class="comment">--报错</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="string">&#x27;&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;&#x27;</span>);<span class="comment">--可以</span></span><br></pre></td></tr></table></figure><p>特点：</p><ul><li>NULL可以省略的，隐藏的默认值</li><li>插入违反约束条件的数据会报错</li><li>只能影响一个列，是列级约束，没有表级约束</li><li>如果列内有空值，约束不能改成非空</li></ul><h3 id="2-给表新增字段时，同时建立非空约束"><a href="#2-给表新增字段时，同时建立非空约束" class="headerlink" title="2.给表新增字段时，同时建立非空约束"></a>2.给表新增字段时，同时建立非空约束</h3><p>语法：<code>ALTER TABLE</code> 表名 <code>ADD</code>(字段1 数据类型 <code>NULL</code>&#x2F;<code>NOT NULL</code>,…)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(ENAME VARCHAR2(<span class="number">10</span>) <span class="keyword">NOT</span>  <span class="keyword">NULL</span>);<span class="comment">--报错，在新增列的时候，下面的数据为空，与非空约束冲突</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(ENAME VARCHAR2(<span class="number">10</span>)  <span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> EMP3 <span class="keyword">SET</span> ENAME <span class="operator">=</span> <span class="string">&#x27;朱精卫&#x27;</span> <span class="keyword">WHERE</span> EMPNO <span class="operator">=</span><span class="number">1111</span>;</span><br></pre></td></tr></table></figure><h3 id="3-给已有字段建立非空约束"><a href="#3-给已有字段建立非空约束" class="headerlink" title="3.给已有字段建立非空约束"></a>3.给已有字段建立非空约束</h3><p>语法：<code>ALTER TABLE</code> 表名 <code>MODIFY</code>(字段1 <code>NOT NULL</code>&#x2F;<code>NULL</code>);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">修改数据类型</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 MODIFY(SAL <span class="type">CHAR</span>(<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">语法：<span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY(字段<span class="number">1</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span><span class="operator">/</span><span class="keyword">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 MODIFY(SAL <span class="keyword">NOT</span> <span class="keyword">NULL</span>);<span class="comment">--报错，因为列内本身有空值</span></span><br></pre></td></tr></table></figure><p><strong>拓展：</strong></p><ul><li><p>约束能不能修改成自己？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 MODIFY(SAL <span class="keyword">NULL</span>);<span class="comment">--不能</span></span><br></pre></td></tr></table></figure></li><li><p>能否新增一个同名列，约束不同？</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(SAL NUMBER <span class="keyword">NULL</span>);<span class="comment">--不能创建同名列</span></span><br></pre></td></tr></table></figure></li></ul><p><code>CONSTRAINT</code> –起约束名的关键词<br>约束名的起名规则：<code>约束名_表名_列名</code><br><strong>注意：</strong></p><ul><li>同一个用户下，约束名不能重复</li><li>同一个用户下，表名不能重复</li><li>同一个表中，列名不能重复</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP3;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> EMP3;</span><br></pre></td></tr></table></figure><h2 id="二、唯一约束-UNIQUE"><a href="#二、唯一约束-UNIQUE" class="headerlink" title="二、唯一约束 UNIQUE"></a>二、唯一约束 UNIQUE</h2><blockquote><p>同一列内数据不能重复</p></blockquote><h3 id="1-可以在创建表的时候创建唯一约束"><a href="#1-可以在创建表的时候创建唯一约束" class="headerlink" title="1.可以在创建表的时候创建唯一约束"></a>1.可以在创建表的时候创建唯一约束</h3><p><code>CREATE TABLE</code> 表名(字段1 数据类型 <code>CONSTRAINT</code> 约束名1 <code>UNIQUE</code>,字段2 数据类型 <code>CONSTRAINT</code> 约束名2 <code>UNIQUE</code>,…);–<strong>列级约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(EMPNO NUMBER(<span class="number">4</span>) <span class="keyword">CONSTRAINT</span> UNI_EMP_EMPNO <span class="keyword">UNIQUE</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1111</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">2222</span>);</span><br></pre></td></tr></table></figure><p><code>CREATE TABLE</code> 表名(字段1 数据类型,字段2 数据类型,…,<code>CONSTRAINT</code> 约束名 <code>UNIQUE</code>(字段1,字段2,…))–<strong>表级约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(EMPNO NUMBER,DEPTNO NUMBER ,<span class="keyword">CONSTRAINT</span> UNI_EMP <span class="keyword">UNIQUE</span> (EMPNO,DEPTNO));</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1111</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3(DEPTNO) <span class="keyword">VALUES</span>(<span class="number">10</span>);</span><br></pre></td></tr></table></figure><p>–当表级约束约束多个列时，多个列为一个整体，有一个不一样都算不一样</p><p>–约束名能否取一样的名字</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP3;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(EMPNO NUMBER(<span class="number">4</span>) <span class="keyword">CONSTRAINT</span> UNI_EMP_EMPNO <span class="keyword">UNIQUE</span>);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(DEPTNO NUMBER(<span class="number">4</span>) <span class="keyword">NULL</span>);</span><br></pre></td></tr></table></figure><p>–一个表内可以插入不同的约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(ENAME VARCHAR2(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span>  UNI_EMP_EMPNO <span class="keyword">UNIQUE</span>);</span><br></pre></td></tr></table></figure><p>–同一个表内，约束名不能重复</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP1 <span class="keyword">AS</span> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP1 <span class="keyword">ADD</span>(SEX VARCHAR2(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span>  UNI_EMP_EMPNO <span class="keyword">UNIQUE</span>);</span><br></pre></td></tr></table></figure><p>–同一个用户下，约束名不能重复</p><h3 id="2-给表新增字段时，同时建立非空约束-1"><a href="#2-给表新增字段时，同时建立非空约束-1" class="headerlink" title="2.给表新增字段时，同时建立非空约束"></a>2.给表新增字段时，同时建立非空约束</h3><p>语法：<code>ALTER TABLE</code> 表名 <code>ADD</code>(字段1 数据类型 <code>CONSTRAINT</code> 约束名 <code>UNIQUE</code>);–列级约束</p><p>&#x3D;&#x3D;<em>列级约束</em>&#x3D;&#x3D;</p><p><code>ALTER</code> <code>TABLE</code> 表名 <code>ADD</code>(字段1 数据类型 <code>CONSTRAINT</code> 约束名1 <code>UNIQUE</code>,字段2 数据类型 <code>CONSTRAINT</code> 约束名2 <code>UNIQUE</code>,…);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(JOB VARCHAR2(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> UNI_EMP_JOB <span class="keyword">UNIQUE</span>);</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;<em>表级约束</em>&#x3D;&#x3D;</p><p><code>ALTER</code> <code>TABLE</code> 表名 <code>ADD</code>(字段1 数据类型,字段2 数据类型,..,<code>CONSTRAINT</code> 约束名 <code>UNIQUE</code>(字段1,字段2,…));</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(SAL NUMBER(<span class="number">10</span>),MGR NUMBER(<span class="number">10</span>), <span class="keyword">CONSTRAINT</span> UNI_EMP <span class="keyword">UNIQUE</span>(SAL,MGR));</span><br></pre></td></tr></table></figure><h3 id="3-给已有字段建立唯一约束"><a href="#3-给已有字段建立唯一约束" class="headerlink" title="3.给已有字段建立唯一约束"></a>3.给已有字段建立唯一约束</h3><p><em>&#x3D;&#x3D;列级约束&#x3D;&#x3D;</em></p><p><code>ALTER</code> <code>TABLE</code> 表名 <code>MODIFY</code>(字段1 数据类型 <code>CONSTRAINT</code> 约束名 <code>UNIQUE</code>,字段2 数据类型 <code>CONSTRAINT</code> 约束名 <code>UNIQUE</code>,…);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 MODIFY(SAL NUMBER(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> UNI_EMP_JOBB <span class="keyword">UNIQUE</span>);</span><br></pre></td></tr></table></figure><p><em>&#x3D;&#x3D;表级约束&#x3D;&#x3D;</em></p><p><code>ALTER</code> <code>TABLE</code> 表名 <code>MODIFY</code>(字段1 数据类型,字段2 数据类型,..,<code>CONSTRAINT</code> 约束名 <code>UNIQUE</code>(字段1,字段2,…));</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP2 MODIFY(EMPNO NUMBER(<span class="number">4</span>),DEPTNO NUMBER(<span class="number">2</span>),<span class="keyword">CONSTRAINT</span> UNI_EMP2 <span class="keyword">UNIQUE</span>(EMPNO,DEPTNO));</span><br></pre></td></tr></table></figure><p>问：能否将数据类型去掉？–可以</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP2 MODIFY(COMM  <span class="keyword">CONSTRAINT</span> UNI_EMP2_COMM <span class="keyword">UNIQUE</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP2 MODIFY(JOB,ENAME ,<span class="keyword">CONSTRAINT</span> UNI_EMP2_JE <span class="keyword">UNIQUE</span>(JOB, ENAME));</span><br></pre></td></tr></table></figure><h2 id="三、主键约束-PRIMARY-KEY"><a href="#三、主键约束-PRIMARY-KEY" class="headerlink" title="三、主键约束  PRIMARY KEY"></a>三、主键约束  PRIMARY KEY</h2><blockquote><p>主键&#x3D;非空+唯一 –说明里面既不能为空值，也不能有重复的值</p></blockquote><h3 id="1-在创建表的时候创建主键约束"><a href="#1-在创建表的时候创建主键约束" class="headerlink" title="1.在创建表的时候创建主键约束"></a>1.在创建表的时候创建主键约束</h3><p>&#x2F;<em>&#x3D;&#x3D;列级约束&#x3D;&#x3D;</em>&#x2F; </p><p><code>CREATE</code> <code>TABLE</code> 表名(字段1 数据类型 <code>CONSTRAINT</code> 约束名1 <code>PRIMARY</code> <code>KEY</code>);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(EMPNO NUMBER(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> PK_EMP3_EMPNO <span class="keyword">PRIMARY</span> KEY,DEPTNO NUMBER(<span class="number">10</span>)  <span class="keyword">CONSTRAINT</span> UNI_EMP3_DEPTNO <span class="keyword">unique</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP3;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1111</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>一个表内只能创建一个主键约束<br>一个语句里面可以同时创建不同的约束</p><p>问：1.一个列上只能有一个约束吗？–不是<br>2.如果只能有一个主键约束，为什么会有表级约束呢？</p><p>&#x3D;&#x3D;表级约束&#x3D;&#x3D;</p><p><code>CREATE</code> <code>TABLE</code> 表名(字段1 数据类型,字段2 数据类型,…,<code>CONSTRAINT</code> 约束名 <code>PRIMARY</code> <code>KEY</code>(字段1,字段2,…))</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(EMPNO NUMBER(<span class="number">10</span>),DEPTNO NUMBER(<span class="number">10</span>), <span class="keyword">CONSTRAINT</span> PK_EMP3 <span class="keyword">PRIMARY</span> KEY(EMPNO,DEPTNO));</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1111</span>,<span class="number">2222</span>);<span class="comment">--如果插入两次报错</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1111</span>,<span class="number">3333</span>);<span class="comment">--有一个数据不同可以插入</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="string">&#x27;&#x27;</span>,<span class="number">3333</span>);<span class="comment">--报错，空值不能插入</span></span><br></pre></td></tr></table></figure><h3 id="2-给表新增字段时，同时建立主键约束"><a href="#2-给表新增字段时，同时建立主键约束" class="headerlink" title="2.给表新增字段时，同时建立主键约束"></a>2.给表新增字段时，同时建立主键约束</h3><p>&#x3D;&#x3D;列级约束&#x3D;&#x3D;</p><p>ALTER TABLE 表名 ADD(字段1 数据类型 CONSTRAINT 约束名1 PRIMARY KEY);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(JOB VARCHAR2(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> UNI_EMP_JOB <span class="keyword">PRIMARY</span> KEY);</span><br><span class="line">如果创建表的时候已经有了主键约束，新增字段是不能再创建主键约束</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;表级约束&#x3D;&#x3D;</p><p>ALTER TABLE 表名 ADD(字段1 数据类型,字段2 数据类型,.. CONSTRAINT 约束名 PRIMARY KEY(字段1,字段2,…));</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(SAL NUMBER(<span class="number">10</span>),MGR NUMBER(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> UNI_EMP <span class="keyword">PRIMARY</span> KEY(SAL,MGR));</span><br></pre></td></tr></table></figure><h3 id="3-给已有字段建立主键约束"><a href="#3-给已有字段建立主键约束" class="headerlink" title="3.给已有字段建立主键约束"></a>3.给已有字段建立主键约束</h3><p>&#x3D;&#x3D;列级约束&#x3D;&#x3D; </p><p>ALTER TABLE 表名 MODIFY(字段1 数据类型 CONSTRAINT 约束名 PRIMARY KEY);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 MODIFY(SAL NUMBER(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> UNI_EMP_JOBB <span class="keyword">UNIQUE</span>);</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;表级约束&#x3D;&#x3D;</p><p>ALTER TABLE 表名 MODIFY(字段1 数据类型,字段2 数据类型,..,CONSTRAINT 约束名 PRIMARY KEY(字段1,字段2,…));</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP2 MODIFY(EMPNO NUMBER(<span class="number">4</span>),DEPTNO NUMBER(<span class="number">2</span>),<span class="keyword">CONSTRAINT</span> UNI_EMP2 <span class="keyword">PRIMARY</span> KEY(EMPNO,DEPTNO));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">一个列上只能有一个约束吗？<span class="comment">--不是</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> EMP3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span>  EMP3 (EMPNO NUMBER <span class="keyword">CONSTRAINT</span> UNI_EMP3_EMPNO <span class="keyword">UNIQUE</span>);<span class="comment">--有一个UNIQUE的唯一约束，也有一个NULL的可以为空值的约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 MODIFY(EMPNO <span class="keyword">NOT</span> <span class="keyword">NULL</span>);</span><br><span class="line"><span class="comment">--MODIFY不是修改约束，而是增加约束</span></span><br><span class="line"></span><br><span class="line">有兴趣的可以试一下：<span class="comment">--主键约束不能和唯一约束创建在同一个列上，但是能和非空约束创建在同一个列上</span></span><br><span class="line"></span><br><span class="line">删除约束的方法</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> 约束名;</span><br><span class="line">问题：能否同时删除多个约束呢？</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> 约束名<span class="number">1</span> <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> 约束名<span class="number">2</span> ; </span><br></pre></td></tr></table></figure><blockquote><p>MODIFY不是修改约束，而是增加约束</p><p>主键约束不能和唯一约束创建在同一个列上，但是能和非空约束创建在同一个列上</p><p>一个列上能有多个约束</p></blockquote><h2 id="四、检查约束"><a href="#四、检查约束" class="headerlink" title="四、检查约束"></a>四、检查约束</h2><p>是给字段制定一个范围，插入数据时，会先检查是否符合范围，符合才能插入。</p><blockquote><p>注意检查约束中不能使用子查询</p></blockquote><h3 id="1-在创建表的时候创建检查约束"><a href="#1-在创建表的时候创建检查约束" class="headerlink" title="1.在创建表的时候创建检查约束"></a>1.在创建表的时候创建检查约束</h3><p>语法：</p><p>&#x3D;&#x3D;列级约束&#x3D;&#x3D;</p><p> CREATE TABLE 表名 (字段1 数据类型 CONSTRAINT 约束名1 CHECK(范围1),字段2 数据类型 CONSTRAINT 约束名2 CHECK(范围2),…)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3 (EMPNO NUMBER(<span class="number">10</span>,<span class="number">2</span>) <span class="keyword">CONSTRAINT</span> CH_EMP3_EMPNO <span class="keyword">CHECK</span>(EMPNO<span class="operator">&lt;</span><span class="number">30</span>));</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP3;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">30</span>);<span class="comment">--报错</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">29.9999</span>);<span class="comment">--报错</span></span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;表级约束&#x3D;&#x3D;</p><p>CREATE TABLE 表名(字段1 数据类型,字段2 数据类型,…,CONSTRAINT 约束名 CHECK(范围1,范围2,..,))</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(EMPNO NUMBER(<span class="number">4</span>),DEPTNO NUMBER(<span class="number">2</span>),<span class="keyword">CONSTRAINT</span> CH_EMP3 <span class="keyword">CHECK</span>(EMPNO <span class="operator">&lt;</span> <span class="number">30</span> <span class="keyword">AND</span> DEPTNO<span class="operator">&gt;</span><span class="number">30</span>));</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">10</span>,<span class="number">40</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">30</span>,<span class="number">40</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3(DEPTNO) <span class="keyword">VALUES</span>(<span class="number">40</span>);</span><br></pre></td></tr></table></figure><h3 id="2-给表新增字段时，同时建立检查约束"><a href="#2-给表新增字段时，同时建立检查约束" class="headerlink" title="2.给表新增字段时，同时建立检查约束"></a>2.给表新增字段时，同时建立检查约束</h3><p>&#x3D;&#x3D;列级约束&#x3D;&#x3D; </p><p>ALTER TABLE 表名 ADD(字段1 数据类型 CONSTRAINT 约束名1 CHECK(范围1),字段2 数据类型 CONSTRAINT 约束名2 CHECK(范围2),…);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(SAL NUMBER(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> CH_EMP3_SAL <span class="keyword">CHECK</span>(SAL <span class="keyword">BETWEEN</span> <span class="number">1000</span> <span class="keyword">AND</span> <span class="number">3000</span>));</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;表级约束&#x3D;&#x3D;</p><p>ALTER TABLE 表名 ADD(字段1 数据类型,字段2 数据类型,..,CONSTRAINT 约束名 CHECK(范围1,范围2,…));</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 <span class="keyword">ADD</span>(SEX VARCHAR2(<span class="number">3</span>),SSEX VARCHAR2(<span class="number">9</span>), <span class="keyword">CONSTRAINT</span> CH_EMP33 <span class="keyword">CHECK</span>(SEX <span class="keyword">IN</span> (<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>) <span class="keyword">OR</span> SSEX<span class="operator">=</span> <span class="string">&#x27;中间人&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="3-给已有字段建立检查约束"><a href="#3-给已有字段建立检查约束" class="headerlink" title="3.给已有字段建立检查约束"></a>3.给已有字段建立检查约束</h3><p>&#x3D;&#x3D;列级约束&#x3D;&#x3D; </p><p><code>ALTER</code> <code>TABLE</code> 表名 <code>MODIFY</code>(字段1 数据类型 <code>CONSTRAINT</code> 约束名 <code>CHECK</code>(范围1),字段2 数据类型 <code>CONSTRAINT</code> 约束名 <code>CHECK</code>(范围2),…);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 MODIFY(COMM NUMBER(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> CH_EMO3_COMM <span class="keyword">CHECK</span>(COMM <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>));<span class="comment">--试试这种情况</span></span><br><span class="line">可以</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 MODIFY(COMM NUMBER(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> CH_EMO3_COMM <span class="keyword">CHECK</span>(COMM <span class="keyword">IS</span>  <span class="keyword">NULL</span>));<span class="comment">--试试这种情况</span></span><br><span class="line">k</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP3 MODIFY(COMM NUMBER(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> CH_EMO3_COMM <span class="keyword">CHECK</span>(COMM  <span class="operator">&gt;</span>(<span class="keyword">SELECT</span> <span class="built_in">MIN</span>(SAL) <span class="keyword">FROM</span> EMP)));<span class="comment">--试试这种情况</span></span><br><span class="line">检查约束不能使用子查询</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;表级约束&#x3D;&#x3D; </p><p>ALTER TABLE 表名 MODIFY(字段1 数据类型,字段2 数据类型,..,CONSTRAINT 约束名 CHECK(范围1,范围2,…));</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> EMP2 MODIFY(EMPNO NUMBER(<span class="number">4</span>),DEPTNO NUMBER(<span class="number">2</span>),<span class="keyword">CONSTRAINT</span> CH_EMP2 <span class="keyword">CHECK</span>(EMPNO<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">AND</span> DEPTNO<span class="operator">&lt;=</span><span class="number">40</span>));</span><br></pre></td></tr></table></figure><h2 id="五、外键约束-FOREIGN-KEY"><a href="#五、外键约束-FOREIGN-KEY" class="headerlink" title="五、外键约束 FOREIGN KEY"></a>五、外键约束 FOREIGN KEY</h2><blockquote><p>指当前列一定得从其他表中的主键或者唯一列上获取参照物<br>EMP表中的DEPTNO列,只能输入10，20，30，40，这些值从DEPT表中的DEPTNO列获取</p></blockquote><h3 id="1-在创建表的时候创建外键约束"><a href="#1-在创建表的时候创建外键约束" class="headerlink" title="1.在创建表的时候创建外键约束"></a>1.在创建表的时候创建外键约束</h3><p>语法：</p><p>&#x3D;&#x3D;列级约束&#x3D;&#x3D;</p><p><code>CREATE</code> <code>TABLE</code> 表名 (字段1 数据类型 , <code>CONSTRAINT</code> 约束名1 <code>FOREIGN</code> <code>KEY</code> (外键列的字段名) <code>REFERENCES</code> 参照表(参照列));</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(DEPTNO NUMBER(<span class="number">2</span>),<span class="keyword">CONSTRAINT</span> FK_EMP3_DEPTNO <span class="keyword">FOREIGN</span> KEY(DEPTNO) <span class="keyword">REFERENCES</span> EMP(SAL));</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP3;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">12</span>);</span><br></pre></td></tr></table></figure><blockquote><p>1.参照列一定是其他表内的主键或者唯一列，外键列不需要是唯一或者主键列<br>2.插入的值只能是参照物里面的内容<br>3.外键约束在数据类型后面&#x3D;&#x3D;有逗号&#x3D;&#x3D;</p></blockquote><p>&#x3D;&#x3D;表级约束&#x3D;&#x3D;<br><code>CREATE</code> <code>TABLE</code> 表名 (字段1 数据类型 ,字段2 数据类型, <code>CONSTRAINT</code> 约束名 <code>FOREIGN</code> <code>KEY</code> (外键列的字段名1,字段名2) <code>REFERENCES</code> 参照表(参照列1,参照列2));</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(ENAME NUMBER(<span class="number">4</span>),JOB NUMBER(<span class="number">4</span>),<span class="keyword">CONSTRAINT</span> FK_EMP3 <span class="keyword">FOREIGN</span> KEY(ENAME,JOB) <span class="keyword">REFERENCES</span> EMP(EMPNO,SAL));</span><br><span class="line"><span class="comment">--假设SAL是唯一列</span></span><br><span class="line"><span class="comment">--如果参照表里面的参照列是列级约束，是无法满足前面建立的表级外键约束</span></span><br></pre></td></tr></table></figure><p>注意：</p><p>4.外键列和参照列名字可以不一样，数据类型必须保持一致<br>5.表级外键的参照列必须也是表级的</p><h3 id="2-给表新增字段时，同时建立外键约束"><a href="#2-给表新增字段时，同时建立外键约束" class="headerlink" title="2.给表新增字段时，同时建立外键约束"></a>2.给表新增字段时，同时建立外键约束</h3><p>&#x3D;&#x3D;列级约束&#x3D;&#x3D;</p><p><code>ALTER</code> <code>TABLE</code> 表名 <code>ADD</code>(字段1 数据类型 ,<code>CONSTRAINT</code> 约束名1 <code>FOREIGN</code> <code>KEY</code> (外键列的字段名1) <code>REFERENCES</code> 参照表(参照列));</p><p>&#x3D;&#x3D;表级约束&#x3D;&#x3D;<br><code>ALTER</code> <code>TABLE</code> 表名 <code>ADD</code> (字段1 数据类型 ,字段2 数据类型, <code>CONSTRAINT</code> 约束名 <code>FOREIGN</code> <code>KEY</code> (外键列的字段名1,字段名2) <code>REFERENCES</code> 参照表(参照列1,参照列2));</p><h3 id="3-给已有字段建立外键约束"><a href="#3-给已有字段建立外键约束" class="headerlink" title="3.给已有字段建立外键约束"></a>3.给已有字段建立外键约束</h3><p><em>&#x3D;&#x3D;列级约束&#x3D;&#x3D;</em> <code>ALTER</code> <code>TABLE</code> 表名 <code>MODIFY</code>(字段1 数据类型 ,<code>CONSTRAINT</code> 约束名1 <code>FOREIGN</code> <code>KEY</code> (外键列的字段名1) <code>REFERENCES</code> 参照表(参照列));</p><p><em>&#x3D;&#x3D;表级约束&#x3D;&#x3D;</em><br><code>ALTER</code> <code>TABLE</code> 表名 <code>MODIFY</code>(字段1 数据类型 ,字段2 数据类型, <code>CONSTRAINT</code> 约束名 <code>FOREIGN</code> <code>KEY</code> (外键列的字段名1,字段名2) <code>REFERENCES</code> 参照表(参照列1,参照列2));</p><h2 id="六、默认约束-DEFAULT"><a href="#六、默认约束-DEFAULT" class="headerlink" title="六、默认约束   DEFAULT"></a>六、默认约束   DEFAULT</h2><blockquote><p>当给表插入一行数据时，含有默认约束的列如果没有插入数据，会用默认值自动填充<br>不能起约束名<br>不能用删除约束的方法对待默认值</p></blockquote><h3 id="1-建表的同时建立默认约束"><a href="#1-建表的同时建立默认约束" class="headerlink" title="1.建表的同时建立默认约束"></a>1.建表的同时建立默认约束</h3><p>语法：</p><p><em>&#x3D;&#x3D;列级约束&#x3D;&#x3D;</em></p><p><code>CREATE</code> <code>TABLE</code> 表名(字段1 数据类型 <code>DEFAULT</code>(默认值1),字段2 数据类型 <code>DEFAULT</code>(默认值2),…);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> EMP3(EMPNO NUMBER(<span class="number">4</span>),SEX VARCHAR2(<span class="number">3</span>) <span class="keyword">DEFAULT</span> (<span class="string">&#x27;男&#x27;</span>));</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP3;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1111</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3 <span class="keyword">VALUES</span>(<span class="number">1111</span>,<span class="string">&#x27;女&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3(EMPNO) <span class="keyword">VALUES</span>(<span class="number">1111</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> EMP3(SEX) <span class="keyword">VALUES</span>(<span class="string">&#x27;女&#x27;</span>);</span><br></pre></td></tr></table></figure><p>&#x3D;&#x3D;默认约束没有表级约束&#x3D;&#x3D;</p><h3 id="2-给表新增字段时，同时建立默认约束"><a href="#2-给表新增字段时，同时建立默认约束" class="headerlink" title="2.给表新增字段时，同时建立默认约束"></a>2.给表新增字段时，同时建立默认约束</h3><p><code>ALTER</code> <code>TABLE</code> 表名 <code>ADD</code>(字段1 数据类型 <code>DEFAULT</code>(默认值1),字段2 数据类型 <code>DEFAULT</code>(默认值2),…);</p><h3 id="3-给已有字段建立默认约束"><a href="#3-给已有字段建立默认约束" class="headerlink" title="3.给已有字段建立默认约束"></a>3.给已有字段建立默认约束</h3><p><code>ALTER</code> <code>TABLE</code> 表名 <code>MODIFY</code>(字段1 数据类型 <code>DEFAULT</code>(默认值1),字段2 数据类型 <code>DEFAULT</code>(默认值2),…);</p><p>默认值的&#x3D;&#x3D;修改&#x3D;&#x3D;方式<br><code>ALTER</code> <code>TABLE</code> 表名 <code>MODIFY</code>(字段1 数据类型 <code>DEFAULT</code>(默认值1),字段2 数据类型 <code>DEFAULT</code>(默认值2),…);<br>–问题：现在是在之前的基础上增加限制，还是进行修改呢？</p><p>默认值的&#x3D;&#x3D;删除&#x3D;&#x3D;方式<br><code>ALTER</code> <code>TABLE</code> 表名 <code>MODIFY</code>(字段1 数据类型 <code>DEFAULT</code> (‘’));</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY(字段<span class="number">1</span> 数据类型 <span class="keyword">DEFAULT</span> (<span class="keyword">NULL</span>));<span class="comment">--这个会不会报错？</span></span><br><span class="line">不会</span><br></pre></td></tr></table></figure><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/10.%E7%BA%A6%E6%9D%9F/image-20220804103234900.png" alt="image-20220804103234900"></p><h2 id="七、其他"><a href="#七、其他" class="headerlink" title="七、其他"></a>七、其他</h2><h3 id="1-删除约束的方法"><a href="#1-删除约束的方法" class="headerlink" title="1.删除约束的方法"></a>1.删除约束的方法</h3><blockquote><p>补充：删除列    <code>ALTER</code> <code>TABLE</code> 表名 <code>DROP</code> <code>COLUMN</code> 列名</p></blockquote><p><code>ALTER</code> <code>TABLE</code> 表名 <code>DROP</code> <code>CONSTRAINT</code> 约束名;</p><p><strong>删除表的&#x3D;&#x3D;单个&#x3D;&#x3D;字段约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span>  <span class="keyword">TABLE</span>  表名  <span class="keyword">DROP</span>   <span class="keyword">UNIQUE</span>(字段名);</span><br></pre></td></tr></table></figure><p><strong>删除表的&#x3D;&#x3D;多个&#x3D;&#x3D;字段约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span>  <span class="keyword">TABLE</span>  表名  <span class="keyword">DROP</span>   <span class="keyword">CONSTRAINT</span>  约束名;</span><br></pre></td></tr></table></figure><h3 id="2-约束重命名"><a href="#2-约束重命名" class="headerlink" title="2.约束重命名"></a>2.约束重命名</h3><blockquote><p>表的重命名 ：ALTER TABLE 旧表名 RENAME TO 新表名;<br>列的重命名：ALTER TABLE 表名 RENAME COLUMN 旧列名 TO 新列名;</p></blockquote><p><code>ALTER</code> <code>TABLE</code> 表名 <code>RENAME</code> <code>CONSTRAINT</code> 旧约束名 <code>TO</code> 新约束名;</p><h3 id="3-约束禁用-DISABLE"><a href="#3-约束禁用-DISABLE" class="headerlink" title="3.约束禁用 DISABLE"></a>3.约束禁用 DISABLE</h3><p><code>ALTER</code> <code>TABLE</code> 表名 <code>DISABLE</code> <code>CONSTRAINT</code> 约束名;</p><h3 id="4-约束启用-ENABLE"><a href="#4-约束启用-ENABLE" class="headerlink" title="4.约束启用 ENABLE"></a>4.约束启用 ENABLE</h3><p><code>ALTER</code> <code>TABLE</code> 表名 <code>ENABLE</code> <code>CONSTRAINT</code> 约束名;</p><ul><li>在约束被禁用后，如果插入了不符合约束的数据，无法再启用约束</li><li>唯一或者主键被外键引用时，无法直接删除带有唯一或主键的表，需要先删除外键约束。</li></ul><p><strong>给表的单个字段加约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span>  <span class="keyword">TABLE</span>  表名   <span class="keyword">ADD</span>   <span class="keyword">UNIQUE</span>(字段名);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span>  <span class="keyword">TABLE</span>  表名   <span class="keyword">ADD</span>  <span class="keyword">CONSTRAINT</span> 约束名   <span class="keyword">UNIQUE</span> (字段名, 字段名 ...);</span><br></pre></td></tr></table></figure><p><strong>查询某表都有哪些约束</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  CONSTRAINT_NAME  <span class="keyword">from</span>  USER_CONSTRAINT   <span class="keyword">WHERE</span>  TABLE_NAME<span class="operator">=</span>表名    <span class="keyword">AND</span>   CONSTRAINT_TYPE<span class="operator">=</span>U;</span><br></pre></td></tr></table></figure><p><strong>查询某约束都约束了哪些字段</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  COLUMN_NAME  <span class="keyword">from</span>  USER_CONS_COLUMN  <span class="keyword">WHERE</span>  CONSTRAINT_NAME<span class="operator">=</span>约束名;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 约束 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单查询</title>
      <link href="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/1.%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/08/27/SQL%E7%AC%94%E8%AE%B0/1.%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h1><p><img src="/2022/08/27/SQL%E7%AC%94%E8%AE%B0/1.%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E5%AD%A6%E4%B9%A0/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9%E5%8F%8A%E8%80%83%E8%AF%95%E8%8C%83%E5%9B%B4.png" alt="第一阶段学习内容及考试范围"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> EMP;</span><br><span class="line"><span class="operator">*</span> 号不能直接与字段连用， 若需要连用需要写全  如：emp.<span class="operator">*</span></span><br><span class="line">单行注释 <span class="comment">--单行注释</span></span><br><span class="line">多行注释 <span class="comment">/* 多行注释 */</span></span><br></pre></td></tr></table></figure><blockquote><p>数据为数值时：右顶格显示<br>数据为字符时：左顶格显示</p></blockquote><p>别名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">给字段起别名</span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">AS</span> &quot;别名&quot; <span class="keyword">from</span> 表名;<span class="comment">--as 可以省略，别名含有数字，特殊符号时，需要用双引号括起来。</span></span><br><span class="line"><span class="keyword">select</span> empno &quot;员工编号&quot;,ename 员工姓名 <span class="keyword">from</span> emp;<span class="comment">--别名只对当此查询有效。别名是临时的修改字段名，不会永久存在。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> empno &quot;***&quot;,ename &quot;￥￥￥&quot; <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">给表起别名 注意：表别名没有A</span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> emp &quot;员工信息表&quot;;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp &quot;员工信息表&quot;;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp 员工信息表;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 员工信息表.<span class="operator">*</span>,ename <span class="keyword">from</span> emp &quot;员工信息表&quot;;<span class="comment">--通配符跟与其他字段连用的方法</span></span><br><span class="line"><span class="keyword">select</span> emp.<span class="operator">*</span>,ename <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line">注意点</span><br><span class="line"><span class="number">1.</span> <span class="keyword">as</span> 可以省略</span><br><span class="line"><span class="number">2.</span> 别名含有数字，特殊符号时，需要用双引号括起来</span><br><span class="line"><span class="number">3.</span> 别名是临时的，只对当此查询有效，不能永久存在</span><br><span class="line"><span class="comment">---------------------------------------------------------------------</span></span><br><span class="line">连接符  <span class="operator">||</span><span class="comment">--把两个列的内容通过一个列输出</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="operator">||</span> 字段 <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> ename <span class="operator">||</span> sal 姓名薪资 <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp;<span class="comment">--当我们输入表中不存在的列名时，系统会自动生成一列，列名跟值都为此列明。</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;烧钱&#x27;</span> <span class="keyword">from</span> emp;<span class="comment">--英文单引号括住的内容识别为 字符串 - 字符串是oracle 三种数据类型之一</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">连接符的应用</span><br><span class="line">输入内容为  姓名XXX 薪资为XXX</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;姓名&#x27;</span><span class="operator">||</span>ename<span class="operator">||</span><span class="string">&#x27;的薪资为：&#x27;</span><span class="operator">||</span>sal<span class="operator">||</span><span class="string">&#x27;元。&#x27;</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="comment">----------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">思考题</span><br><span class="line">字符串能不能起别名？</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;烧钱&#x27;</span> 邵乾坤 <span class="keyword">from</span> emp;<span class="comment">--可以</span></span><br><span class="line"></span><br><span class="line">别名能不能起阿拉伯数字？</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;烧钱&#x27;</span> &quot;123&quot; <span class="keyword">from</span> emp;<span class="comment">--阿拉伯数字算特殊符号，使用时需要添加双引号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;烧钱&#x27;</span> <span class="string">&#x27;123&#x27;</span> <span class="keyword">from</span> emp;<span class="comment">--字符串不能当别名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;烧钱&#x27;</span> &quot;”“&quot; <span class="keyword">from</span> emp;<span class="comment">--双引号内不能放英文双引号，无法识别，但可以放中文双引号</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ETL工程师 </category>
          
          <category> SQL基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 简单查询 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2022/08/27/test/"/>
      <url>/2022/08/27/test/</url>
      
        <content type="html"><![CDATA[<p><img src="/2022/08/27/test/20191220164226525.png" alt="img"></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
