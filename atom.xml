<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BestDream</title>
  
  <subtitle>老夫聊发少年狂...</subtitle>
  <link href="https://1803048740.github.io/atom.xml" rel="self"/>
  
  <link href="https://1803048740.github.io/"/>
  <updated>2022-08-26T06:51:28.463Z</updated>
  <id>https://1803048740.github.io/</id>
  
  <author>
    <name>脱缰的幻想</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>进阶查询</title>
    <link href="https://1803048740.github.io/2022/08/25/4.%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2/"/>
    <id>https://1803048740.github.io/2022/08/25/4.%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2/</id>
    <published>2022-08-25T09:37:55.112Z</published>
    <updated>2022-08-26T06:51:28.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进阶查询"><a href="#进阶查询" class="headerlink" title="进阶查询"></a>进阶查询</h1><h2 id="排序-order-by"><a href="#排序-order-by" class="headerlink" title="排序  order by"></a>排序  order by</h2><blockquote><p><strong>基本语法：</strong><br>select 字段 from 表 where 条件 order by 字段 asc&#x2F;desc;<br>asc 代表：升序排列–默认值，可以省略<br>desc 代表：降序排列</p></blockquote><blockquote><p>书写顺序    执行顺序<br>select        from<br>from          where<br>where         select<br>order by      order by  –order by 的书写顺序跟执行顺序都在最后</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> deptno <span class="keyword">asc</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> emp <span class="keyword">FOR</span> <span class="keyword">UPDATE</span> </span><br></pre></td></tr></table></figure><p><strong>思考题</strong></p><p>1.除了数值型，order by 还能排什么类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">三种类型都可以</span><br><span class="line"><span class="comment">--以升序为例，数值型从小到大，日期型从过去到未来，字符型首字母A&lt;Z&lt;a&lt;z,如果首字母相同依此比较</span></span><br><span class="line"><span class="comment">--数值跟字符都有时   数值 &lt; 大写字母 &lt; 小写字母</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> hiredate;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> ename;</span><br><span class="line"><span class="comment">--测试一下汉字排序</span></span><br></pre></td></tr></table></figure><p>2.排序能同时排多个字段嘛？会按照什么规则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> job,sal;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> job,sal <span class="keyword">desc</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> job <span class="keyword">desc</span>,sal <span class="keyword">desc</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> empno,sal;<span class="comment">--因为empno列没有重复数据，所以sal排序不起作用</span></span><br><span class="line">能，按照先写先排，后写后排的排序规则<span class="comment">--先写的列内有重复的内容，后写的排序才能发挥作用</span></span><br></pre></td></tr></table></figure><p>3.空值在排序时会怎么排</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> comm;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> comm <span class="keyword">desc</span>;<span class="comment">--空值在排序时大于最大值</span></span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><p>1.order by 后面除了跟正常的字段名外，还可以跟别名<br>–因为 order by 执行顺序在 select 之后，所以order by 可以认识别名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> job 职位 <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> 职位;</span><br></pre></td></tr></table></figure><p>2.可以用数字指代字段–数字几就是第几个字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select ename,job,sal,deptno from emp order by 1;</span><br><span class="line">select ename,job,sal,deptno from emp order by 2;</span><br><span class="line">select ename,job,sal,deptno from emp order by 2,3 desc;</span><br></pre></td></tr></table></figure><p>3.order by 后面可以跟运算、函数、case when，而且在 order by 后面的内容只参与排序，不显示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> nvl(comm,<span class="number">1000</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">10</span> <span class="keyword">then</span> <span class="number">2</span></span><br><span class="line">                             <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">20</span> <span class="keyword">then</span> <span class="number">1</span></span><br><span class="line">                             <span class="keyword">when</span> deptno <span class="operator">=</span> <span class="number">30</span> <span class="keyword">then</span> <span class="number">3</span></span><br><span class="line">                             <span class="keyword">end</span> <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><p><strong>4.空值排序</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nulls <span class="keyword">first</span><span class="comment">--把空值放在最前面</span></span><br><span class="line">nulls <span class="keyword">last</span><span class="comment">--把空值放在最后面</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> comm <span class="keyword">desc</span> nulls <span class="keyword">last</span>;</span><br></pre></td></tr></table></figure><h2 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h2><blockquote><p>分组 group by<br>分组条件 having</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(score) <span class="keyword">from</span> class_35;</span><br></pre></td></tr></table></figure><blockquote><p><strong>基本语法：</strong></p><ul><li><input checked="" disabled="" type="checkbox"> <font color=Brown>select 字段 from 表 where 条件 group by 字段 order by 字段;</font></li><li><input checked="" disabled="" type="checkbox"> <font color=Brown>select有的字段group by里必须有(分组函数除外)</font></li><li><input checked="" disabled="" type="checkbox"> <font color=Brown>group by 中的字段不能起别名</font></li></ul><p><strong>书写顺序    执行顺序</strong><br>select        from<br>from          where<br>where         group by –group by 看不到 select中的别名与顺序<br>group by      having<br>having        select<br>order by      order by  –order by 的书写顺序跟执行顺序都在最后</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;<span class="comment">--自带去重功能</span></span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">avg</span>(sal),<span class="built_in">sum</span>(sal),<span class="built_in">count</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> deptno,sal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;<span class="comment">--报错，组有三个，薪资有14个，条数对不上</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> deptno,job <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno,job;<span class="comment">--group by中有两个或以上字段时，分组条件变为两列值都一致时分为一组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno,job;<span class="comment">--group by中有的字段，select可以没有</span></span><br></pre></td></tr></table></figure><h3 id="思考题："><a href="#思考题：" class="headerlink" title="思考题："></a>思考题：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查询各部门最高薪资和最低薪资的差值，输出部门编号跟差值</span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">max</span>(sal) <span class="operator">-</span> <span class="built_in">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>查询薪资在<span class="number">1000</span><span class="operator">~</span><span class="number">3000</span>之间，按照有佣金和无佣金分组，输出薪资合计和平均薪资。</span><br><span class="line"><span class="comment">--难点：select执行顺序在分组之后，所以分组无法直接使用select里的case when</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;有佣金&#x27;</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;无佣金&#x27;</span> <span class="keyword">end</span> 佣金,<span class="built_in">sum</span>(sal),<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1000</span> <span class="keyword">and</span> <span class="number">3000</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;有佣金&#x27;</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;无佣金&#x27;</span> <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(sal),<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1000</span> <span class="keyword">and</span> <span class="number">3000</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;有佣金&#x27;</span> <span class="keyword">when</span> comm <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;无佣金&#x27;</span> <span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>查询<span class="number">1982</span>年以前入职的员工，按照<span class="string">&#x27;CLERK&#x27;</span> 跟 <span class="string">&#x27;不是CLERK&#x27;</span> 分组，查询岗位类型，平均薪资，最高薪资，按照最高薪资降序排序</span><br><span class="line"><span class="comment">--分组后面跟排序</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;办事员&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不是办事员&#x27;</span> <span class="keyword">end</span> 岗位类型,<span class="built_in">avg</span>(sal),<span class="built_in">max</span>(sal) <span class="keyword">from</span> emp </span><br><span class="line"><span class="keyword">where</span> hiredate <span class="operator">&lt;</span> to_date(<span class="string">&#x27;1982-01-01&#x27;</span>,<span class="string">&#x27;yyyy-mm-dd&#x27;</span>)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">case</span> <span class="keyword">when</span> job <span class="operator">=</span> <span class="string">&#x27;CLERK&#x27;</span> <span class="keyword">then</span> <span class="string">&#x27;办事员&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不是办事员&#x27;</span> <span class="keyword">end</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">3</span> <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>查询职位为经理，最低薪资大于<span class="number">2000</span>的员工的 部门编号，总薪资 并按照部门编号进行分组，最后按照总薪资降序排序</span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">sum</span>(sal)</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">where</span> job <span class="operator">=</span> <span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">and</span> <span class="built_in">min</span>(sal) <span class="operator">&gt;</span> <span class="number">2000</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> deptno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span> <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>having–专门针对分组函数的比较</strong><br><strong>–只能跟在group by后面</strong><br><strong>–having 中有的字段，group by 中必须有</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select deptno, sum(sal)</span><br><span class="line">  from emp</span><br><span class="line"> where job = &#x27;MANAGER&#x27;</span><br><span class="line"> group by deptno</span><br><span class="line">having min(sal) &gt; 2000</span><br><span class="line"> order by 2 desc;</span><br><span class="line"></span><br><span class="line">select deptno,sum(sal) from emp where job = &#x27;MANAGER&#x27; group by deptno having min(sal) &gt; 2000 order by 2 desc;</span><br></pre></td></tr></table></figure><blockquote><p><strong>where 与 having 的区别</strong></p><ol><li>where 可以单独使用，having 必须跟在 group by 后面</li><li>都是做条件筛查，where 是针对 from 后的表， having 是针对 分组 后的数据。</li><li>where 中的条件可以放在 having 中使用，但是会影响执行效率</li></ol></blockquote><hr><h2 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a>分组函数</h2><blockquote><p><strong>聚组函数(聚合函数，分组函数)</strong><br>–（在分组前）不能跟其他字段连用<br>–空值不参与统计<br>–每个分组整合后返还一个值<br>注意点：聚组函数不能放在where后面使用</p></blockquote><p><strong>MAX() –最大值</strong><br><strong>MIN() –最小值</strong><br><strong>SUM() –求和</strong><br><strong>AVG() –平均值</strong><br><strong>COUNT(1) –计数</strong><br><strong>COUNT(*) –计数</strong><br><strong>COUNT(字段) –单列计数</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">MAX</span>(sal),<span class="built_in">MIN</span>(sal) ,<span class="built_in">SUM</span>(sal) ,<span class="built_in">AVG</span>(sal) ,<span class="built_in">COUNT</span>(sal) ,<span class="built_in">COUNT</span>(comm) <span class="keyword">from</span> emp; </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> <span class="built_in">AVG</span>(sal);<span class="comment">--聚组函数不能放在where后面使用</span></span><br></pre></td></tr></table></figure><hr><h2 id="嵌套查询"><a href="#嵌套查询" class="headerlink" title="嵌套查询"></a>嵌套查询</h2><blockquote><p>含义：<br>在一个select语句中嵌套另一个select语句的方法被称为嵌套查询，<br>其中外层查询被称为 父查询&#x2F;主查询 ，内层查询被称为 子查询&#x2F;从查询，<br>子查询可以嵌套多层，子查询的结果会成为父查询的条件。</p><p>嵌套查询分为相关查询跟非相关查询两种<br>非相关的特点：子查询部分是一个完整的查询语句，可以独立运行<br>相关的特点：带有关键词 exists ，子查询部分不能独立运行，只能判断真(true)假(false)</p></blockquote><blockquote><p>特点：<br>1.子查询必定被括号包裹，跟父查询之间用逻辑运算符或exists连接(&gt; &lt; &#x3D; !&#x3D; in any all exists)<br>2.子查询可以有多层<br>3.子查询可以添加在以下几个位置<br>select 子查询–把子查询结果作为字段使用<br>from 子查询–把子查询结果作为表使用<br>where 子查询–把子查询结果作为条件使用<br>having 子查询–把子查询结果作为条件使用<br>select 字段&#x2F;子查询 from 表&#x2F;子查询 where 条件&#x2F;子查询 group by 字段 having 条件&#x2F;子查询 order by 字段;</p></blockquote><h3 id="一-where-子查询"><a href="#一-where-子查询" class="headerlink" title="一. where 子查询"></a>一. where 子查询</h3><p><strong>单行单列</strong><br><strong>单行多列</strong><br><strong>多行单列</strong><br><strong>多行多列</strong></p><p><strong>多行时用in替代等号，多列时用括号括住所有列</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查询SMITH所在部门的所有员工信息</span><br><span class="line"><span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(<span class="keyword">select</span> DEPTNO <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>);<span class="comment">--子查询与父查询条件要一一对应</span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>查询scott手下有哪些员工</span><br><span class="line"><span class="keyword">select</span> empno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SCOTT&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> mgr <span class="keyword">in</span>(<span class="keyword">select</span> empno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SCOTT&#x27;</span>);<span class="comment">--子查询与父查询字段名可以不同</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>查询公司工资最高的那个人的全部信息</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> (<span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp));<span class="comment">--嵌套查询可以有多层</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line"></span><br><span class="line"><span class="number">4</span><span class="number">-1.</span>查询与<span class="string">&#x27;smith&#x27;</span>和<span class="string">&#x27;scott&#x27;</span>同部门的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;KING&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">4</span><span class="number">-2.</span>查询与<span class="string">&#x27;YIFAN&#x27;</span>和<span class="string">&#x27;scott&#x27;</span>同部门且同薪资的员工信息  （要的结果为：<span class="number">10</span>   <span class="number">800</span>  或者  <span class="number">20</span>   <span class="number">3000</span>）</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span>(<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;YIFAN&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>)) </span><br><span class="line"><span class="keyword">and</span> sal <span class="keyword">in</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;YIFAN&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));<span class="comment">--错误，得出的结果多出预期</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> (deptno,sal) <span class="keyword">in</span>(<span class="keyword">select</span> deptno,sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;YIFAN&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">--父查询列多时报错为：没有足够的值；</span></span><br><span class="line"><span class="comment">--子查询列多时报错为：值过多；</span></span><br><span class="line"><span class="comment">--子查询值为多个时，应该用in连接，用等号会报错，报错为：单行子查询返回多个行。</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意点：</strong><br>1.子查询返还多行多列的值时，父查询的列数要一致，多行要用in，数据类型要一致，列名可以不一致。<br>2.多行时用in替代等号，多列时用括号括住所有列</p></blockquote><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>查询与<span class="string">&#x27;smith&#x27;</span>和<span class="string">&#x27;scott&#x27;</span>同岗位 或 同薪资的员工信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> JOB <span class="keyword">in</span>(<span class="keyword">select</span> JOB <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>)) </span><br><span class="line"><span class="keyword">and</span> sal <span class="keyword">in</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> JOB <span class="keyword">in</span>(<span class="keyword">select</span> JOB <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>)) </span><br><span class="line"><span class="keyword">or</span> sal <span class="keyword">in</span>(<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">in</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>查询与<span class="string">&#x27;smith&#x27;</span>和<span class="string">&#x27;scott&#x27;</span>同岗位 且 同薪资的员工信息</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> (JOB,SAL) <span class="keyword">IN</span> (<span class="keyword">SELECT</span> JOB,SAL <span class="keyword">FROM</span> EMP <span class="keyword">WHERE</span> ENAME <span class="keyword">IN</span>(<span class="string">&#x27;SMITH&#x27;</span>,<span class="string">&#x27;SCOTT&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="二-having-子查询"><a href="#二-having-子查询" class="headerlink" title="二. having 子查询"></a>二. having 子查询</h3><p><strong>–主要解决分组函数比较问题，或分组后附加条件</strong></p><p>注意：聚合函数的嵌套不能写在having后   –可以写在select后</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">输出薪资大于员工平均薪资 的所有信息</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line"></span><br><span class="line">输出部门平均薪资大于员工平均薪资 的部门编号与平均薪资</span><br><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="built_in">avg</span>(sal) <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp);</span><br></pre></td></tr></table></figure><h3 id="三-from-子查询"><a href="#三-from-子查询" class="headerlink" title="三. from 子查询"></a>三. from 子查询</h3><p><strong>–把子查询结果作为表来使用(把一张表内的部分内容当作一张表使用)，常见于解决表连接问题</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="string">&#x27;稍嫌钱&#x27;</span>,<span class="string">&#x27;邵乾坤&#x27;</span>,<span class="string">&#x27;蒋廷禹&#x27;</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">求史密斯所在部门工资最高的员工信息</span><br><span class="line"><span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>))</span><br><span class="line"><span class="keyword">where</span> sal <span class="keyword">in</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="四-select-子查询"><a href="#四-select-子查询" class="headerlink" title="四. select 子查询"></a>四. select 子查询</h3><p><strong>–子查询只能返还一个值</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp) <span class="operator">-</span> sal <span class="keyword">from</span> emp;</span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">select</span> <span class="built_in">max</span>(sal) <span class="keyword">from</span> emp) <span class="operator">-</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp),sal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">select</span> sal <span class="keyword">from</span> emp) <span class="keyword">from</span> emp;<span class="comment">--错误，子查询返回了一组值</span></span><br><span class="line"></span><br><span class="line">输出<span class="number">10</span>号部门跟<span class="number">20</span>号部门平均薪资的差</span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span><span class="number">10</span>)<span class="operator">-</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="operator">=</span><span class="number">20</span>) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="五-exists-子查询"><a href="#五-exists-子查询" class="headerlink" title="五.exists 子查询"></a>五.exists 子查询</h3><blockquote><p>1.先算外层，把外层的查询结果拿到内层，看内层是否成立，只有内层返回 true 时，外层才会执行。<br>2.内层只比较不输出（带有exists的子查询不返回任何值，只产生逻辑真值 true 或逻辑假值 false）<br>3.exists子查询不能独立运行，也不能输出，就是甲方爸爸，只管行不行<br>4.子查询的结果至少存在一条数据时，则主查询输出的结果为我们想要的结果；<br>  如果子查询找不到数据时，则主查寻结果为我们想要的数据 not exists </p></blockquote><p>查询史密斯所在部门的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> deptno <span class="keyword">in</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span> <span class="keyword">and</span> a.deptno <span class="operator">=</span> b.deptno);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> ename <span class="operator">=</span> <span class="string">&#x27;SMITH&#x27;</span> <span class="keyword">and</span> a.deptno <span class="operator">=</span> b.deptno);</span><br></pre></td></tr></table></figure><p>查询部门名称中带有字母’C’的部门下所有员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> dept;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> dept b <span class="keyword">where</span> a.deptno <span class="operator">=</span> b.deptno <span class="keyword">and</span> dname <span class="keyword">like</span> <span class="string">&#x27;%C%&#x27;</span>);</span><br></pre></td></tr></table></figure><p>查询工资大于10号部门平均工资的员工信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">10</span> <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> a.sal <span class="operator">&gt;</span> <span class="built_in">avg</span>(b.sal));</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> a.sal <span class="operator">&gt;</span> <span class="built_in">avg</span>(b.sal) <span class="keyword">and</span> deptno <span class="operator">=</span> <span class="number">10</span> );<span class="comment">--效率低,分组不能省略</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">where</span> <span class="keyword">exists</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">10</span> <span class="keyword">having</span> a.sal <span class="operator">&gt;</span> <span class="built_in">avg</span>(b.sal));</span><br></pre></td></tr></table></figure><p>查询哪个部门的平均薪资高于30号部门的平均薪资，显示出其部门编号跟人数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno,<span class="built_in">count</span>(<span class="number">1</span>) <span class="keyword">from</span> emp a <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="keyword">exists</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emp b <span class="keyword">where</span> deptno <span class="operator">=</span> <span class="number">30</span> <span class="keyword">having</span> <span class="built_in">avg</span>(a.sal) <span class="operator">&gt;</span> <span class="built_in">avg</span>(b.sal));</span><br></pre></td></tr></table></figure><p>显示出工资大于本部门平均工资的员工姓名，工资</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ENAME,SAL,deptno <span class="keyword">FROM</span> EMP A <span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> </span><br><span class="line">(<span class="keyword">SELECT</span> <span class="number">1</span> <span class="keyword">FROM</span> EMP B <span class="keyword">WHERE</span> A.DEPTNO <span class="operator">=</span> B.DEPTNO <span class="keyword">GROUP</span> <span class="keyword">BY</span> DEPTNO <span class="keyword">HAVING</span> A.SAL <span class="operator">&gt;</span> <span class="built_in">AVG</span>(B.SAL)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(sal),deptno <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</span><br></pre></td></tr></table></figure><h4 id="exists-跟-in的区别"><a href="#exists-跟-in的区别" class="headerlink" title="exists 跟 in的区别"></a>exists 跟 in的区别</h4><p><strong>1、适用表的类型不同。</strong></p><p>（“exists的效率比in的高”的说法不完全正确，要视情况而定。)<br>in适用于子查询结果集小而外面的表结果集大的情况。exists适用于外面的表结果集小而子查询结果集大的情况。<br><strong>2、子查询关联不同。</strong><br>exists一般都是关联子查询。对于关联子查询，必须先执行外层查询，接着对所有通过过滤条件的记录，执行内层查询。<br>外层查询和内层查询相互依赖，因为外层查询会把数据传递给内层查询。<br>in则一般都是非关联子查询，非关联子查询则必须先完成内层查询之后，外层查询才能介入。<br><strong>3、执行次数不同。</strong><br>IN 语句：只执行一次，确定给定的值是否与子查询或列表中的值相匹配。<br>in在查询的时候，首先查询子查询的表，然后将内表和外表做一个笛卡尔积，然后按照条件进行筛选。<br>所以相对内表比较小的时候，in的速度较快。</p><blockquote><p>EXISTS语句：执行次数根据表的长度而定。指定一个子查询，检测行的存在。遍历循环外表，<br>然后看外表中的记录有没有和内表的数据一样的。匹配上就将结果放入结果集中。</p></blockquote><img src="4.%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2.assets/20171129155351826.png" alt="20171129155351826" style="zoom:200%;" /><h2 id="表连接"><a href="#表连接" class="headerlink" title="表连接"></a>表连接</h2><p><strong>什么是表连接</strong><br>将几张不同表内的字段连接在一起的方法</p><p><strong>什么时候使用表连接</strong><br>当输出的字段来源至少需要两张表时，必须使用表连接</p><p><strong>输出部门编号为20 的员工的姓名跟部门所在地</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,loc <span class="keyword">from</span> emp , dept <span class="keyword">where</span> emp.d;</span><br></pre></td></tr></table></figure><blockquote><p><strong>表连接中的注意点：</strong><br>1.表连接中共有的字段会出现两次并自动升序排列<br>2.表连接的连接条件不是列名相同，而是列的数据类型相同</p></blockquote><h3 id="一-内连接"><a href="#一-内连接" class="headerlink" title="一. 内连接"></a>一. 内连接</h3><p><strong>inner join</strong></p><p>inner 是表连接默认类型，可以省略</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--按照关联条件进行关联，将两张表中符合关联条件的内容全部输出</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">inner</span> <span class="keyword">join</span> 表B <span class="keyword">on</span> 两个表共有的字段;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,loc <span class="keyword">from</span> emp a <span class="keyword">inner</span> <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (emp a <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> deptno,sal,ename,dname <span class="keyword">from</span> emp a <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;<span class="comment">--报错，未明确定义列</span></span><br><span class="line"><span class="keyword">select</span> a.deptno,sal,ename,dname <span class="keyword">from</span> emp a <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br><span class="line"><span class="keyword">select</span> b.deptno,sal,ename,dname <span class="keyword">from</span> emp a <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br><span class="line"><span class="comment">--因为deptno列是两张表都有的列，在使用时必须声明使用哪张表中的列</span></span><br></pre></td></tr></table></figure><h3 id="二-外连接"><a href="#二-外连接" class="headerlink" title="二. 外连接"></a>二. 外连接</h3><p><strong>(左外连接，右外连接，全外连接)</strong></p><p><strong>按照关联条件进行关联，将两张表中符合关联条件的内容全部输出，不符合关联条件的部分根据情况输出</strong></p><h4 id="1-左外连接"><a href="#1-左外连接" class="headerlink" title="1.左外连接"></a>1.左外连接</h4><p> <strong>left join</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--按照关联条件进行关联，以左表数据为主（左表内容全部输出，右边没用对应关系的部分用null填充）</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">left</span> <span class="keyword">join</span> 表B <span class="keyword">on</span> 两个表共有的字段;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> DEPT a <span class="keyword">left</span> <span class="keyword">join</span> EMP b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><h4 id="2-右外连接"><a href="#2-右外连接" class="headerlink" title="2.右外连接"></a>2.右外连接</h4><p> <strong>right join</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--按照关联条件进行关联，以右表数据为主（右表内容全部输出，左边没用对应关系的部分用null填充）</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">right</span> <span class="keyword">join</span> 表B <span class="keyword">on</span> 两个表共有的字段;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">right</span> <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><h4 id="3-全外连接"><a href="#3-全外连接" class="headerlink" title="3.全外连接"></a>3.全外连接</h4><p> <strong>full join</strong> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--按照关联条件进行关联，所有数据全部输出（没有对应关系的部分用null填充）</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">full</span> <span class="keyword">join</span> 表B <span class="keyword">on</span> 两个表共有的字段;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">full</span> <span class="keyword">join</span> dept b <span class="keyword">on</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><h3 id="三-笛卡尔积"><a href="#三-笛卡尔积" class="headerlink" title="三. 笛卡尔积"></a>三. 笛卡尔积</h3><p> <strong>cross join</strong></p><p><strong>容易造成死机，只有两张表中数据都不多的时候可以使用</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--交叉连接，不需要关联条件，把两张表中所有的行进行交叉输出</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">cross</span> <span class="keyword">join</span> 表B;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">cross</span> <span class="keyword">join</span> dept b;</span><br></pre></td></tr></table></figure><hr><h4 id="特殊的连接方式"><a href="#特殊的连接方式" class="headerlink" title="特殊的连接方式"></a>特殊的连接方式</h4><p>–需要关联条件的名称跟数据类型均相同</p><h5 id="一-自然连接-natural"><a href="#一-自然连接-natural" class="headerlink" title="一. 自然连接  natural"></a>一. 自然连接  natural</h5><p><strong>结果等同于内连接</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--不需要写关联条件，自然连接会自动查找两个表中同名字段进行关联（有几个同名字段关联几个）</span></span><br><span class="line"><span class="comment">--被关联的字段会出现在表的最前面，并且只出现一次</span></span><br><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">natural</span> <span class="keyword">join</span> 表B;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">natural</span> <span class="keyword">join</span> dept b;</span><br></pre></td></tr></table></figure><h5 id="二-不使用on-使用-using"><a href="#二-不使用on-使用-using" class="headerlink" title="二. 不使用on 使用 using()"></a>二. 不使用on 使用 using()</h5><p>–使用using()关键词关联同名字段时，多个同名字段之间用英文逗号隔开<br>–在查询结果当中，关联字段会放在最前面且只出现一次</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段 <span class="keyword">from</span> 表A <span class="keyword">inner</span> <span class="keyword">join</span> 表B <span class="keyword">using</span>(两个表共有的字段);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">inner</span> <span class="keyword">join</span> dept b <span class="keyword">using</span>(deptno);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a <span class="keyword">inner</span> <span class="keyword">join</span> emp b <span class="keyword">using</span>(empno,ename,job);</span><br></pre></td></tr></table></figure><hr><h2 id="一-自连接"><a href="#一-自连接" class="headerlink" title="一. 自连接"></a>一. 自连接</h2><p><strong>–自己链接自己</strong></p><p>查询并输出所有的员工编号，姓名，岗位，上级员工姓名，上级员工岗位</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.deptno,a.ename,a.job,b.ename,b.job <span class="keyword">from</span> emp a <span class="keyword">left</span> <span class="keyword">join</span> emp b <span class="keyword">on</span> a.mgr <span class="operator">=</span> b.empno;</span><br></pre></td></tr></table></figure><h2 id="二-不等连接"><a href="#二-不等连接" class="headerlink" title="二. 不等连接"></a>二. 不等连接</h2><p><strong>–不使用等于号的连接方式</strong></p><p>select * from salgrade;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查询员工姓名，薪资，薪资等级</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,sal,grade <span class="keyword">from</span> emp a <span class="keyword">join</span> salgrade b <span class="keyword">on</span> sal <span class="keyword">between</span> losal <span class="keyword">and</span> hisal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,sal,grade <span class="keyword">from</span> emp a <span class="keyword">join</span> salgrade b <span class="keyword">on</span> sal <span class="operator">&gt;=</span> losal <span class="keyword">and</span> sal <span class="operator">&lt;=</span> hisal;</span><br></pre></td></tr></table></figure><h2 id="三-oracle-独有的连接方式"><a href="#三-oracle-独有的连接方式" class="headerlink" title="三.oracle 独有的连接方式"></a>三.oracle 独有的连接方式</h2><p><strong>–能看懂即可，不要使用</strong></p><p><strong>笛卡尔积&#x2F;交叉连接</strong> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a,dept b;</span><br></pre></td></tr></table></figure><p><strong>内连接</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a,dept b <span class="keyword">where</span> a.deptno <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><p><strong>左外连接</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a,dept b <span class="keyword">where</span> a.deptno <span class="operator">=</span> b.deptno(<span class="operator">+</span>);</span><br></pre></td></tr></table></figure><p><strong>右外连接</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp a,dept b <span class="keyword">where</span> a.deptno(<span class="operator">+</span>) <span class="operator">=</span> b.deptno;</span><br></pre></td></tr></table></figure><blockquote><p>注意点：左外连接右表带加号，右外连接左表带加号</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;进阶查询&quot;&gt;&lt;a href=&quot;#进阶查询&quot; class=&quot;headerlink&quot; title=&quot;进阶查询&quot;&gt;&lt;/a&gt;进阶查询&lt;/h1&gt;&lt;h2 id=&quot;排序-order-by&quot;&gt;&lt;a href=&quot;#排序-order-by&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>知识管理展示</title>
    <link href="https://1803048740.github.io/2022/08/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/1.%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B1%95%E7%A4%BA/"/>
    <id>https://1803048740.github.io/2022/08/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/1.%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%B1%95%E7%A4%BA/</id>
    <published>2022-08-25T08:40:20.120Z</published>
    <updated>2022-08-26T06:54:28.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="知识管理展示"><a href="#知识管理展示" class="headerlink" title="知识管理展示"></a>知识管理展示</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;知识管理展示&quot;&gt;&lt;a href=&quot;#知识管理展示&quot; class=&quot;headerlink&quot; title=&quot;知识管理展示&quot;&gt;&lt;/a&gt;知识管理展示&lt;/h1&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>天马行空</title>
    <link href="https://1803048740.github.io/2022/08/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/0.%E5%A4%A9%E9%A9%AC%E8%A1%8C%E7%A9%BA/"/>
    <id>https://1803048740.github.io/2022/08/25/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/0.%E5%A4%A9%E9%A9%AC%E8%A1%8C%E7%A9%BA/</id>
    <published>2022-08-25T08:31:19.813Z</published>
    <updated>2022-08-26T06:53:23.953Z</updated>
    
    <content type="html"><![CDATA[<h1 id="天马行空"><a href="#天马行空" class="headerlink" title="天马行空"></a>天马行空</h1><blockquote><p>本文收录所有零碎想法，也许不切实际，也许很魔幻…</p></blockquote><h2 id="一、万能MarkDown"><a href="#一、万能MarkDown" class="headerlink" title="一、万能MarkDown"></a>一、万能MarkDown</h2><p>⭐Typora + Jupyter</p><p><strong>简介：</strong></p><table><thead><tr><th>特点</th><th>实现</th></tr></thead><tbody><tr><td>1.实时渲染</td><td></td></tr><tr><td>2.自定义样式</td><td></td></tr><tr><td>3.代码样式支持</td><td></td></tr><tr><td>4.实时运行SQL</td><td></td></tr></tbody></table><h2 id="二、可视化解析代码"><a href="#二、可视化解析代码" class="headerlink" title="二、可视化解析代码"></a>二、可视化解析代码</h2><h3 id="2-1-可视化生成LINUX语句"><a href="#2-1-可视化生成LINUX语句" class="headerlink" title="2.1 可视化生成LINUX语句"></a>2.1 可视化生成LINUX语句</h3><p>1.简化学习linux命令的成本</p><p>2.命令翻译</p><p>3.快速生成命令</p><h3 id="2-2-可视化生成PLSQL语句"><a href="#2-2-可视化生成PLSQL语句" class="headerlink" title="2.2 可视化生成PLSQL语句"></a>2.2 可视化生成PLSQL语句</h3><p>实现可能：</p><p>1.参考拖拽编程block</p><p>2.程序员鱼皮json转sql</p><h2 id="三、共享API"><a href="#三、共享API" class="headerlink" title="三、共享API"></a>三、共享API</h2><p>共享API –&gt; 服务器负载提升 –&gt; 负载均衡</p><p><strong>理念：</strong></p><p>1.所有需要使用此api的用户，都有将此api共享的义务（即在用户服务器上对外共享此api）</p><p><strong>注意点：</strong></p><p>1.需要统一管理用户开放的api</p><p>2.避免用户使用恶意代码</p><h2 id="四、小白玩转互联网"><a href="#四、小白玩转互联网" class="headerlink" title="四、小白玩转互联网"></a>四、小白玩转互联网</h2><p>要求：需要从老年人的角度开发，针对老年用户开发</p><p>功能点：</p><p>一键下载&#x2F;删除软件</p><p>快速打开应用</p><p>简化操作步骤（如：网购，快递）</p><h2 id="五、Markdown导航页"><a href="#五、Markdown导航页" class="headerlink" title="五、Markdown导航页"></a>五、Markdown导航页</h2><p>示例：<a href="https://nav.sankki.com/">https://nav.sankki.com/</a></p><p>使用markdown语法快速生成导航页</p><h2 id="六、语音自动写代码"><a href="#六、语音自动写代码" class="headerlink" title="六、语音自动写代码"></a>六、语音自动写代码</h2><p>通过描述代码让机器帮助你完成代码的编写工作。</p><p>口述 –&gt; 代码</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;天马行空&quot;&gt;&lt;a href=&quot;#天马行空&quot; class=&quot;headerlink&quot; title=&quot;天马行空&quot;&gt;&lt;/a&gt;天马行空&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;本文收录所有零碎想法，也许不切实际，也许很魔幻…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://1803048740.github.io/2022/08/25/hello-world/"/>
    <id>https://1803048740.github.io/2022/08/25/hello-world/</id>
    <published>2022-08-25T08:12:35.699Z</published>
    <updated>2022-08-26T07:55:23.121Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>    <div id="aplayer-ZaledWnv" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="000PeZCQ1i4XVs" data-server="tencent" data-type="artist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#3F51B5"    ></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
